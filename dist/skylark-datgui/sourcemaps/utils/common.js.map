{"version":3,"sources":["utils/common.js"],"names":["define","ARR_EACH","Array","prototype","forEach","ARR_SLICE","slice","BREAK","extend","target","this","each","call","arguments","obj","isObject","Object","keys","key","isUndefined","bind","defaults","compose","toCall","args","i","length","apply","itr","scope","l","defer","fnc","setTimeout","debounce","func","threshold","callImmediately","timeout","callNow","clearTimeout","toArray","undefined","isNull","isNaN","isArray","constructor","isNumber","isString","isBoolean","isFunction","Function"],"mappings":";;;;;;;AAAAA,OAAO,WACH,aACA,MAAMC,EAAWC,MAAMC,UAAUC,QAC3BC,EAAYH,MAAMC,UAAUG,MA+GlC,OA7GIC,SACAC,OAAQ,SAAUC,GASd,OARAC,KAAKC,KAAKN,EAAUO,KAAKC,UAAW,GAAI,SAAUC,IACjCJ,KAAKK,SAASD,GAAOE,OAAOC,KAAKH,OACzCV,QAAQ,SAAUc,GACdR,KAAKS,YAAYL,EAAII,MACtBT,EAAOS,GAAOJ,EAAII,KAExBE,KAAKV,QACRA,MACID,GAEXY,SAAU,SAAUZ,GAShB,OARAC,KAAKC,KAAKN,EAAUO,KAAKC,UAAW,GAAI,SAAUC,IACjCJ,KAAKK,SAASD,GAAOE,OAAOC,KAAKH,OACzCV,QAAQ,SAAUc,GACfR,KAAKS,YAAYV,EAAOS,MACxBT,EAAOS,GAAOJ,EAAII,KAExBE,KAAKV,QACRA,MACID,GAEXa,QAAS,WACL,MAAMC,EAASlB,EAAUO,KAAKC,WAC9B,OAAO,WACH,IAAIW,EAAOnB,EAAUO,KAAKC,WAC1B,IAAK,IAAIY,EAAIF,EAAOG,OAAS,EAAGD,GAAK,EAAGA,IACpCD,GAAQD,EAAOE,GAAGE,MAAMjB,KAAMc,IAElC,OAAOA,EAAK,KAGpBb,KAAM,SAAUG,EAAKc,EAAKC,GACtB,GAAKf,EAGL,GAAIb,GAAYa,EAAIV,SAAWU,EAAIV,UAAYH,EAC3Ca,EAAIV,QAAQwB,EAAKC,QACd,GAAIf,EAAIY,SAAWZ,EAAIY,OAAS,EAAG,CACtC,IAAIR,EACAY,EACJ,IAAKZ,EAAM,EAAGY,EAAIhB,EAAIY,OAAQR,EAAMY,EAAGZ,IACnC,GAAIA,KAAOJ,GAAOc,EAAIhB,KAAKiB,EAAOf,EAAII,GAAMA,KAASR,KAAKH,MACtD,YAIR,IAAK,MAAMW,KAAOJ,EACd,GAAIc,EAAIhB,KAAKiB,EAAOf,EAAII,GAAMA,KAASR,KAAKH,MACxC,QAKhBwB,MAAO,SAAUC,GACbC,WAAWD,EAAK,IAEpBE,SAAU,SAAUC,EAAMC,EAAWC,GACjC,IAAIC,EACJ,OAAO,WACH,MAAMxB,EAAMJ,KACNc,EAAOX,UAMb,MAAM0B,EAAUF,IAAoBC,EACpCE,aAAaF,GACbA,EAAUL,WAPV,WACIK,EAAU,KACLD,GACDF,EAAKR,MAAMb,EAAKU,IAIMY,GAC1BG,GACAJ,EAAKR,MAAMb,EAAKU,KAI5BiB,QAAS,SAAU3B,GACf,OAAIA,EAAI2B,QACG3B,EAAI2B,UACRpC,EAAUO,KAAKE,IAE1BK,YAAa,SAAUL,GACnB,YAAe4B,IAAR5B,GAEX6B,OAAQ,SAAU7B,GACd,OAAe,OAARA,GAEX8B,MAAO,SAAU9B,GACb,OAAO8B,MAAM9B,IAEjB+B,QAAS3C,MAAM2C,SAAW,SAAU/B,GAChC,OAAOA,EAAIgC,cAAgB5C,OAE/Ba,SAAU,SAAUD,GAChB,OAAOA,IAAQE,OAAOF,IAE1BiC,SAAU,SAAUjC,GAChB,OAAOA,IAAQA,EAAM,GAEzBkC,SAAU,SAAUlC,GAChB,OAAOA,IAAQA,EAAM,IAEzBmC,UAAW,SAAUnC,GACjB,OAAe,IAARA,IAAyB,IAARA,GAE5BoC,WAAY,SAAUpC,GAClB,OAAOA,aAAeqC","file":"../../utils/common.js","sourcesContent":["define(function () {\n    'use strict';\n    const ARR_EACH = Array.prototype.forEach;\n    const ARR_SLICE = Array.prototype.slice;\n    const Common = {\n        BREAK: {},\n        extend: function (target) {\n            this.each(ARR_SLICE.call(arguments, 1), function (obj) {\n                const keys = this.isObject(obj) ? Object.keys(obj) : [];\n                keys.forEach(function (key) {\n                    if (!this.isUndefined(obj[key])) {\n                        target[key] = obj[key];\n                    }\n                }.bind(this));\n            }, this);\n            return target;\n        },\n        defaults: function (target) {\n            this.each(ARR_SLICE.call(arguments, 1), function (obj) {\n                const keys = this.isObject(obj) ? Object.keys(obj) : [];\n                keys.forEach(function (key) {\n                    if (this.isUndefined(target[key])) {\n                        target[key] = obj[key];\n                    }\n                }.bind(this));\n            }, this);\n            return target;\n        },\n        compose: function () {\n            const toCall = ARR_SLICE.call(arguments);\n            return function () {\n                let args = ARR_SLICE.call(arguments);\n                for (let i = toCall.length - 1; i >= 0; i--) {\n                    args = [toCall[i].apply(this, args)];\n                }\n                return args[0];\n            };\n        },\n        each: function (obj, itr, scope) {\n            if (!obj) {\n                return;\n            }\n            if (ARR_EACH && obj.forEach && obj.forEach === ARR_EACH) {\n                obj.forEach(itr, scope);\n            } else if (obj.length === obj.length + 0) {\n                let key;\n                let l;\n                for (key = 0, l = obj.length; key < l; key++) {\n                    if (key in obj && itr.call(scope, obj[key], key) === this.BREAK) {\n                        return;\n                    }\n                }\n            } else {\n                for (const key in obj) {\n                    if (itr.call(scope, obj[key], key) === this.BREAK) {\n                        return;\n                    }\n                }\n            }\n        },\n        defer: function (fnc) {\n            setTimeout(fnc, 0);\n        },\n        debounce: function (func, threshold, callImmediately) {\n            let timeout;\n            return function () {\n                const obj = this;\n                const args = arguments;\n                function delayed() {\n                    timeout = null;\n                    if (!callImmediately)\n                        func.apply(obj, args);\n                }\n                const callNow = callImmediately || !timeout;\n                clearTimeout(timeout);\n                timeout = setTimeout(delayed, threshold);\n                if (callNow) {\n                    func.apply(obj, args);\n                }\n            };\n        },\n        toArray: function (obj) {\n            if (obj.toArray)\n                return obj.toArray();\n            return ARR_SLICE.call(obj);\n        },\n        isUndefined: function (obj) {\n            return obj === undefined;\n        },\n        isNull: function (obj) {\n            return obj === null;\n        },\n        isNaN: function (obj) {\n            return isNaN(obj);\n        },\n        isArray: Array.isArray || function (obj) {\n            return obj.constructor === Array;\n        },\n        isObject: function (obj) {\n            return obj === Object(obj);\n        },\n        isNumber: function (obj) {\n            return obj === obj + 0;\n        },\n        isString: function (obj) {\n            return obj === obj + '';\n        },\n        isBoolean: function (obj) {\n            return obj === false || obj === true;\n        },\n        isFunction: function (obj) {\n            return obj instanceof Function;\n        }\n    };\n    return Common;\n});"]}