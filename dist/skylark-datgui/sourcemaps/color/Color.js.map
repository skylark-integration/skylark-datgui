{"version":3,"sources":["color/Color.js"],"names":["define","interpret","math","colorToString","common","Color","[object Object]","this","__state","apply","arguments","Error","a","conversion","write","defineRGBComponent","target","component","componentHexIndex","Object","defineProperty","get","space","recalculateRGB","set","v","defineHSVComponent","recalculateHSV","color","component_from_hex","hex","extend","hsv_to_rgb","h","s","result","rgb_to_hsv","r","g","b","isNaN","isUndefined","COMPONENTS","prototype","rgb_to_hex"],"mappings":"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","file":"../../color/Color.js","sourcesContent":["define([\n    './interpret',\n    './math',\n    './toString',\n    '../utils/common'\n], function (interpret, math, colorToString, common) {\n    'use strict';\n    class Color  {\n        constructor() {\n            this.__state = interpret.apply(this, arguments);\n            if (this.__state === false) {\n                throw new Error('Failed tcomponent_from_hexo interpret color arguments');\n            }\n            this.__state.a = this.__state.a || 1;\n        }\n        toString() {\n            return colorToString(this);\n        }\n        toHexString() {\n            return colorToString(this, true);\n        }\n        toOriginal() {\n            return this.__state.conversion.write(this);\n        }\n    }\n    function defineRGBComponent(target, component, componentHexIndex) {\n        Object.defineProperty(target, component, {\n            get: function () {\n                if (this.__state.space === 'RGB') {\n                    return this.__state[component];\n                }\n                Color.recalculateRGB(this, component, componentHexIndex);\n                return this.__state[component];\n            },\n            set: function (v) {\n                if (this.__state.space !== 'RGB') {\n                    Color.recalculateRGB(this, component, componentHexIndex);\n                    this.__state.space = 'RGB';\n                }\n                this.__state[component] = v;\n            }\n        });\n    }\n    function defineHSVComponent(target, component) {\n        Object.defineProperty(target, component, {\n            get: function () {\n                if (this.__state.space === 'HSV') {\n                    return this.__state[component];\n                }\n                Color.recalculateHSV(this);\n                return this.__state[component];\n            },\n            set: function (v) {\n                if (this.__state.space !== 'HSV') {\n                    Color.recalculateHSV(this);\n                    this.__state.space = 'HSV';\n                }\n                this.__state[component] = v;\n            }\n        });\n    }\n    Color.recalculateRGB = function (color, component, componentHexIndex) {\n        if (color.__state.space === 'HEX') {\n            color.__state[component] = math.component_from_hex(color.__state.hex, componentHexIndex);\n        } else if (color.__state.space === 'HSV') {\n            common.extend(color.__state, math.hsv_to_rgb(color.__state.h, color.__state.s, color.__state.v));\n        } else {\n            throw new Error('Corrupted color state');\n        }\n    };\n    Color.recalculateHSV = function (color) {\n        const result = math.rgb_to_hsv(color.r, color.g, color.b);\n        common.extend(color.__state, {\n            s: result.s,\n            v: result.v\n        });\n        if (!common.isNaN(result.h)) {\n            color.__state.h = result.h;\n        } else if (common.isUndefined(color.__state.h)) {\n            color.__state.h = 0;\n        }\n    };\n    Color.COMPONENTS = [\n        'r',\n        'g',\n        'b',\n        'h',\n        's',\n        'v',\n        'hex',\n        'a'\n    ];\n    defineRGBComponent(Color.prototype, 'r', 2);\n    defineRGBComponent(Color.prototype, 'g', 1);\n    defineRGBComponent(Color.prototype, 'b', 0);\n    defineHSVComponent(Color.prototype, 'h');\n    defineHSVComponent(Color.prototype, 's');\n    defineHSVComponent(Color.prototype, 'v');\n    Object.defineProperty(Color.prototype, 'a', {\n        get: function () {\n            return this.__state.a;\n        },\n        set: function (v) {\n            this.__state.a = v;\n        }\n    });\n    Object.defineProperty(Color.prototype, 'hex', {\n        get: function () {\n            if (this.__state.space !== 'HEX') {\n                this.__state.hex = math.rgb_to_hex(this.r, this.g, this.b);\n                this.__state.space = 'HEX';\n            }\n            return this.__state.hex;\n        },\n        set: function (v) {\n            this.__state.space = 'HEX';\n            this.__state.hex = v;\n        }\n    });\n    return Color;\n});"]}