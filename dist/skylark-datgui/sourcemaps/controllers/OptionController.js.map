{"version":3,"sources":["controllers/OptionController.js"],"names":["define","Controller","dom","common","[object Object]","object","property","opts","super","options","_this","this","__select","document","createElement","isArray","map","each","element","value","key","opt","innerHTML","setAttribute","appendChild","updateDisplay","bind","desiredValue","selectedIndex","setValue","domElement","v","toReturn","__onFinishChange","call","getValue","isActive"],"mappings":";;;;;;;AAAAA,QACI,eACA,aACA,mBACD,SAAUC,EAAYC,EAAKC,GAC1B,aAyCA,qBAxC+BF,EAC3BG,YAAYC,EAAQC,EAAUC,GAC1BC,MAAMH,EAAQC,GACd,IAAIG,EAAUF,EACd,MAAMG,EAAQC,KAEd,GADAA,KAAKC,SAAWC,SAASC,cAAc,UACnCX,EAAOY,QAAQN,GAAU,CACzB,MAAMO,KACNb,EAAOc,KAAKR,EAAS,SAAUS,GAC3BF,EAAIE,GAAWA,IAEnBT,EAAUO,EAEdb,EAAOc,KAAKR,EAAS,SAAUU,EAAOC,GAClC,MAAMC,EAAMR,SAASC,cAAc,UACnCO,EAAIC,UAAYF,EAChBC,EAAIE,aAAa,QAASJ,GAC1BT,EAAME,SAASY,YAAYH,KAE/BV,KAAKc,gBACLvB,EAAIwB,KAAKf,KAAKC,SAAU,SAAU,WAC9B,MAAMe,EAAehB,KAAKF,QAAQE,KAAKiB,eAAeT,MACtDT,EAAMmB,SAASF,KAEnBhB,KAAKmB,WAAWN,YAAYb,KAAKC,UAErCR,SAAS2B,GACL,MAAMC,EAAWxB,MAAMqB,SAASE,GAIhC,OAHIpB,KAAKsB,kBACLtB,KAAKsB,iBAAiBC,KAAKvB,KAAMA,KAAKwB,YAEnCH,EAEX5B,gBACI,OAAIF,EAAIkC,SAASzB,KAAKC,UACXD,MACXA,KAAKC,SAASO,MAAQR,KAAKwB,WACpB3B,MAAMiB","file":"../../controllers/OptionController.js","sourcesContent":["define([\n    './Controller',\n    '../dom/dom',\n    '../utils/common'\n], function (Controller, dom, common) {\n    'use strict';\n    class OptionController extends Controller {\n        constructor(object, property, opts) {\n            super(object, property);\n            let options = opts;\n            const _this = this;\n            this.__select = document.createElement('select');\n            if (common.isArray(options)) {\n                const map = {};\n                common.each(options, function (element) {\n                    map[element] = element;\n                });\n                options = map;\n            }\n            common.each(options, function (value, key) {\n                const opt = document.createElement('option');\n                opt.innerHTML = key;\n                opt.setAttribute('value', value);\n                _this.__select.appendChild(opt);\n            });\n            this.updateDisplay();\n            dom.bind(this.__select, 'change', function () {\n                const desiredValue = this.options[this.selectedIndex].value;\n                _this.setValue(desiredValue);\n            });\n            this.domElement.appendChild(this.__select);\n        }\n        setValue(v) {\n            const toReturn = super.setValue(v);\n            if (this.__onFinishChange) {\n                this.__onFinishChange.call(this, this.getValue());\n            }\n            return toReturn;\n        }\n        updateDisplay() {\n            if (dom.isActive(this.__select))\n                return this;\n            this.__select.value = this.getValue();\n            return super.updateDisplay();\n        }\n    }\n    return OptionController;\n});"]}