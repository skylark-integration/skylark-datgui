{"version":3,"sources":["controllers/NumberController.js"],"names":["define","Controller","common","numDecimals","x","_x","toString","indexOf","length","[object Object]","object","property","params","super","_params","this","__min","min","__max","max","__step","step","isUndefined","initialValue","__impliedStep","Math","pow","floor","log","abs","LN10","__precision","v","_v","undefined","round","setValue","minValue","maxValue","stepValue"],"mappings":";;;;;;;AAAAA,QACI,eACA,mBACD,SAAUC,EAAYC,GACrB,aACA,SAASC,EAAYC,GACjB,MAAMC,EAAKD,EAAEE,WACb,OAAID,EAAGE,QAAQ,MAAQ,EACZF,EAAGG,OAASH,EAAGE,QAAQ,KAAO,EAElC,EA+CX,qBA7C+BN,EAC3BQ,YAAYC,EAAQC,EAAUC,GAC1BC,MAAMH,EAAQC,GACd,MAAMG,EAAUF,MAChBG,KAAKC,MAAQF,EAAQG,IACrBF,KAAKG,MAAQJ,EAAQK,IACrBJ,KAAKK,OAASN,EAAQO,KAClBnB,EAAOoB,YAAYP,KAAKK,QACE,IAAtBL,KAAKQ,aACLR,KAAKS,cAAgB,EAErBT,KAAKS,cAAgBC,KAAKC,IAAI,GAAID,KAAKE,MAAMF,KAAKG,IAAIH,KAAKI,IAAId,KAAKQ,eAAiBE,KAAKK,OAAS,GAGvGf,KAAKS,cAAgBT,KAAKK,OAE9BL,KAAKgB,YAAc5B,EAAYY,KAAKS,eAExCf,SAASuB,GACL,IAAIC,EAAKD,EAST,YARmBE,IAAfnB,KAAKC,OAAuBiB,EAAKlB,KAAKC,MACtCiB,EAAKlB,KAAKC,WACYkB,IAAfnB,KAAKG,OAAuBe,EAAKlB,KAAKG,QAC7Ce,EAAKlB,KAAKG,YAEMgB,IAAhBnB,KAAKK,QAAwBa,EAAKlB,KAAKK,QAAW,IAClDa,EAAKR,KAAKU,MAAMF,EAAKlB,KAAKK,QAAUL,KAAKK,QAEtCP,MAAMuB,SAASH,GAE1BxB,IAAI4B,GAEA,OADAtB,KAAKC,MAAQqB,EACNtB,KAEXN,IAAI6B,GAEA,OADAvB,KAAKG,MAAQoB,EACNvB,KAEXN,KAAK8B,GAID,OAHAxB,KAAKK,OAASmB,EACdxB,KAAKS,cAAgBe,EACrBxB,KAAKgB,YAAc5B,EAAYoC,GACxBxB","file":"../../controllers/NumberController.js","sourcesContent":["define([\n    './Controller',\n    '../utils/common'\n], function (Controller, common) {\n    'use strict';\n    function numDecimals(x) {\n        const _x = x.toString();\n        if (_x.indexOf('.') > -1) {\n            return _x.length - _x.indexOf('.') - 1;\n        }\n        return 0;\n    }\n    class NumberController extends Controller {\n        constructor(object, property, params) {\n            super(object, property);\n            const _params = params || {};\n            this.__min = _params.min;\n            this.__max = _params.max;\n            this.__step = _params.step;\n            if (common.isUndefined(this.__step)) {\n                if (this.initialValue === 0) {\n                    this.__impliedStep = 1;\n                } else {\n                    this.__impliedStep = Math.pow(10, Math.floor(Math.log(Math.abs(this.initialValue)) / Math.LN10)) / 10;\n                }\n            } else {\n                this.__impliedStep = this.__step;\n            }\n            this.__precision = numDecimals(this.__impliedStep);\n        }\n        setValue(v) {\n            let _v = v;\n            if (this.__min !== undefined && _v < this.__min) {\n                _v = this.__min;\n            } else if (this.__max !== undefined && _v > this.__max) {\n                _v = this.__max;\n            }\n            if (this.__step !== undefined && _v % this.__step !== 0) {\n                _v = Math.round(_v / this.__step) * this.__step;\n            }\n            return super.setValue(_v);\n        }\n        min(minValue) {\n            this.__min = minValue;\n            return this;\n        }\n        max(maxValue) {\n            this.__max = maxValue;\n            return this;\n        }\n        step(stepValue) {\n            this.__step = stepValue;\n            this.__impliedStep = stepValue;\n            this.__precision = numDecimals(stepValue);\n            return this;\n        }\n    }\n    return NumberController;\n});"]}