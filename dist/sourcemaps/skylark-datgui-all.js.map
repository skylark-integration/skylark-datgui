{"version":3,"sources":["skylark-datgui-all.js"],"names":["define","obj1","path","obj2","split","length","ns","i","name","_attach","skylark","attach","obj","main","color","forceCSSHex","colorFormat","__state","conversionName","toString","r","Math","round","g","b","a","h","s","toFixed","v","str","hex","ARR_EACH","Array","prototype","forEach","ARR_SLICE","slice","Common","BREAK","extend","target","this","each","call","arguments","keys","isObject","Object","key","isUndefined","bind","defaults","compose","toCall","args","apply","itr","scope","l","defer","fnc","setTimeout","debounce","func","threshold","callImmediately","timeout","callNow","clearTimeout","toArray","undefined","isNull","isNaN","isArray","constructor","isNumber","isString","isBoolean","isFunction","Function","common","INTERPRETATIONS","litmus","conversions","THREE_CHAR_HEX","read","original","test","match","space","parseInt","write","SIX_CHAR_HEX","CSS_RGB","parseFloat","CSS_RGBA","HEX","RGB_ARRAY","RGBA_ARRAY","RGBA_OBJ","RGB_OBJ","HSVA_OBJ","HSV_OBJ","result","toReturn","family","conversion","tmpComponent","ColorMath","hsv_to_rgb","hi","floor","f","p","q","t","c","rgb_to_hsv","min","max","delta","NaN","rgb_to_hex","hex_with_component","component_from_hex","componentIndex","value","interpret","math","colorToString","Color","[object Object]","Error","defineRGBComponent","component","componentHexIndex","defineProperty","get","recalculateRGB","set","defineHSVComponent","recalculateHSV","COMPONENTS","object","property","initialValue","domElement","document","createElement","__onChange","__onFinishChange","newValue","updateDisplay","getValue","EVENT_MAP_INV","HTMLEvents","MouseEvents","KeyboardEvents","k","e","CSS_VALUE_PIXELS","cssValueToPixels","val","dom","makeSelectable","elem","selectable","style","onselectstart","MozUserSelect","KhtmlUserSelect","unselectable","makeFullscreen","hor","vert","vertical","horizontal","position","left","right","top","bottom","fakeEvent","eventType","pars","aux","params","className","evt","createEvent","clientX","x","clientY","y","initMouseEvent","bubbles","cancelable","window","clickCount","init","initKeyboardEvent","initKeyEvent","ctrlKey","altKey","shiftKey","metaKey","keyCode","charCode","initEvent","dispatchEvent","event","newBool","bool","addEventListener","attachEvent","unbind","removeEventListener","detachEvent","addClass","classes","indexOf","push","join","replace","removeClass","removeAttribute","index","splice","hasClass","RegExp","getWidth","getComputedStyle","width","getHeight","height","getOffset","el","offset","offsetParent","offsetLeft","offsetTop","isActive","activeElement","type","href","Controller","super","_this","__prev","__checkbox","setAttribute","setValue","appendChild","checked","opts","options","__select","map","element","opt","innerHTML","desiredValue","selectedIndex","onChange","__input","blur","numDecimals","_x","_params","__min","__max","__step","step","__impliedStep","pow","log","abs","LN10","__precision","_v","minValue","maxValue","stepValue","NumberController","__truncationSuspended","prevY","onFinish","onMouseDrag","diff","onMouseUp","attempted","decimals","tenTo","roundToDecimal","i1","i2","o1","o2","preventDefault","bgRect","__background","getBoundingClientRect","onTouchMove","touches","onTouchEnd","__foreground","pct","text","__button","fire","vendors","linearGradient","background","vendor","cssText","__color","__temp","__selector","__saturation_field","__field_knob","__field_knob_border","__hue_knob","__hue_field","__input_textShadow","onBlur","valueField","fieldDown","setSV","fieldUpSV","fieldDownH","setH","fieldUpH","toOriginal","fieldRect","padding","backgroundColor","boxShadow","border","borderRadius","zIndex","borderRight","marginRight","display","cursor","outline","textAlign","fontWeight","textShadow","mismatch","flip","_flip","marginLeft","marginTop","toHexString","css","load","url","indoc","doc","link","rel","getElementsByTagName","inject","cssContent","injected","head","OptionController","NumberControllerBox","NumberControllerSlider","StringController","FunctionController","BooleanController","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","backgroundElement","opacity","WebkitTransition","transition","body","hide","webkitTransform","layout","innerWidth","innerHeight","saveDialogueContents","ControllerFactory","ColorController","CenteredDiv","styleSheet","DEFAULT_DEFAULT_PRESET_NAME","SUPPORTS_LOCAL_STORAGE","localStorage","SAVE_DIALOGUE","autoPlaceContainer","autoPlaceVirgin","hideableGuis","GUI","__ul","__folders","__controllers","__rememberedObjects","__rememberedObjectIndecesToControllers","__listening","closeOnTop","autoPlace","DEFAULT_WIDTH","resizable","hideable","preset","parent","scrollable","saveToLocalStorage","titleRow","useLocalStorage","getItem","getLocalStorageHash","defineProperties","getRoot","gui","__preset_select","setPresetSelectIndex","revert","setWidth","closed","CLASS_CLOSED","onResize","__closeButton","TEXT_OPEN","TEXT_CLOSED","setItem","CLASS_MAIN","savedGui","JSON","parse","CLASS_CLOSE_BUTTON","CLASS_CLOSE_TOP","insertBefore","childNodes","CLASS_CLOSE_BOTTOM","titleRowName","createTextNode","addRow","onClickTitle","CLASS_AUTO_PLACE_CONTAINER","CLASS_AUTO_PLACE","__resizeHandler","onResizeDebounced","pmouseX","drag","dragStop","CLASS_DRAG","dragStart","__resize_handle","firstElementChild","addResizeHandle","stringify","getSaveObject","saveToLocalStorageIfPossible","root","resetWidth","newDom","liBefore","li","removeListeners","markPresetModified","modified","recallSavedValue","controller","matchedIndex","controllerMap","remembered","presetMap","add","factoryArgs","concat","before","__li","container","CLASS_CONTROLLER_ROW","__gui","nextSibling","nextElementSibling","remove","listen","box","method","pc","pb","returned","oldName","wasListening","newController","stopPropagation","borderLeftColor","isModified","augmentController","location","addPresetOption","setSelected","showHideExplain","explain","w","__save_row","getCurrentPreset","useInitialValues","savedValues","toggleHide","CLASS_TOO_TALL","_keydownHandler","which","addColor","removeChild","destroy","subfolder","removeFolder","addFolder","newGuiParams","folders","folder","parentElement","open","close","show","node","offsetHeight","remember","div","firstChild","gears","button","button2","button3","select","getElementById","localStorageCheckBox","saveLocally","newConstructorTextArea","focus","save","presetName","prompt","saveAs","addSaveMenu","updateDisplays","controllerArray","domImport","GUIImport","controllers"],"mappings":"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","file":"../skylark-datgui-all.js","sourcesContent":["define('skylark-langx-ns/_attach',[],function(){\r\n    return  function attach(obj1,path,obj2) {\r\n        if (typeof path == \"string\") {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length,\r\n            ns=obj1,\r\n            i=0,\r\n            name = path[i++];\r\n\r\n        while (i < length) {\r\n            ns = ns[name] = ns[name] || {};\r\n            name = path[i++];\r\n        }\r\n\r\n        return ns[name] = obj2;\r\n    }\r\n});\ndefine('skylark-langx-ns/ns',[\r\n    \"./_attach\"\r\n], function(_attach) {\r\n    var skylark = {\r\n    \tattach : function(path,obj) {\r\n    \t\treturn _attach(skylark,path,obj);\r\n    \t}\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx-ns/main',[\r\n\t\"./ns\"\r\n],function(skylark){\r\n\treturn skylark;\r\n});\ndefine('skylark-langx-ns', ['skylark-langx-ns/main'], function (main) { return main; });\n\ndefine('skylark-datgui/color/toString',[],function () {\n    'use strict';\n    return function (color, forceCSSHex) {\n        const colorFormat = color.__state.conversionName.toString();\n        const r = Math.round(color.r);\n        const g = Math.round(color.g);\n        const b = Math.round(color.b);\n        const a = color.a;\n        const h = Math.round(color.h);\n        const s = color.s.toFixed(1);\n        const v = color.v.toFixed(1);\n        if (forceCSSHex || colorFormat === 'THREE_CHAR_HEX' || colorFormat === 'SIX_CHAR_HEX') {\n            let str = color.hex.toString(16);\n            while (str.length < 6) {\n                str = '0' + str;\n            }\n            return '#' + str;\n        } else if (colorFormat === 'CSS_RGB') {\n            return 'rgb(' + r + ',' + g + ',' + b + ')';\n        } else if (colorFormat === 'CSS_RGBA') {\n            return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n        } else if (colorFormat === 'HEX') {\n            return '0x' + color.hex.toString(16);\n        } else if (colorFormat === 'RGB_ARRAY') {\n            return '[' + r + ',' + g + ',' + b + ']';\n        } else if (colorFormat === 'RGBA_ARRAY') {\n            return '[' + r + ',' + g + ',' + b + ',' + a + ']';\n        } else if (colorFormat === 'RGB_OBJ') {\n            return '{r:' + r + ',g:' + g + ',b:' + b + '}';\n        } else if (colorFormat === 'RGBA_OBJ') {\n            return '{r:' + r + ',g:' + g + ',b:' + b + ',a:' + a + '}';\n        } else if (colorFormat === 'HSV_OBJ') {\n            return '{h:' + h + ',s:' + s + ',v:' + v + '}';\n        } else if (colorFormat === 'HSVA_OBJ') {\n            return '{h:' + h + ',s:' + s + ',v:' + v + ',a:' + a + '}';\n        }\n        return 'unknown format';\n    };\n});\ndefine('skylark-datgui/utils/common',[],function () {\n    'use strict';\n    const ARR_EACH = Array.prototype.forEach;\n    const ARR_SLICE = Array.prototype.slice;\n    const Common = {\n        BREAK: {},\n        extend: function (target) {\n            this.each(ARR_SLICE.call(arguments, 1), function (obj) {\n                const keys = this.isObject(obj) ? Object.keys(obj) : [];\n                keys.forEach(function (key) {\n                    if (!this.isUndefined(obj[key])) {\n                        target[key] = obj[key];\n                    }\n                }.bind(this));\n            }, this);\n            return target;\n        },\n        defaults: function (target) {\n            this.each(ARR_SLICE.call(arguments, 1), function (obj) {\n                const keys = this.isObject(obj) ? Object.keys(obj) : [];\n                keys.forEach(function (key) {\n                    if (this.isUndefined(target[key])) {\n                        target[key] = obj[key];\n                    }\n                }.bind(this));\n            }, this);\n            return target;\n        },\n        compose: function () {\n            const toCall = ARR_SLICE.call(arguments);\n            return function () {\n                let args = ARR_SLICE.call(arguments);\n                for (let i = toCall.length - 1; i >= 0; i--) {\n                    args = [toCall[i].apply(this, args)];\n                }\n                return args[0];\n            };\n        },\n        each: function (obj, itr, scope) {\n            if (!obj) {\n                return;\n            }\n            if (ARR_EACH && obj.forEach && obj.forEach === ARR_EACH) {\n                obj.forEach(itr, scope);\n            } else if (obj.length === obj.length + 0) {\n                let key;\n                let l;\n                for (key = 0, l = obj.length; key < l; key++) {\n                    if (key in obj && itr.call(scope, obj[key], key) === this.BREAK) {\n                        return;\n                    }\n                }\n            } else {\n                for (const key in obj) {\n                    if (itr.call(scope, obj[key], key) === this.BREAK) {\n                        return;\n                    }\n                }\n            }\n        },\n        defer: function (fnc) {\n            setTimeout(fnc, 0);\n        },\n        debounce: function (func, threshold, callImmediately) {\n            let timeout;\n            return function () {\n                const obj = this;\n                const args = arguments;\n                function delayed() {\n                    timeout = null;\n                    if (!callImmediately)\n                        func.apply(obj, args);\n                }\n                const callNow = callImmediately || !timeout;\n                clearTimeout(timeout);\n                timeout = setTimeout(delayed, threshold);\n                if (callNow) {\n                    func.apply(obj, args);\n                }\n            };\n        },\n        toArray: function (obj) {\n            if (obj.toArray)\n                return obj.toArray();\n            return ARR_SLICE.call(obj);\n        },\n        isUndefined: function (obj) {\n            return obj === undefined;\n        },\n        isNull: function (obj) {\n            return obj === null;\n        },\n        isNaN: function (obj) {\n            return isNaN(obj);\n        },\n        isArray: Array.isArray || function (obj) {\n            return obj.constructor === Array;\n        },\n        isObject: function (obj) {\n            return obj === Object(obj);\n        },\n        isNumber: function (obj) {\n            return obj === obj + 0;\n        },\n        isString: function (obj) {\n            return obj === obj + '';\n        },\n        isBoolean: function (obj) {\n            return obj === false || obj === true;\n        },\n        isFunction: function (obj) {\n            return obj instanceof Function;\n        }\n    };\n    return Common;\n});\ndefine('skylark-datgui/color/interpret',[\n    './toString',\n    '../utils/common'\n], function (toString, common) {\n    'use strict';\n    const INTERPRETATIONS = [\n        {\n            litmus: common.isString,\n            conversions: {\n                THREE_CHAR_HEX: {\n                    read: function (original) {\n                        const test = original.match(/^#([A-F0-9])([A-F0-9])([A-F0-9])$/i);\n                        if (test === null) {\n                            return false;\n                        }\n                        return {\n                            space: 'HEX',\n                            hex: parseInt('0x' + test[1].toString() + test[1].toString() + test[2].toString() + test[2].toString() + test[3].toString() + test[3].toString(), 0)\n                        };\n                    },\n                    write: toString\n                },\n                SIX_CHAR_HEX: {\n                    read: function (original) {\n                        const test = original.match(/^#([A-F0-9]{6})$/i);\n                        if (test === null) {\n                            return false;\n                        }\n                        return {\n                            space: 'HEX',\n                            hex: parseInt('0x' + test[1].toString(), 0)\n                        };\n                    },\n                    write: toString\n                },\n                CSS_RGB: {\n                    read: function (original) {\n                        const test = original.match(/^rgb\\(\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*\\)/);\n                        if (test === null) {\n                            return false;\n                        }\n                        return {\n                            space: 'RGB',\n                            r: parseFloat(test[1]),\n                            g: parseFloat(test[2]),\n                            b: parseFloat(test[3])\n                        };\n                    },\n                    write: toString\n                },\n                CSS_RGBA: {\n                    read: function (original) {\n                        const test = original.match(/^rgba\\(\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*\\)/);\n                        if (test === null) {\n                            return false;\n                        }\n                        return {\n                            space: 'RGB',\n                            r: parseFloat(test[1]),\n                            g: parseFloat(test[2]),\n                            b: parseFloat(test[3]),\n                            a: parseFloat(test[4])\n                        };\n                    },\n                    write: toString\n                }\n            }\n        },\n        {\n            litmus: common.isNumber,\n            conversions: {\n                HEX: {\n                    read: function (original) {\n                        return {\n                            space: 'HEX',\n                            hex: original,\n                            conversionName: 'HEX'\n                        };\n                    },\n                    write: function (color) {\n                        return color.hex;\n                    }\n                }\n            }\n        },\n        {\n            litmus: common.isArray,\n            conversions: {\n                RGB_ARRAY: {\n                    read: function (original) {\n                        if (original.length !== 3) {\n                            return false;\n                        }\n                        return {\n                            space: 'RGB',\n                            r: original[0],\n                            g: original[1],\n                            b: original[2]\n                        };\n                    },\n                    write: function (color) {\n                        return [\n                            color.r,\n                            color.g,\n                            color.b\n                        ];\n                    }\n                },\n                RGBA_ARRAY: {\n                    read: function (original) {\n                        if (original.length !== 4)\n                            return false;\n                        return {\n                            space: 'RGB',\n                            r: original[0],\n                            g: original[1],\n                            b: original[2],\n                            a: original[3]\n                        };\n                    },\n                    write: function (color) {\n                        return [\n                            color.r,\n                            color.g,\n                            color.b,\n                            color.a\n                        ];\n                    }\n                }\n            }\n        },\n        {\n            litmus: common.isObject,\n            conversions: {\n                RGBA_OBJ: {\n                    read: function (original) {\n                        if (common.isNumber(original.r) && common.isNumber(original.g) && common.isNumber(original.b) && common.isNumber(original.a)) {\n                            return {\n                                space: 'RGB',\n                                r: original.r,\n                                g: original.g,\n                                b: original.b,\n                                a: original.a\n                            };\n                        }\n                        return false;\n                    },\n                    write: function (color) {\n                        return {\n                            r: color.r,\n                            g: color.g,\n                            b: color.b,\n                            a: color.a\n                        };\n                    }\n                },\n                RGB_OBJ: {\n                    read: function (original) {\n                        if (common.isNumber(original.r) && common.isNumber(original.g) && common.isNumber(original.b)) {\n                            return {\n                                space: 'RGB',\n                                r: original.r,\n                                g: original.g,\n                                b: original.b\n                            };\n                        }\n                        return false;\n                    },\n                    write: function (color) {\n                        return {\n                            r: color.r,\n                            g: color.g,\n                            b: color.b\n                        };\n                    }\n                },\n                HSVA_OBJ: {\n                    read: function (original) {\n                        if (common.isNumber(original.h) && common.isNumber(original.s) && common.isNumber(original.v) && common.isNumber(original.a)) {\n                            return {\n                                space: 'HSV',\n                                h: original.h,\n                                s: original.s,\n                                v: original.v,\n                                a: original.a\n                            };\n                        }\n                        return false;\n                    },\n                    write: function (color) {\n                        return {\n                            h: color.h,\n                            s: color.s,\n                            v: color.v,\n                            a: color.a\n                        };\n                    }\n                },\n                HSV_OBJ: {\n                    read: function (original) {\n                        if (common.isNumber(original.h) && common.isNumber(original.s) && common.isNumber(original.v)) {\n                            return {\n                                space: 'HSV',\n                                h: original.h,\n                                s: original.s,\n                                v: original.v\n                            };\n                        }\n                        return false;\n                    },\n                    write: function (color) {\n                        return {\n                            h: color.h,\n                            s: color.s,\n                            v: color.v\n                        };\n                    }\n                }\n            }\n        }\n    ];\n    let result;\n    let toReturn;\n    const interpret = function () {\n        toReturn = false;\n        const original = arguments.length > 1 ? common.toArray(arguments) : arguments[0];\n        common.each(INTERPRETATIONS, function (family) {\n            if (family.litmus(original)) {\n                common.each(family.conversions, function (conversion, conversionName) {\n                    result = conversion.read(original);\n                    if (toReturn === false && result !== false) {\n                        toReturn = result;\n                        result.conversionName = conversionName;\n                        result.conversion = conversion;\n                        return common.BREAK;\n                    }\n                });\n                return common.BREAK;\n            }\n        });\n        return toReturn;\n    };\n    return interpret;\n});\ndefine('skylark-datgui/color/math',[],function () {\n    'use strict';\n    let tmpComponent;\n    const ColorMath = {\n        hsv_to_rgb: function (h, s, v) {\n            const hi = Math.floor(h / 60) % 6;\n            const f = h / 60 - Math.floor(h / 60);\n            const p = v * (1 - s);\n            const q = v * (1 - f * s);\n            const t = v * (1 - (1 - f) * s);\n            const c = [\n                [\n                    v,\n                    t,\n                    p\n                ],\n                [\n                    q,\n                    v,\n                    p\n                ],\n                [\n                    p,\n                    v,\n                    t\n                ],\n                [\n                    p,\n                    q,\n                    v\n                ],\n                [\n                    t,\n                    p,\n                    v\n                ],\n                [\n                    v,\n                    p,\n                    q\n                ]\n            ][hi];\n            return {\n                r: c[0] * 255,\n                g: c[1] * 255,\n                b: c[2] * 255\n            };\n        },\n        rgb_to_hsv: function (r, g, b) {\n            const min = Math.min(r, g, b);\n            const max = Math.max(r, g, b);\n            const delta = max - min;\n            let h;\n            let s;\n            if (max !== 0) {\n                s = delta / max;\n            } else {\n                return {\n                    h: NaN,\n                    s: 0,\n                    v: 0\n                };\n            }\n            if (r === max) {\n                h = (g - b) / delta;\n            } else if (g === max) {\n                h = 2 + (b - r) / delta;\n            } else {\n                h = 4 + (r - g) / delta;\n            }\n            h /= 6;\n            if (h < 0) {\n                h += 1;\n            }\n            return {\n                h: h * 360,\n                s: s,\n                v: max / 255\n            };\n        },\n        rgb_to_hex: function (r, g, b) {\n            let hex = this.hex_with_component(0, 2, r);\n            hex = this.hex_with_component(hex, 1, g);\n            hex = this.hex_with_component(hex, 0, b);\n            return hex;\n        },\n        component_from_hex: function (hex, componentIndex) {\n            return hex >> componentIndex * 8 & 255;\n        },\n        hex_with_component: function (hex, componentIndex, value) {\n            return value << (tmpComponent = componentIndex * 8) | hex & ~(255 << tmpComponent);\n        }\n    };\n    return ColorMath;\n});\ndefine('skylark-datgui/color/Color',[\n    './interpret',\n    './math',\n    './toString',\n    '../utils/common'\n], function (interpret, math, colorToString, common) {\n    'use strict';\n    class Color {\n        constructor() {\n            this.__state = interpret.apply(this, arguments);\n            if (this.__state === false) {\n                throw new Error('Failed to interpret color arguments');\n            }\n            this.__state.a = this.__state.a || 1;\n        }\n        toString() {\n            return colorToString(this);\n        }\n        toHexString() {\n            return colorToString(this, true);\n        }\n        toOriginal() {\n            return this.__state.conversion.write(this);\n        }\n    }\n    function defineRGBComponent(target, component, componentHexIndex) {\n        Object.defineProperty(target, component, {\n            get: function () {\n                if (this.__state.space === 'RGB') {\n                    return this.__state[component];\n                }\n                Color.recalculateRGB(this, component, componentHexIndex);\n                return this.__state[component];\n            },\n            set: function (v) {\n                if (this.__state.space !== 'RGB') {\n                    Color.recalculateRGB(this, component, componentHexIndex);\n                    this.__state.space = 'RGB';\n                }\n                this.__state[component] = v;\n            }\n        });\n    }\n    function defineHSVComponent(target, component) {\n        Object.defineProperty(target, component, {\n            get: function () {\n                if (this.__state.space === 'HSV') {\n                    return this.__state[component];\n                }\n                Color.recalculateHSV(this);\n                return this.__state[component];\n            },\n            set: function (v) {\n                if (this.__state.space !== 'HSV') {\n                    Color.recalculateHSV(this);\n                    this.__state.space = 'HSV';\n                }\n                this.__state[component] = v;\n            }\n        });\n    }\n    Color.recalculateRGB = function (color, component, componentHexIndex) {\n        if (color.__state.space === 'HEX') {\n            color.__state[component] = math.component_from_hex(color.__state.hex, componentHexIndex);\n        } else if (color.__state.space === 'HSV') {\n            common.extend(color.__state, math.hsv_to_rgb(color.__state.h, color.__state.s, color.__state.v));\n        } else {\n            throw new Error('Corrupted color state');\n        }\n    };\n    Color.recalculateHSV = function (color) {\n        const result = math.rgb_to_hsv(color.r, color.g, color.b);\n        common.extend(color.__state, {\n            s: result.s,\n            v: result.v\n        });\n        if (!common.isNaN(result.h)) {\n            color.__state.h = result.h;\n        } else if (common.isUndefined(color.__state.h)) {\n            color.__state.h = 0;\n        }\n    };\n    Color.COMPONENTS = [\n        'r',\n        'g',\n        'b',\n        'h',\n        's',\n        'v',\n        'hex',\n        'a'\n    ];\n    defineRGBComponent(Color.prototype, 'r', 2);\n    defineRGBComponent(Color.prototype, 'g', 1);\n    defineRGBComponent(Color.prototype, 'b', 0);\n    defineHSVComponent(Color.prototype, 'h');\n    defineHSVComponent(Color.prototype, 's');\n    defineHSVComponent(Color.prototype, 'v');\n    Object.defineProperty(Color.prototype, 'a', {\n        get: function () {\n            return this.__state.a;\n        },\n        set: function (v) {\n            this.__state.a = v;\n        }\n    });\n    Object.defineProperty(Color.prototype, 'hex', {\n        get: function () {\n            if (this.__state.space !== 'HEX') {\n                this.__state.hex = math.rgb_to_hex(this.r, this.g, this.b);\n                this.__state.space = 'HEX';\n            }\n            return this.__state.hex;\n        },\n        set: function (v) {\n            this.__state.space = 'HEX';\n            this.__state.hex = v;\n        }\n    });\n    return Color;\n});\ndefine('skylark-datgui/controllers/Controller',[],function () {\n    'use strict';\n    class Controller {\n        constructor(object, property) {\n            this.initialValue = object[property];\n            this.domElement = document.createElement('div');\n            this.object = object;\n            this.property = property;\n            this.__onChange = undefined;\n            this.__onFinishChange = undefined;\n        }\n        onChange(fnc) {\n            this.__onChange = fnc;\n            return this;\n        }\n        onFinishChange(fnc) {\n            this.__onFinishChange = fnc;\n            return this;\n        }\n        setValue(newValue) {\n            this.object[this.property] = newValue;\n            if (this.__onChange) {\n                this.__onChange.call(this, newValue);\n            }\n            this.updateDisplay();\n            return this;\n        }\n        getValue() {\n            return this.object[this.property];\n        }\n        updateDisplay() {\n            return this;\n        }\n        isModified() {\n            return this.initialValue !== this.getValue();\n        }\n    }\n    return Controller;\n});\ndefine('skylark-datgui/dom/dom',['../utils/common'], function (common) {\n    'use strict';\n    const EVENT_MAP = {\n        HTMLEvents: ['change'],\n        MouseEvents: [\n            'click',\n            'mousemove',\n            'mousedown',\n            'mouseup',\n            'mouseover'\n        ],\n        KeyboardEvents: ['keydown']\n    };\n    const EVENT_MAP_INV = {};\n    common.each(EVENT_MAP, function (v, k) {\n        common.each(v, function (e) {\n            EVENT_MAP_INV[e] = k;\n        });\n    });\n    const CSS_VALUE_PIXELS = /(\\d+(\\.\\d+)?)px/;\n    function cssValueToPixels(val) {\n        if (val === '0' || common.isUndefined(val)) {\n            return 0;\n        }\n        const match = val.match(CSS_VALUE_PIXELS);\n        if (!common.isNull(match)) {\n            return parseFloat(match[1]);\n        }\n        return 0;\n    }\n    const dom = {\n        makeSelectable: function (elem, selectable) {\n            if (elem === undefined || elem.style === undefined)\n                return;\n            elem.onselectstart = selectable ? function () {\n                return false;\n            } : function () {\n            };\n            elem.style.MozUserSelect = selectable ? 'auto' : 'none';\n            elem.style.KhtmlUserSelect = selectable ? 'auto' : 'none';\n            elem.unselectable = selectable ? 'on' : 'off';\n        },\n        makeFullscreen: function (elem, hor, vert) {\n            let vertical = vert;\n            let horizontal = hor;\n            if (common.isUndefined(horizontal)) {\n                horizontal = true;\n            }\n            if (common.isUndefined(vertical)) {\n                vertical = true;\n            }\n            elem.style.position = 'absolute';\n            if (horizontal) {\n                elem.style.left = 0;\n                elem.style.right = 0;\n            }\n            if (vertical) {\n                elem.style.top = 0;\n                elem.style.bottom = 0;\n            }\n        },\n        fakeEvent: function (elem, eventType, pars, aux) {\n            const params = pars || {};\n            const className = EVENT_MAP_INV[eventType];\n            if (!className) {\n                throw new Error('Event type ' + eventType + ' not supported.');\n            }\n            const evt = document.createEvent(className);\n            switch (className) {\n            case 'MouseEvents': {\n                    const clientX = params.x || params.clientX || 0;\n                    const clientY = params.y || params.clientY || 0;\n                    evt.initMouseEvent(eventType, params.bubbles || false, params.cancelable || true, window, params.clickCount || 1, 0, 0, clientX, clientY, false, false, false, false, 0, null);\n                    break;\n                }\n            case 'KeyboardEvents': {\n                    const init = evt.initKeyboardEvent || evt.initKeyEvent;\n                    common.defaults(params, {\n                        cancelable: true,\n                        ctrlKey: false,\n                        altKey: false,\n                        shiftKey: false,\n                        metaKey: false,\n                        keyCode: undefined,\n                        charCode: undefined\n                    });\n                    init(eventType, params.bubbles || false, params.cancelable, window, params.ctrlKey, params.altKey, params.shiftKey, params.metaKey, params.keyCode, params.charCode);\n                    break;\n                }\n            default: {\n                    evt.initEvent(eventType, params.bubbles || false, params.cancelable || true);\n                    break;\n                }\n            }\n            common.defaults(evt, aux);\n            elem.dispatchEvent(evt);\n        },\n        bind: function (elem, event, func, newBool) {\n            const bool = newBool || false;\n            if (elem.addEventListener) {\n                elem.addEventListener(event, func, bool);\n            } else if (elem.attachEvent) {\n                elem.attachEvent('on' + event, func);\n            }\n            return dom;\n        },\n        unbind: function (elem, event, func, newBool) {\n            const bool = newBool || false;\n            if (elem.removeEventListener) {\n                elem.removeEventListener(event, func, bool);\n            } else if (elem.detachEvent) {\n                elem.detachEvent('on' + event, func);\n            }\n            return dom;\n        },\n        addClass: function (elem, className) {\n            if (elem.className === undefined) {\n                elem.className = className;\n            } else if (elem.className !== className) {\n                const classes = elem.className.split(/ +/);\n                if (classes.indexOf(className) === -1) {\n                    classes.push(className);\n                    elem.className = classes.join(' ').replace(/^\\s+/, '').replace(/\\s+$/, '');\n                }\n            }\n            return dom;\n        },\n        removeClass: function (elem, className) {\n            if (className) {\n                if (elem.className === className) {\n                    elem.removeAttribute('class');\n                } else {\n                    const classes = elem.className.split(/ +/);\n                    const index = classes.indexOf(className);\n                    if (index !== -1) {\n                        classes.splice(index, 1);\n                        elem.className = classes.join(' ');\n                    }\n                }\n            } else {\n                elem.className = undefined;\n            }\n            return dom;\n        },\n        hasClass: function (elem, className) {\n            return new RegExp('(?:^|\\\\s+)' + className + '(?:\\\\s+|$)').test(elem.className) || false;\n        },\n        getWidth: function (elem) {\n            const style = getComputedStyle(elem);\n            return cssValueToPixels(style['border-left-width']) + cssValueToPixels(style['border-right-width']) + cssValueToPixels(style['padding-left']) + cssValueToPixels(style['padding-right']) + cssValueToPixels(style.width);\n        },\n        getHeight: function (elem) {\n            const style = getComputedStyle(elem);\n            return cssValueToPixels(style['border-top-width']) + cssValueToPixels(style['border-bottom-width']) + cssValueToPixels(style['padding-top']) + cssValueToPixels(style['padding-bottom']) + cssValueToPixels(style.height);\n        },\n        getOffset: function (el) {\n            let elem = el;\n            const offset = {\n                left: 0,\n                top: 0\n            };\n            if (elem.offsetParent) {\n                do {\n                    offset.left += elem.offsetLeft;\n                    offset.top += elem.offsetTop;\n                    elem = elem.offsetParent;\n                } while (elem);\n            }\n            return offset;\n        },\n        isActive: function (elem) {\n            return elem === document.activeElement && (elem.type || elem.href);\n        }\n    };\n    return dom;\n});\ndefine('skylark-datgui/controllers/BooleanController',[\n    './Controller',\n    '../dom/dom'\n], function (Controller, dom) {\n    'use strict';\n    class BooleanController extends Controller {\n        constructor(object, property) {\n            super(object, property);\n            const _this = this;\n            this.__prev = this.getValue();\n            this.__checkbox = document.createElement('input');\n            this.__checkbox.setAttribute('type', 'checkbox');\n            function onChange() {\n                _this.setValue(!_this.__prev);\n            }\n            dom.bind(this.__checkbox, 'change', onChange, false);\n            this.domElement.appendChild(this.__checkbox);\n            this.updateDisplay();\n        }\n        setValue(v) {\n            const toReturn = super.setValue(v);\n            if (this.__onFinishChange) {\n                this.__onFinishChange.call(this, this.getValue());\n            }\n            this.__prev = this.getValue();\n            return toReturn;\n        }\n        updateDisplay() {\n            if (this.getValue() === true) {\n                this.__checkbox.setAttribute('checked', 'checked');\n                this.__checkbox.checked = true;\n                this.__prev = true;\n            } else {\n                this.__checkbox.checked = false;\n                this.__prev = false;\n            }\n            return super.updateDisplay();\n        }\n    }\n    return BooleanController;\n});\ndefine('skylark-datgui/controllers/OptionController',[\n    './Controller',\n    '../dom/dom',\n    '../utils/common'\n], function (Controller, dom, common) {\n    'use strict';\n    class OptionController extends Controller {\n        constructor(object, property, opts) {\n            super(object, property);\n            let options = opts;\n            const _this = this;\n            this.__select = document.createElement('select');\n            if (common.isArray(options)) {\n                const map = {};\n                common.each(options, function (element) {\n                    map[element] = element;\n                });\n                options = map;\n            }\n            common.each(options, function (value, key) {\n                const opt = document.createElement('option');\n                opt.innerHTML = key;\n                opt.setAttribute('value', value);\n                _this.__select.appendChild(opt);\n            });\n            this.updateDisplay();\n            dom.bind(this.__select, 'change', function () {\n                const desiredValue = this.options[this.selectedIndex].value;\n                _this.setValue(desiredValue);\n            });\n            this.domElement.appendChild(this.__select);\n        }\n        setValue(v) {\n            const toReturn = super.setValue(v);\n            if (this.__onFinishChange) {\n                this.__onFinishChange.call(this, this.getValue());\n            }\n            return toReturn;\n        }\n        updateDisplay() {\n            if (dom.isActive(this.__select))\n                return this;\n            this.__select.value = this.getValue();\n            return super.updateDisplay();\n        }\n    }\n    return OptionController;\n});\ndefine('skylark-datgui/controllers/StringController',[\n    './Controller',\n    '../dom/dom'\n], function (Controller, dom) {\n    'use strict';\n    class StringController extends Controller {\n        constructor(object, property) {\n            super(object, property);\n            const _this = this;\n            function onChange() {\n                _this.setValue(_this.__input.value);\n            }\n            function onBlur() {\n                if (_this.__onFinishChange) {\n                    _this.__onFinishChange.call(_this, _this.getValue());\n                }\n            }\n            this.__input = document.createElement('input');\n            this.__input.setAttribute('type', 'text');\n            dom.bind(this.__input, 'keyup', onChange);\n            dom.bind(this.__input, 'change', onChange);\n            dom.bind(this.__input, 'blur', onBlur);\n            dom.bind(this.__input, 'keydown', function (e) {\n                if (e.keyCode === 13) {\n                    this.blur();\n                }\n            });\n            this.updateDisplay();\n            this.domElement.appendChild(this.__input);\n        }\n        updateDisplay() {\n            if (!dom.isActive(this.__input)) {\n                this.__input.value = this.getValue();\n            }\n            return super.updateDisplay();\n        }\n    }\n    return StringController;\n});\ndefine('skylark-datgui/controllers/NumberController',[\n    './Controller',\n    '../utils/common'\n], function (Controller, common) {\n    'use strict';\n    function numDecimals(x) {\n        const _x = x.toString();\n        if (_x.indexOf('.') > -1) {\n            return _x.length - _x.indexOf('.') - 1;\n        }\n        return 0;\n    }\n    class NumberController extends Controller {\n        constructor(object, property, params) {\n            super(object, property);\n            const _params = params || {};\n            this.__min = _params.min;\n            this.__max = _params.max;\n            this.__step = _params.step;\n            if (common.isUndefined(this.__step)) {\n                if (this.initialValue === 0) {\n                    this.__impliedStep = 1;\n                } else {\n                    this.__impliedStep = Math.pow(10, Math.floor(Math.log(Math.abs(this.initialValue)) / Math.LN10)) / 10;\n                }\n            } else {\n                this.__impliedStep = this.__step;\n            }\n            this.__precision = numDecimals(this.__impliedStep);\n        }\n        setValue(v) {\n            let _v = v;\n            if (this.__min !== undefined && _v < this.__min) {\n                _v = this.__min;\n            } else if (this.__max !== undefined && _v > this.__max) {\n                _v = this.__max;\n            }\n            if (this.__step !== undefined && _v % this.__step !== 0) {\n                _v = Math.round(_v / this.__step) * this.__step;\n            }\n            return super.setValue(_v);\n        }\n        min(minValue) {\n            this.__min = minValue;\n            return this;\n        }\n        max(maxValue) {\n            this.__max = maxValue;\n            return this;\n        }\n        step(stepValue) {\n            this.__step = stepValue;\n            this.__impliedStep = stepValue;\n            this.__precision = numDecimals(stepValue);\n            return this;\n        }\n    }\n    return NumberController;\n});\ndefine('skylark-datgui/controllers/NumberControllerBox',[\n    './NumberController',\n    '../dom/dom',\n    '../utils/common'\n], function (NumberController, dom, common) {\n    'use strict';\n    function roundToDecimal(value, decimals) {\n        const tenTo = Math.pow(10, decimals);\n        return Math.round(value * tenTo) / tenTo;\n    }\n    class NumberControllerBox extends NumberController {\n        constructor(object, property, params) {\n            super(object, property, params);\n            this.__truncationSuspended = false;\n            const _this = this;\n            let prevY;\n            function onChange() {\n                const attempted = parseFloat(_this.__input.value);\n                if (!common.isNaN(attempted)) {\n                    _this.setValue(attempted);\n                }\n            }\n            function onFinish() {\n                if (_this.__onFinishChange) {\n                    _this.__onFinishChange.call(_this, _this.getValue());\n                }\n            }\n            function onBlur() {\n                onFinish();\n            }\n            function onMouseDrag(e) {\n                const diff = prevY - e.clientY;\n                _this.setValue(_this.getValue() + diff * _this.__impliedStep);\n                prevY = e.clientY;\n            }\n            function onMouseUp() {\n                dom.unbind(window, 'mousemove', onMouseDrag);\n                dom.unbind(window, 'mouseup', onMouseUp);\n                onFinish();\n            }\n            function onMouseDown(e) {\n                dom.bind(window, 'mousemove', onMouseDrag);\n                dom.bind(window, 'mouseup', onMouseUp);\n                prevY = e.clientY;\n            }\n            this.__input = document.createElement('input');\n            this.__input.setAttribute('type', 'text');\n            dom.bind(this.__input, 'change', onChange);\n            dom.bind(this.__input, 'blur', onBlur);\n            dom.bind(this.__input, 'mousedown', onMouseDown);\n            dom.bind(this.__input, 'keydown', function (e) {\n                if (e.keyCode === 13) {\n                    _this.__truncationSuspended = true;\n                    this.blur();\n                    _this.__truncationSuspended = false;\n                    onFinish();\n                }\n            });\n            this.updateDisplay();\n            this.domElement.appendChild(this.__input);\n        }\n        updateDisplay() {\n            this.__input.value = this.__truncationSuspended ? this.getValue() : roundToDecimal(this.getValue(), this.__precision);\n            return super.updateDisplay();\n        }\n    }\n    return NumberControllerBox;\n});\ndefine('skylark-datgui/controllers/NumberControllerSlider',[\n    './NumberController',\n    '../dom/dom'\n], function (NumberController, dom) {\n    'use strict';\n    function map(v, i1, i2, o1, o2) {\n        return o1 + (o2 - o1) * ((v - i1) / (i2 - i1));\n    }\n    class NumberControllerSlider extends NumberController {\n        constructor(object, property, min, max, step) {\n            super(object, property, {\n                min: min,\n                max: max,\n                step: step\n            });\n            const _this = this;\n            this.__background = document.createElement('div');\n            this.__foreground = document.createElement('div');\n            dom.bind(this.__background, 'mousedown', onMouseDown);\n            dom.bind(this.__background, 'touchstart', onTouchStart);\n            dom.addClass(this.__background, 'slider');\n            dom.addClass(this.__foreground, 'slider-fg');\n            function onMouseDown(e) {\n                document.activeElement.blur();\n                dom.bind(window, 'mousemove', onMouseDrag);\n                dom.bind(window, 'mouseup', onMouseUp);\n                onMouseDrag(e);\n            }\n            function onMouseDrag(e) {\n                e.preventDefault();\n                const bgRect = _this.__background.getBoundingClientRect();\n                _this.setValue(map(e.clientX, bgRect.left, bgRect.right, _this.__min, _this.__max));\n                return false;\n            }\n            function onMouseUp() {\n                dom.unbind(window, 'mousemove', onMouseDrag);\n                dom.unbind(window, 'mouseup', onMouseUp);\n                if (_this.__onFinishChange) {\n                    _this.__onFinishChange.call(_this, _this.getValue());\n                }\n            }\n            function onTouchStart(e) {\n                if (e.touches.length !== 1) {\n                    return;\n                }\n                dom.bind(window, 'touchmove', onTouchMove);\n                dom.bind(window, 'touchend', onTouchEnd);\n                onTouchMove(e);\n            }\n            function onTouchMove(e) {\n                const clientX = e.touches[0].clientX;\n                const bgRect = _this.__background.getBoundingClientRect();\n                _this.setValue(map(clientX, bgRect.left, bgRect.right, _this.__min, _this.__max));\n            }\n            function onTouchEnd() {\n                dom.unbind(window, 'touchmove', onTouchMove);\n                dom.unbind(window, 'touchend', onTouchEnd);\n                if (_this.__onFinishChange) {\n                    _this.__onFinishChange.call(_this, _this.getValue());\n                }\n            }\n            this.updateDisplay();\n            this.__background.appendChild(this.__foreground);\n            this.domElement.appendChild(this.__background);\n        }\n        updateDisplay() {\n            const pct = (this.getValue() - this.__min) / (this.__max - this.__min);\n            this.__foreground.style.width = pct * 100 + '%';\n            return super.updateDisplay();\n        }\n    }\n    return NumberControllerSlider;\n});\ndefine('skylark-datgui/controllers/FunctionController',[\n    './Controller',\n    '../dom/dom'\n], function (Controller, dom) {\n    'use strict';\n    class FunctionController extends Controller {\n        constructor(object, property, text) {\n            super(object, property);\n            const _this = this;\n            this.__button = document.createElement('div');\n            this.__button.innerHTML = text === undefined ? 'Fire' : text;\n            dom.bind(this.__button, 'click', function (e) {\n                e.preventDefault();\n                _this.fire();\n                return false;\n            });\n            dom.addClass(this.__button, 'button');\n            this.domElement.appendChild(this.__button);\n        }\n        fire() {\n            if (this.__onChange) {\n                this.__onChange.call(this);\n            }\n            this.getValue().call(this.object);\n            if (this.__onFinishChange) {\n                this.__onFinishChange.call(this, this.getValue());\n            }\n        }\n    }\n    return FunctionController;\n});\ndefine('skylark-datgui/controllers/ColorController',[\n    './Controller',\n    '../dom/dom',\n    '../color/Color',\n    '../color/interpret',\n    '../utils/common'\n], function (Controller, dom, Color, interpret, common) {\n    'use strict';\n    class ColorController extends Controller {\n        constructor(object, property) {\n            super(object, property);\n            this.__color = new Color(this.getValue());\n            this.__temp = new Color(0);\n            const _this = this;\n            this.domElement = document.createElement('div');\n            dom.makeSelectable(this.domElement, false);\n            this.__selector = document.createElement('div');\n            this.__selector.className = 'selector';\n            this.__saturation_field = document.createElement('div');\n            this.__saturation_field.className = 'saturation-field';\n            this.__field_knob = document.createElement('div');\n            this.__field_knob.className = 'field-knob';\n            this.__field_knob_border = '2px solid ';\n            this.__hue_knob = document.createElement('div');\n            this.__hue_knob.className = 'hue-knob';\n            this.__hue_field = document.createElement('div');\n            this.__hue_field.className = 'hue-field';\n            this.__input = document.createElement('input');\n            this.__input.type = 'text';\n            this.__input_textShadow = '0 1px 1px ';\n            dom.bind(this.__input, 'keydown', function (e) {\n                if (e.keyCode === 13) {\n                    onBlur.call(this);\n                }\n            });\n            dom.bind(this.__input, 'blur', onBlur);\n            dom.bind(this.__selector, 'mousedown', function () {\n                dom.addClass(this, 'drag').bind(window, 'mouseup', function () {\n                    dom.removeClass(_this.__selector, 'drag');\n                });\n            });\n            dom.bind(this.__selector, 'touchstart', function () {\n                dom.addClass(this, 'drag').bind(window, 'touchend', function () {\n                    dom.removeClass(_this.__selector, 'drag');\n                });\n            });\n            const valueField = document.createElement('div');\n            common.extend(this.__selector.style, {\n                width: '122px',\n                height: '102px',\n                padding: '3px',\n                backgroundColor: '#222',\n                boxShadow: '0px 1px 3px rgba(0,0,0,0.3)'\n            });\n            common.extend(this.__field_knob.style, {\n                position: 'absolute',\n                width: '12px',\n                height: '12px',\n                border: this.__field_knob_border + (this.__color.v < 0.5 ? '#fff' : '#000'),\n                boxShadow: '0px 1px 3px rgba(0,0,0,0.5)',\n                borderRadius: '12px',\n                zIndex: 1\n            });\n            common.extend(this.__hue_knob.style, {\n                position: 'absolute',\n                width: '15px',\n                height: '2px',\n                borderRight: '4px solid #fff',\n                zIndex: 1\n            });\n            common.extend(this.__saturation_field.style, {\n                width: '100px',\n                height: '100px',\n                border: '1px solid #555',\n                marginRight: '3px',\n                display: 'inline-block',\n                cursor: 'pointer'\n            });\n            common.extend(valueField.style, {\n                width: '100%',\n                height: '100%',\n                background: 'none'\n            });\n            linearGradient(valueField, 'top', 'rgba(0,0,0,0)', '#000');\n            common.extend(this.__hue_field.style, {\n                width: '15px',\n                height: '100px',\n                border: '1px solid #555',\n                cursor: 'ns-resize',\n                position: 'absolute',\n                top: '3px',\n                right: '3px'\n            });\n            hueGradient(this.__hue_field);\n            common.extend(this.__input.style, {\n                outline: 'none',\n                textAlign: 'center',\n                color: '#fff',\n                border: 0,\n                fontWeight: 'bold',\n                textShadow: this.__input_textShadow + 'rgba(0,0,0,0.7)'\n            });\n            dom.bind(this.__saturation_field, 'mousedown', fieldDown);\n            dom.bind(this.__saturation_field, 'touchstart', fieldDown);\n            dom.bind(this.__field_knob, 'mousedown', fieldDown);\n            dom.bind(this.__field_knob, 'touchstart', fieldDown);\n            dom.bind(this.__hue_field, 'mousedown', fieldDownH);\n            dom.bind(this.__hue_field, 'touchstart', fieldDownH);\n            function fieldDown(e) {\n                setSV(e);\n                dom.bind(window, 'mousemove', setSV);\n                dom.bind(window, 'touchmove', setSV);\n                dom.bind(window, 'mouseup', fieldUpSV);\n                dom.bind(window, 'touchend', fieldUpSV);\n            }\n            function fieldDownH(e) {\n                setH(e);\n                dom.bind(window, 'mousemove', setH);\n                dom.bind(window, 'touchmove', setH);\n                dom.bind(window, 'mouseup', fieldUpH);\n                dom.bind(window, 'touchend', fieldUpH);\n            }\n            function fieldUpSV() {\n                dom.unbind(window, 'mousemove', setSV);\n                dom.unbind(window, 'touchmove', setSV);\n                dom.unbind(window, 'mouseup', fieldUpSV);\n                dom.unbind(window, 'touchend', fieldUpSV);\n                onFinish();\n            }\n            function fieldUpH() {\n                dom.unbind(window, 'mousemove', setH);\n                dom.unbind(window, 'touchmove', setH);\n                dom.unbind(window, 'mouseup', fieldUpH);\n                dom.unbind(window, 'touchend', fieldUpH);\n                onFinish();\n            }\n            function onBlur() {\n                const i = interpret(this.value);\n                if (i !== false) {\n                    _this.__color.__state = i;\n                    _this.setValue(_this.__color.toOriginal());\n                } else {\n                    this.value = _this.__color.toString();\n                }\n            }\n            function onFinish() {\n                if (_this.__onFinishChange) {\n                    _this.__onFinishChange.call(_this, _this.__color.toOriginal());\n                }\n            }\n            this.__saturation_field.appendChild(valueField);\n            this.__selector.appendChild(this.__field_knob);\n            this.__selector.appendChild(this.__saturation_field);\n            this.__selector.appendChild(this.__hue_field);\n            this.__hue_field.appendChild(this.__hue_knob);\n            this.domElement.appendChild(this.__input);\n            this.domElement.appendChild(this.__selector);\n            this.updateDisplay();\n            function setSV(e) {\n                if (e.type.indexOf('touch') === -1) {\n                    e.preventDefault();\n                }\n                const fieldRect = _this.__saturation_field.getBoundingClientRect();\n                const {clientX, clientY} = e.touches && e.touches[0] || e;\n                let s = (clientX - fieldRect.left) / (fieldRect.right - fieldRect.left);\n                let v = 1 - (clientY - fieldRect.top) / (fieldRect.bottom - fieldRect.top);\n                if (v > 1) {\n                    v = 1;\n                } else if (v < 0) {\n                    v = 0;\n                }\n                if (s > 1) {\n                    s = 1;\n                } else if (s < 0) {\n                    s = 0;\n                }\n                _this.__color.v = v;\n                _this.__color.s = s;\n                _this.setValue(_this.__color.toOriginal());\n                return false;\n            }\n            function setH(e) {\n                if (e.type.indexOf('touch') === -1) {\n                    e.preventDefault();\n                }\n                const fieldRect = _this.__hue_field.getBoundingClientRect();\n                const {clientY} = e.touches && e.touches[0] || e;\n                let h = 1 - (clientY - fieldRect.top) / (fieldRect.bottom - fieldRect.top);\n                if (h > 1) {\n                    h = 1;\n                } else if (h < 0) {\n                    h = 0;\n                }\n                _this.__color.h = h * 360;\n                _this.setValue(_this.__color.toOriginal());\n                return false;\n            }\n        }\n        updateDisplay() {\n            const i = interpret(this.getValue());\n            if (i !== false) {\n                let mismatch = false;\n                common.each(Color.COMPONENTS, function (component) {\n                    if (!common.isUndefined(i[component]) && !common.isUndefined(this.__color.__state[component]) && i[component] !== this.__color.__state[component]) {\n                        mismatch = true;\n                        return {};\n                    }\n                }, this);\n                if (mismatch) {\n                    common.extend(this.__color.__state, i);\n                }\n            }\n            common.extend(this.__temp.__state, this.__color.__state);\n            this.__temp.a = 1;\n            const flip = this.__color.v < 0.5 || this.__color.s > 0.5 ? 255 : 0;\n            const _flip = 255 - flip;\n            common.extend(this.__field_knob.style, {\n                marginLeft: 100 * this.__color.s - 7 + 'px',\n                marginTop: 100 * (1 - this.__color.v) - 7 + 'px',\n                backgroundColor: this.__temp.toHexString(),\n                border: this.__field_knob_border + 'rgb(' + flip + ',' + flip + ',' + flip + ')'\n            });\n            this.__hue_knob.style.marginTop = (1 - this.__color.h / 360) * 100 + 'px';\n            this.__temp.s = 1;\n            this.__temp.v = 1;\n            linearGradient(this.__saturation_field, 'left', '#fff', this.__temp.toHexString());\n            this.__input.value = this.__color.toString();\n            common.extend(this.__input.style, {\n                backgroundColor: this.__color.toHexString(),\n                color: 'rgb(' + flip + ',' + flip + ',' + flip + ')',\n                textShadow: this.__input_textShadow + 'rgba(' + _flip + ',' + _flip + ',' + _flip + ',.7)'\n            });\n        }\n    }\n    const vendors = [\n        '-moz-',\n        '-o-',\n        '-webkit-',\n        '-ms-',\n        ''\n    ];\n    function linearGradient(elem, x, a, b) {\n        elem.style.background = '';\n        common.each(vendors, function (vendor) {\n            elem.style.cssText += 'background: ' + vendor + 'linear-gradient(' + x + ', ' + a + ' 0%, ' + b + ' 100%); ';\n        });\n    }\n    function hueGradient(elem) {\n        elem.style.background = '';\n        elem.style.cssText += 'background: -moz-linear-gradient(top,  #ff0000 0%, #ff00ff 17%, #0000ff 34%, #00ffff 50%, #00ff00 67%, #ffff00 84%, #ff0000 100%);';\n        elem.style.cssText += 'background: -webkit-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n        elem.style.cssText += 'background: -o-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n        elem.style.cssText += 'background: -ms-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n        elem.style.cssText += 'background: linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n    }\n    return ColorController;\n});\ndefine('skylark-datgui/utils/css',[],function () {\n    'use strict';\n    const css = {\n        load: function (url, indoc) {\n            const doc = indoc || document;\n            const link = doc.createElement('link');\n            link.type = 'text/css';\n            link.rel = 'stylesheet';\n            link.href = url;\n            doc.getElementsByTagName('head')[0].appendChild(link);\n        },\n        inject: function (cssContent, indoc) {\n            const doc = indoc || document;\n            const injected = document.createElement('style');\n            injected.type = 'text/css';\n            injected.innerHTML = cssContent;\n            const head = doc.getElementsByTagName('head')[0];\n            try {\n                head.appendChild(injected);\n            } catch (e) {\n            }\n        }\n    };\n    return css;\n});\ndefine('skylark-datgui/gui/saveDialogue.html',[],function () {\n    'use strict';\n    const saveDialogContents = `<div id=\"dg-save\" class=\"dg dialogue\">\n\n  Here's the new load parameter for your <code>GUI</code>'s constructor:\n\n  <textarea id=\"dg-new-constructor\"></textarea>\n\n  <div id=\"dg-save-locally\">\n\n    <input id=\"dg-local-storage\" type=\"checkbox\"/> Automatically save\n    values to <code>localStorage</code> on exit.\n\n    <div id=\"dg-local-explain\">The values saved to <code>localStorage</code> will\n      override those passed to <code>dat.GUI</code>'s constructor. This makes it\n      easier to work incrementally, but <code>localStorage</code> is fragile,\n      and your friends may not see the same values you do.\n\n    </div>\n\n  </div>\n\n</div>`;\n    return saveDialogContents;\n});\ndefine('skylark-datgui/controllers/ControllerFactory',[\n    './OptionController',\n    './NumberControllerBox',\n    './NumberControllerSlider',\n    './StringController',\n    './FunctionController',\n    './BooleanController',\n    '../utils/common'\n], function (OptionController, NumberControllerBox, NumberControllerSlider, StringController, FunctionController, BooleanController, common) {\n    'use strict';\n    const ControllerFactory = function (object, property) {\n        const initialValue = object[property];\n        if (common.isArray(arguments[2]) || common.isObject(arguments[2])) {\n            return new OptionController(object, property, arguments[2]);\n        }\n        if (common.isNumber(initialValue)) {\n            if (common.isNumber(arguments[2]) && common.isNumber(arguments[3])) {\n                if (common.isNumber(arguments[4])) {\n                    return new NumberControllerSlider(object, property, arguments[2], arguments[3], arguments[4]);\n                }\n                return new NumberControllerSlider(object, property, arguments[2], arguments[3]);\n            }\n            if (common.isNumber(arguments[4])) {\n                return new NumberControllerBox(object, property, {\n                    min: arguments[2],\n                    max: arguments[3],\n                    step: arguments[4]\n                });\n            }\n            return new NumberControllerBox(object, property, {\n                min: arguments[2],\n                max: arguments[3]\n            });\n        }\n        if (common.isString(initialValue)) {\n            return new StringController(object, property);\n        }\n        if (common.isFunction(initialValue)) {\n            return new FunctionController(object, property, '');\n        }\n        if (common.isBoolean(initialValue)) {\n            return new BooleanController(object, property);\n        }\n        return null;\n    };\n    return ControllerFactory;\n});\ndefine('skylark-datgui/utils/requestAnimationFrame',[],function () {\n    'use strict';\n    function requestAnimationFrame(callback) {\n        setTimeout(callback, 1000 / 60);\n    }\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || requestAnimationFrame;\n});\ndefine('skylark-datgui/dom/CenteredDiv',[\n    '../dom/dom',\n    '../utils/common'\n], function (dom, common) {\n    'use strict';\n    class CenteredDiv {\n        constructor() {\n            this.backgroundElement = document.createElement('div');\n            common.extend(this.backgroundElement.style, {\n                backgroundColor: 'rgba(0,0,0,0.8)',\n                top: 0,\n                left: 0,\n                display: 'none',\n                zIndex: '1000',\n                opacity: 0,\n                WebkitTransition: 'opacity 0.2s linear',\n                transition: 'opacity 0.2s linear'\n            });\n            dom.makeFullscreen(this.backgroundElement);\n            this.backgroundElement.style.position = 'fixed';\n            this.domElement = document.createElement('div');\n            common.extend(this.domElement.style, {\n                position: 'fixed',\n                display: 'none',\n                zIndex: '1001',\n                opacity: 0,\n                WebkitTransition: '-webkit-transform 0.2s ease-out, opacity 0.2s linear',\n                transition: 'transform 0.2s ease-out, opacity 0.2s linear'\n            });\n            document.body.appendChild(this.backgroundElement);\n            document.body.appendChild(this.domElement);\n            const _this = this;\n            dom.bind(this.backgroundElement, 'click', function () {\n                _this.hide();\n            });\n        }\n        show() {\n            const _this = this;\n            this.backgroundElement.style.display = 'block';\n            this.domElement.style.display = 'block';\n            this.domElement.style.opacity = 0;\n            this.domElement.style.webkitTransform = 'scale(1.1)';\n            this.layout();\n            common.defer(function () {\n                _this.backgroundElement.style.opacity = 1;\n                _this.domElement.style.opacity = 1;\n                _this.domElement.style.webkitTransform = 'scale(1)';\n            });\n        }\n        hide() {\n            const _this = this;\n            const hide = function () {\n                _this.domElement.style.display = 'none';\n                _this.backgroundElement.style.display = 'none';\n                dom.unbind(_this.domElement, 'webkitTransitionEnd', hide);\n                dom.unbind(_this.domElement, 'transitionend', hide);\n                dom.unbind(_this.domElement, 'oTransitionEnd', hide);\n            };\n            dom.bind(this.domElement, 'webkitTransitionEnd', hide);\n            dom.bind(this.domElement, 'transitionend', hide);\n            dom.bind(this.domElement, 'oTransitionEnd', hide);\n            this.backgroundElement.style.opacity = 0;\n            this.domElement.style.opacity = 0;\n            this.domElement.style.webkitTransform = 'scale(1.1)';\n        }\n        layout() {\n            this.domElement.style.left = window.innerWidth / 2 - dom.getWidth(this.domElement) / 2 + 'px';\n            this.domElement.style.top = window.innerHeight / 2 - dom.getHeight(this.domElement) / 2 + 'px';\n        }\n    }\n    return CenteredDiv;\n});\ndefine('skylark-datgui/gui/GUI',[\n    '../utils/css',\n    './saveDialogue.html',\n    '../controllers/ControllerFactory',\n    '../controllers/Controller',\n    '../controllers/BooleanController',\n    '../controllers/FunctionController',\n    '../controllers/NumberControllerBox',\n    '../controllers/NumberControllerSlider',\n    '../controllers/ColorController',\n    '../utils/requestAnimationFrame',\n    '../dom/CenteredDiv',\n    '../dom/dom',\n    '../utils/common'\n], function (css, saveDialogueContents, ControllerFactory, Controller, BooleanController, FunctionController, NumberControllerBox, NumberControllerSlider, ColorController, requestAnimationFrame, CenteredDiv, dom, common, styleSheet) {\n    'use strict';\n\n    //css.inject(styleSheet);\n\n    const CSS_NAMESPACE = 'dg';\n    const HIDE_KEY_CODE = 72;\n    const CLOSE_BUTTON_HEIGHT = 20;\n    const DEFAULT_DEFAULT_PRESET_NAME = 'Default';\n    const SUPPORTS_LOCAL_STORAGE = function () {\n        try {\n            return !!window.localStorage;\n        } catch (e) {\n            return false;\n        }\n    }();\n    let SAVE_DIALOGUE;\n    let autoPlaceVirgin = true;\n    let autoPlaceContainer;\n    let hide = false;\n    const hideableGuis = [];\n    const GUI = function (pars) {\n        const _this = this;\n        let params = pars || {};\n        this.domElement = document.createElement('div');\n        this.__ul = document.createElement('ul');\n        this.domElement.appendChild(this.__ul);\n        dom.addClass(this.domElement, CSS_NAMESPACE);\n        this.__folders = {};\n        this.__controllers = [];\n        this.__rememberedObjects = [];\n        this.__rememberedObjectIndecesToControllers = [];\n        this.__listening = [];\n        params = common.defaults(params, {\n            closeOnTop: false,\n            autoPlace: true,\n            width: GUI.DEFAULT_WIDTH\n        });\n        params = common.defaults(params, {\n            resizable: params.autoPlace,\n            hideable: params.autoPlace\n        });\n        if (!common.isUndefined(params.load)) {\n            if (params.preset) {\n                params.load.preset = params.preset;\n            }\n        } else {\n            params.load = { preset: DEFAULT_DEFAULT_PRESET_NAME };\n        }\n        if (common.isUndefined(params.parent) && params.hideable) {\n            hideableGuis.push(this);\n        }\n        params.resizable = common.isUndefined(params.parent) && params.resizable;\n        if (params.autoPlace && common.isUndefined(params.scrollable)) {\n            params.scrollable = true;\n        }\n        let useLocalStorage = SUPPORTS_LOCAL_STORAGE && localStorage.getItem(getLocalStorageHash(this, 'isLocal')) === 'true';\n        let saveToLocalStorage;\n        let titleRow;\n        Object.defineProperties(this, {\n            parent: {\n                get: function () {\n                    return params.parent;\n                }\n            },\n            scrollable: {\n                get: function () {\n                    return params.scrollable;\n                }\n            },\n            autoPlace: {\n                get: function () {\n                    return params.autoPlace;\n                }\n            },\n            closeOnTop: {\n                get: function () {\n                    return params.closeOnTop;\n                }\n            },\n            preset: {\n                get: function () {\n                    if (_this.parent) {\n                        return _this.getRoot().preset;\n                    }\n                    return params.load.preset;\n                },\n                set: function (v) {\n                    if (_this.parent) {\n                        _this.getRoot().preset = v;\n                    } else {\n                        params.load.preset = v;\n                    }\n                    setPresetSelectIndex(this);\n                    _this.revert();\n                }\n            },\n            width: {\n                get: function () {\n                    return params.width;\n                },\n                set: function (v) {\n                    params.width = v;\n                    setWidth(_this, v);\n                }\n            },\n            name: {\n                get: function () {\n                    return params.name;\n                },\n                set: function (v) {\n                    params.name = v;\n                    if (titleRow) {\n                        titleRow.innerHTML = params.name;\n                    }\n                }\n            },\n            closed: {\n                get: function () {\n                    return params.closed;\n                },\n                set: function (v) {\n                    params.closed = v;\n                    if (params.closed) {\n                        dom.addClass(_this.__ul, GUI.CLASS_CLOSED);\n                    } else {\n                        dom.removeClass(_this.__ul, GUI.CLASS_CLOSED);\n                    }\n                    this.onResize();\n                    if (_this.__closeButton) {\n                        _this.__closeButton.innerHTML = v ? GUI.TEXT_OPEN : GUI.TEXT_CLOSED;\n                    }\n                }\n            },\n            load: {\n                get: function () {\n                    return params.load;\n                }\n            },\n            useLocalStorage: {\n                get: function () {\n                    return useLocalStorage;\n                },\n                set: function (bool) {\n                    if (SUPPORTS_LOCAL_STORAGE) {\n                        useLocalStorage = bool;\n                        if (bool) {\n                            dom.bind(window, 'unload', saveToLocalStorage);\n                        } else {\n                            dom.unbind(window, 'unload', saveToLocalStorage);\n                        }\n                        localStorage.setItem(getLocalStorageHash(_this, 'isLocal'), bool);\n                    }\n                }\n            }\n        });\n        if (common.isUndefined(params.parent)) {\n            this.closed = params.closed || false;\n            dom.addClass(this.domElement, GUI.CLASS_MAIN);\n            dom.makeSelectable(this.domElement, false);\n            if (SUPPORTS_LOCAL_STORAGE) {\n                if (useLocalStorage) {\n                    _this.useLocalStorage = true;\n                    const savedGui = localStorage.getItem(getLocalStorageHash(this, 'gui'));\n                    if (savedGui) {\n                        params.load = JSON.parse(savedGui);\n                    }\n                }\n            }\n            this.__closeButton = document.createElement('div');\n            this.__closeButton.innerHTML = GUI.TEXT_CLOSED;\n            dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BUTTON);\n            if (params.closeOnTop) {\n                dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_TOP);\n                this.domElement.insertBefore(this.__closeButton, this.domElement.childNodes[0]);\n            } else {\n                dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BOTTOM);\n                this.domElement.appendChild(this.__closeButton);\n            }\n            dom.bind(this.__closeButton, 'click', function () {\n                _this.closed = !_this.closed;\n            });\n        } else {\n            if (params.closed === undefined) {\n                params.closed = true;\n            }\n            const titleRowName = document.createTextNode(params.name);\n            dom.addClass(titleRowName, 'controller-name');\n            titleRow = addRow(_this, titleRowName);\n            const onClickTitle = function (e) {\n                e.preventDefault();\n                _this.closed = !_this.closed;\n                return false;\n            };\n            dom.addClass(this.__ul, GUI.CLASS_CLOSED);\n            dom.addClass(titleRow, 'title');\n            dom.bind(titleRow, 'click', onClickTitle);\n            if (!params.closed) {\n                this.closed = false;\n            }\n        }\n        if (params.autoPlace) {\n            if (common.isUndefined(params.parent)) {\n                if (autoPlaceVirgin) {\n                    autoPlaceContainer = document.createElement('div');\n                    dom.addClass(autoPlaceContainer, CSS_NAMESPACE);\n                    dom.addClass(autoPlaceContainer, GUI.CLASS_AUTO_PLACE_CONTAINER);\n                    document.body.appendChild(autoPlaceContainer);\n                    autoPlaceVirgin = false;\n                }\n                autoPlaceContainer.appendChild(this.domElement);\n                dom.addClass(this.domElement, GUI.CLASS_AUTO_PLACE);\n            }\n            if (!this.parent) {\n                setWidth(_this, params.width);\n            }\n        }\n        this.__resizeHandler = function () {\n            _this.onResizeDebounced();\n        };\n        dom.bind(window, 'resize', this.__resizeHandler);\n        dom.bind(this.__ul, 'webkitTransitionEnd', this.__resizeHandler);\n        dom.bind(this.__ul, 'transitionend', this.__resizeHandler);\n        dom.bind(this.__ul, 'oTransitionEnd', this.__resizeHandler);\n        this.onResize();\n        if (params.resizable) {\n            addResizeHandle(this);\n        }\n        saveToLocalStorage = function () {\n            if (SUPPORTS_LOCAL_STORAGE && localStorage.getItem(getLocalStorageHash(_this, 'isLocal')) === 'true') {\n                localStorage.setItem(getLocalStorageHash(_this, 'gui'), JSON.stringify(_this.getSaveObject()));\n            }\n        };\n        this.saveToLocalStorageIfPossible = saveToLocalStorage;\n        function resetWidth() {\n            const root = _this.getRoot();\n            root.width += 1;\n            common.defer(function () {\n                root.width -= 1;\n            });\n        }\n        if (!params.parent) {\n            resetWidth();\n        }\n    };\n    GUI.toggleHide = function () {\n        hide = !hide;\n        common.each(hideableGuis, function (gui) {\n            gui.domElement.style.display = hide ? 'none' : '';\n        });\n    };\n    GUI.CLASS_AUTO_PLACE = 'a';\n    GUI.CLASS_AUTO_PLACE_CONTAINER = 'ac';\n    GUI.CLASS_MAIN = 'main';\n    GUI.CLASS_CONTROLLER_ROW = 'cr';\n    GUI.CLASS_TOO_TALL = 'taller-than-window';\n    GUI.CLASS_CLOSED = 'closed';\n    GUI.CLASS_CLOSE_BUTTON = 'close-button';\n    GUI.CLASS_CLOSE_TOP = 'close-top';\n    GUI.CLASS_CLOSE_BOTTOM = 'close-bottom';\n    GUI.CLASS_DRAG = 'drag';\n    GUI.DEFAULT_WIDTH = 245;\n    GUI.TEXT_CLOSED = 'Close Controls';\n    GUI.TEXT_OPEN = 'Open Controls';\n    GUI._keydownHandler = function (e) {\n        if (document.activeElement.type !== 'text' && (e.which === HIDE_KEY_CODE || e.keyCode === HIDE_KEY_CODE)) {\n            GUI.toggleHide();\n        }\n    };\n    dom.bind(window, 'keydown', GUI._keydownHandler, false);\n    common.extend(GUI.prototype, {\n        add: function (object, property) {\n            return add(this, object, property, { factoryArgs: Array.prototype.slice.call(arguments, 2) });\n        },\n        addColor: function (object, property) {\n            return add(this, object, property, { color: true });\n        },\n        remove: function (controller) {\n            this.__ul.removeChild(controller.__li);\n            this.__controllers.splice(this.__controllers.indexOf(controller), 1);\n            const _this = this;\n            common.defer(function () {\n                _this.onResize();\n            });\n        },\n        destroy: function () {\n            if (this.parent) {\n                throw new Error('Only the root GUI should be removed with .destroy(). ' + 'For subfolders, use gui.removeFolder(folder) instead.');\n            }\n            if (this.autoPlace) {\n                autoPlaceContainer.removeChild(this.domElement);\n            }\n            const _this = this;\n            common.each(this.__folders, function (subfolder) {\n                _this.removeFolder(subfolder);\n            });\n            dom.unbind(window, 'keydown', GUI._keydownHandler, false);\n            removeListeners(this);\n        },\n        addFolder: function (name) {\n            if (this.__folders[name] !== undefined) {\n                throw new Error('You already have a folder in this GUI by the' + ' name \"' + name + '\"');\n            }\n            const newGuiParams = {\n                name: name,\n                parent: this\n            };\n            newGuiParams.autoPlace = this.autoPlace;\n            if (this.load && this.load.folders && this.load.folders[name]) {\n                newGuiParams.closed = this.load.folders[name].closed;\n                newGuiParams.load = this.load.folders[name];\n            }\n            const gui = new GUI(newGuiParams);\n            this.__folders[name] = gui;\n            const li = addRow(this, gui.domElement);\n            dom.addClass(li, 'folder');\n            return gui;\n        },\n        removeFolder: function (folder) {\n            this.__ul.removeChild(folder.domElement.parentElement);\n            delete this.__folders[folder.name];\n            if (this.load && this.load.folders && this.load.folders[folder.name]) {\n                delete this.load.folders[folder.name];\n            }\n            removeListeners(folder);\n            const _this = this;\n            common.each(folder.__folders, function (subfolder) {\n                folder.removeFolder(subfolder);\n            });\n            common.defer(function () {\n                _this.onResize();\n            });\n        },\n        open: function () {\n            this.closed = false;\n        },\n        close: function () {\n            this.closed = true;\n        },\n        hide: function () {\n            this.domElement.style.display = 'none';\n        },\n        show: function () {\n            this.domElement.style.display = '';\n        },\n        onResize: function () {\n            const root = this.getRoot();\n            if (root.scrollable) {\n                const top = dom.getOffset(root.__ul).top;\n                let h = 0;\n                common.each(root.__ul.childNodes, function (node) {\n                    if (!(root.autoPlace && node === root.__save_row)) {\n                        h += dom.getHeight(node);\n                    }\n                });\n                if (window.innerHeight - top - CLOSE_BUTTON_HEIGHT < h) {\n                    dom.addClass(root.domElement, GUI.CLASS_TOO_TALL);\n                    root.__ul.style.height = window.innerHeight - top - CLOSE_BUTTON_HEIGHT + 'px';\n                } else {\n                    dom.removeClass(root.domElement, GUI.CLASS_TOO_TALL);\n                    root.__ul.style.height = 'auto';\n                }\n            }\n            if (root.__resize_handle) {\n                common.defer(function () {\n                    root.__resize_handle.style.height = root.__ul.offsetHeight + 'px';\n                });\n            }\n            if (root.__closeButton) {\n                root.__closeButton.style.width = root.width + 'px';\n            }\n        },\n        onResizeDebounced: common.debounce(function () {\n            this.onResize();\n        }, 50),\n        remember: function () {\n            if (common.isUndefined(SAVE_DIALOGUE)) {\n                SAVE_DIALOGUE = new CenteredDiv();\n                SAVE_DIALOGUE.domElement.innerHTML = saveDialogueContents;\n            }\n            if (this.parent) {\n                throw new Error('You can only call remember on a top level GUI.');\n            }\n            const _this = this;\n            common.each(Array.prototype.slice.call(arguments), function (object) {\n                if (_this.__rememberedObjects.length === 0) {\n                    addSaveMenu(_this);\n                }\n                if (_this.__rememberedObjects.indexOf(object) === -1) {\n                    _this.__rememberedObjects.push(object);\n                }\n            });\n            if (this.autoPlace) {\n                setWidth(this, this.width);\n            }\n        },\n        getRoot: function () {\n            let gui = this;\n            while (gui.parent) {\n                gui = gui.parent;\n            }\n            return gui;\n        },\n        getSaveObject: function () {\n            const toReturn = this.load;\n            toReturn.closed = this.closed;\n            if (this.__rememberedObjects.length > 0) {\n                toReturn.preset = this.preset;\n                if (!toReturn.remembered) {\n                    toReturn.remembered = {};\n                }\n                toReturn.remembered[this.preset] = getCurrentPreset(this);\n            }\n            toReturn.folders = {};\n            common.each(this.__folders, function (element, key) {\n                toReturn.folders[key] = element.getSaveObject();\n            });\n            return toReturn;\n        },\n        save: function () {\n            if (!this.load.remembered) {\n                this.load.remembered = {};\n            }\n            this.load.remembered[this.preset] = getCurrentPreset(this);\n            markPresetModified(this, false);\n            this.saveToLocalStorageIfPossible();\n        },\n        saveAs: function (presetName) {\n            if (!this.load.remembered) {\n                this.load.remembered = {};\n                this.load.remembered[DEFAULT_DEFAULT_PRESET_NAME] = getCurrentPreset(this, true);\n            }\n            this.load.remembered[presetName] = getCurrentPreset(this);\n            this.preset = presetName;\n            addPresetOption(this, presetName, true);\n            this.saveToLocalStorageIfPossible();\n        },\n        revert: function (gui) {\n            common.each(this.__controllers, function (controller) {\n                if (!this.getRoot().load.remembered) {\n                    controller.setValue(controller.initialValue);\n                } else {\n                    recallSavedValue(gui || this.getRoot(), controller);\n                }\n                if (controller.__onFinishChange) {\n                    controller.__onFinishChange.call(controller, controller.getValue());\n                }\n            }, this);\n            common.each(this.__folders, function (folder) {\n                folder.revert(folder);\n            });\n            if (!gui) {\n                markPresetModified(this.getRoot(), false);\n            }\n        },\n        listen: function (controller) {\n            const init = this.__listening.length === 0;\n            this.__listening.push(controller);\n            if (init) {\n                updateDisplays(this.__listening);\n            }\n        },\n        updateDisplay: function () {\n            common.each(this.__controllers, function (controller) {\n                controller.updateDisplay();\n            });\n            common.each(this.__folders, function (folder) {\n                folder.updateDisplay();\n            });\n        }\n    });\n    function addRow(gui, newDom, liBefore) {\n        const li = document.createElement('li');\n        if (newDom) {\n            li.appendChild(newDom);\n        }\n        if (liBefore) {\n            gui.__ul.insertBefore(li, liBefore);\n        } else {\n            gui.__ul.appendChild(li);\n        }\n        gui.onResize();\n        return li;\n    }\n    function removeListeners(gui) {\n        dom.unbind(window, 'resize', gui.__resizeHandler);\n        if (gui.saveToLocalStorageIfPossible) {\n            dom.unbind(window, 'unload', gui.saveToLocalStorageIfPossible);\n        }\n    }\n    function markPresetModified(gui, modified) {\n        const opt = gui.__preset_select[gui.__preset_select.selectedIndex];\n        if (modified) {\n            opt.innerHTML = opt.value + '*';\n        } else {\n            opt.innerHTML = opt.value;\n        }\n    }\n    function augmentController(gui, li, controller) {\n        controller.__li = li;\n        controller.__gui = gui;\n        common.extend(controller, {\n            options: function (options) {\n                if (arguments.length > 1) {\n                    const nextSibling = controller.__li.nextElementSibling;\n                    controller.remove();\n                    return add(gui, controller.object, controller.property, {\n                        before: nextSibling,\n                        factoryArgs: [common.toArray(arguments)]\n                    });\n                }\n                if (common.isArray(options) || common.isObject(options)) {\n                    const nextSibling = controller.__li.nextElementSibling;\n                    controller.remove();\n                    return add(gui, controller.object, controller.property, {\n                        before: nextSibling,\n                        factoryArgs: [options]\n                    });\n                }\n            },\n            name: function (name) {\n                controller.__li.firstElementChild.firstElementChild.innerHTML = name;\n                return controller;\n            },\n            listen: function () {\n                controller.__gui.listen(controller);\n                return controller;\n            },\n            remove: function () {\n                controller.__gui.remove(controller);\n                return controller;\n            }\n        });\n        if (controller instanceof NumberControllerSlider) {\n            const box = new NumberControllerBox(controller.object, controller.property, {\n                min: controller.__min,\n                max: controller.__max,\n                step: controller.__step\n            });\n            common.each([\n                'updateDisplay',\n                'onChange',\n                'onFinishChange',\n                'step',\n                'min',\n                'max'\n            ], function (method) {\n                const pc = controller[method];\n                const pb = box[method];\n                controller[method] = box[method] = function () {\n                    const args = Array.prototype.slice.call(arguments);\n                    pb.apply(box, args);\n                    return pc.apply(controller, args);\n                };\n            });\n            dom.addClass(li, 'has-slider');\n            controller.domElement.insertBefore(box.domElement, controller.domElement.firstElementChild);\n        } else if (controller instanceof NumberControllerBox) {\n            const r = function (returned) {\n                if (common.isNumber(controller.__min) && common.isNumber(controller.__max)) {\n                    const oldName = controller.__li.firstElementChild.firstElementChild.innerHTML;\n                    const wasListening = controller.__gui.__listening.indexOf(controller) > -1;\n                    controller.remove();\n                    const newController = add(gui, controller.object, controller.property, {\n                        before: controller.__li.nextElementSibling,\n                        factoryArgs: [\n                            controller.__min,\n                            controller.__max,\n                            controller.__step\n                        ]\n                    });\n                    newController.name(oldName);\n                    if (wasListening)\n                        newController.listen();\n                    return newController;\n                }\n                return returned;\n            };\n            controller.min = common.compose(r, controller.min);\n            controller.max = common.compose(r, controller.max);\n        } else if (controller instanceof BooleanController) {\n            dom.bind(li, 'click', function () {\n                dom.fakeEvent(controller.__checkbox, 'click');\n            });\n            dom.bind(controller.__checkbox, 'click', function (e) {\n                e.stopPropagation();\n            });\n        } else if (controller instanceof FunctionController) {\n            dom.bind(li, 'click', function () {\n                dom.fakeEvent(controller.__button, 'click');\n            });\n            dom.bind(li, 'mouseover', function () {\n                dom.addClass(controller.__button, 'hover');\n            });\n            dom.bind(li, 'mouseout', function () {\n                dom.removeClass(controller.__button, 'hover');\n            });\n        } else if (controller instanceof ColorController) {\n            dom.addClass(li, 'color');\n            controller.updateDisplay = common.compose(function (val) {\n                li.style.borderLeftColor = controller.__color.toString();\n                return val;\n            }, controller.updateDisplay);\n            controller.updateDisplay();\n        }\n        controller.setValue = common.compose(function (val) {\n            if (gui.getRoot().__preset_select && controller.isModified()) {\n                markPresetModified(gui.getRoot(), true);\n            }\n            return val;\n        }, controller.setValue);\n    }\n    function recallSavedValue(gui, controller) {\n        const root = gui.getRoot();\n        const matchedIndex = root.__rememberedObjects.indexOf(controller.object);\n        if (matchedIndex !== -1) {\n            let controllerMap = root.__rememberedObjectIndecesToControllers[matchedIndex];\n            if (controllerMap === undefined) {\n                controllerMap = {};\n                root.__rememberedObjectIndecesToControllers[matchedIndex] = controllerMap;\n            }\n            controllerMap[controller.property] = controller;\n            if (root.load && root.load.remembered) {\n                const presetMap = root.load.remembered;\n                let preset;\n                if (presetMap[gui.preset]) {\n                    preset = presetMap[gui.preset];\n                } else if (presetMap[DEFAULT_DEFAULT_PRESET_NAME]) {\n                    preset = presetMap[DEFAULT_DEFAULT_PRESET_NAME];\n                } else {\n                    return;\n                }\n                if (preset[matchedIndex] && preset[matchedIndex][controller.property] !== undefined) {\n                    const value = preset[matchedIndex][controller.property];\n                    controller.initialValue = value;\n                    controller.setValue(value);\n                }\n            }\n        }\n    }\n    function add(gui, object, property, params) {\n        if (object[property] === undefined) {\n            throw new Error(`Object \"${ object }\" has no property \"${ property }\"`);\n        }\n        let controller;\n        if (params.color) {\n            controller = new ColorController(object, property);\n        } else {\n            const factoryArgs = [\n                object,\n                property\n            ].concat(params.factoryArgs);\n            controller = ControllerFactory.apply(gui, factoryArgs);\n        }\n        if (params.before instanceof Controller) {\n            params.before = params.before.__li;\n        }\n        recallSavedValue(gui, controller);\n        dom.addClass(controller.domElement, 'c');\n        const name = document.createElement('span');\n        dom.addClass(name, 'property-name');\n        name.innerHTML = controller.property;\n        const container = document.createElement('div');\n        container.appendChild(name);\n        container.appendChild(controller.domElement);\n        const li = addRow(gui, container, params.before);\n        dom.addClass(li, GUI.CLASS_CONTROLLER_ROW);\n        if (controller instanceof ColorController) {\n            dom.addClass(li, 'color');\n        } else {\n            dom.addClass(li, typeof controller.getValue());\n        }\n        augmentController(gui, li, controller);\n        gui.__controllers.push(controller);\n        return controller;\n    }\n    function getLocalStorageHash(gui, key) {\n        return document.location.href + '.' + key;\n    }\n    function addPresetOption(gui, name, setSelected) {\n        const opt = document.createElement('option');\n        opt.innerHTML = name;\n        opt.value = name;\n        gui.__preset_select.appendChild(opt);\n        if (setSelected) {\n            gui.__preset_select.selectedIndex = gui.__preset_select.length - 1;\n        }\n    }\n    function showHideExplain(gui, explain) {\n        explain.style.display = gui.useLocalStorage ? 'block' : 'none';\n    }\n    function addSaveMenu(gui) {\n        const div = gui.__save_row = document.createElement('li');\n        dom.addClass(gui.domElement, 'has-save');\n        gui.__ul.insertBefore(div, gui.__ul.firstChild);\n        dom.addClass(div, 'save-row');\n        const gears = document.createElement('span');\n        gears.innerHTML = '&nbsp;';\n        dom.addClass(gears, 'button gears');\n        const button = document.createElement('span');\n        button.innerHTML = 'Save';\n        dom.addClass(button, 'button');\n        dom.addClass(button, 'save');\n        const button2 = document.createElement('span');\n        button2.innerHTML = 'New';\n        dom.addClass(button2, 'button');\n        dom.addClass(button2, 'save-as');\n        const button3 = document.createElement('span');\n        button3.innerHTML = 'Revert';\n        dom.addClass(button3, 'button');\n        dom.addClass(button3, 'revert');\n        const select = gui.__preset_select = document.createElement('select');\n        if (gui.load && gui.load.remembered) {\n            common.each(gui.load.remembered, function (value, key) {\n                addPresetOption(gui, key, key === gui.preset);\n            });\n        } else {\n            addPresetOption(gui, DEFAULT_DEFAULT_PRESET_NAME, false);\n        }\n        dom.bind(select, 'change', function () {\n            for (let index = 0; index < gui.__preset_select.length; index++) {\n                gui.__preset_select[index].innerHTML = gui.__preset_select[index].value;\n            }\n            gui.preset = this.value;\n        });\n        div.appendChild(select);\n        div.appendChild(gears);\n        div.appendChild(button);\n        div.appendChild(button2);\n        div.appendChild(button3);\n        if (SUPPORTS_LOCAL_STORAGE) {\n            const explain = document.getElementById('dg-local-explain');\n            const localStorageCheckBox = document.getElementById('dg-local-storage');\n            const saveLocally = document.getElementById('dg-save-locally');\n            saveLocally.style.display = 'block';\n            if (localStorage.getItem(getLocalStorageHash(gui, 'isLocal')) === 'true') {\n                localStorageCheckBox.setAttribute('checked', 'checked');\n            }\n            showHideExplain(gui, explain);\n            dom.bind(localStorageCheckBox, 'change', function () {\n                gui.useLocalStorage = !gui.useLocalStorage;\n                showHideExplain(gui, explain);\n            });\n        }\n        const newConstructorTextArea = document.getElementById('dg-new-constructor');\n        dom.bind(newConstructorTextArea, 'keydown', function (e) {\n            if (e.metaKey && (e.which === 67 || e.keyCode === 67)) {\n                SAVE_DIALOGUE.hide();\n            }\n        });\n        dom.bind(gears, 'click', function () {\n            newConstructorTextArea.innerHTML = JSON.stringify(gui.getSaveObject(), undefined, 2);\n            SAVE_DIALOGUE.show();\n            newConstructorTextArea.focus();\n            newConstructorTextArea.select();\n        });\n        dom.bind(button, 'click', function () {\n            gui.save();\n        });\n        dom.bind(button2, 'click', function () {\n            const presetName = prompt('Enter a new preset name.');\n            if (presetName) {\n                gui.saveAs(presetName);\n            }\n        });\n        dom.bind(button3, 'click', function () {\n            gui.revert();\n        });\n    }\n    function addResizeHandle(gui) {\n        let pmouseX;\n        gui.__resize_handle = document.createElement('div');\n        common.extend(gui.__resize_handle.style, {\n            width: '6px',\n            marginLeft: '-3px',\n            height: '200px',\n            cursor: 'ew-resize',\n            position: 'absolute'\n        });\n        function drag(e) {\n            e.preventDefault();\n            gui.width += pmouseX - e.clientX;\n            gui.onResize();\n            pmouseX = e.clientX;\n            return false;\n        }\n        function dragStop() {\n            dom.removeClass(gui.__closeButton, GUI.CLASS_DRAG);\n            dom.unbind(window, 'mousemove', drag);\n            dom.unbind(window, 'mouseup', dragStop);\n        }\n        function dragStart(e) {\n            e.preventDefault();\n            pmouseX = e.clientX;\n            dom.addClass(gui.__closeButton, GUI.CLASS_DRAG);\n            dom.bind(window, 'mousemove', drag);\n            dom.bind(window, 'mouseup', dragStop);\n            return false;\n        }\n        dom.bind(gui.__resize_handle, 'mousedown', dragStart);\n        dom.bind(gui.__closeButton, 'mousedown', dragStart);\n        gui.domElement.insertBefore(gui.__resize_handle, gui.domElement.firstElementChild);\n    }\n    function setWidth(gui, w) {\n        gui.domElement.style.width = w + 'px';\n        if (gui.__save_row && gui.autoPlace) {\n            gui.__save_row.style.width = w + 'px';\n        }\n        if (gui.__closeButton) {\n            gui.__closeButton.style.width = w + 'px';\n        }\n    }\n    function getCurrentPreset(gui, useInitialValues) {\n        const toReturn = {};\n        common.each(gui.__rememberedObjects, function (val, index) {\n            const savedValues = {};\n            const controllerMap = gui.__rememberedObjectIndecesToControllers[index];\n            common.each(controllerMap, function (controller, property) {\n                savedValues[property] = useInitialValues ? controller.initialValue : controller.getValue();\n            });\n            toReturn[index] = savedValues;\n        });\n        return toReturn;\n    }\n    function setPresetSelectIndex(gui) {\n        for (let index = 0; index < gui.__preset_select.length; index++) {\n            if (gui.__preset_select[index].value === gui.preset) {\n                gui.__preset_select.selectedIndex = index;\n            }\n        }\n    }\n    function updateDisplays(controllerArray) {\n        if (controllerArray.length !== 0) {\n            requestAnimationFrame.call(window, function () {\n                updateDisplays(controllerArray);\n            });\n        }\n        common.each(controllerArray, function (c) {\n            c.updateDisplay();\n        });\n    }\n    return GUI;\n});\ndefine('skylark-datgui/main',[\n    \"skylark-langx-ns\",\n    './color/Color',\n    './color/math',\n    './color/interpret',\n    './controllers/Controller',\n    './controllers/BooleanController',\n    './controllers/OptionController',\n    './controllers/StringController',\n    './controllers/NumberController',\n    './controllers/NumberControllerBox',\n    './controllers/NumberControllerSlider',\n    './controllers/FunctionController',\n    './controllers/ColorController',\n    './dom/dom',\n    './gui/GUI'\n], function (skylark,Color, math, interpret, Controller, BooleanController, OptionController, StringController, NumberController, NumberControllerBox, NumberControllerSlider, FunctionController, ColorController, domImport, GUIImport) {\n    'use strict';\n    const color = {\n        Color: Color,\n        math: math,\n        interpret: interpret\n    };\n    const controllers = {\n        Controller: Controller,\n        BooleanController: BooleanController,\n        OptionController: OptionController,\n        StringController: StringController,\n        NumberController: NumberController,\n        NumberControllerBox: NumberControllerBox,\n        NumberControllerSlider: NumberControllerSlider,\n        FunctionController: FunctionController,\n        ColorController: ColorController\n    };\n    const dom = { dom: domImport };\n    const gui = { GUI: GUIImport };\n    const GUI = GUIImport;\n    return skylark.attach(\"intg.datgui\",{\n        color,\n        controllers,\n        dom,\n        gui,\n        GUI\n    });\n});\ndefine('skylark-datgui', ['skylark-datgui/main'], function (main) { return main; });\n\n"]}