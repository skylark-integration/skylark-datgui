{"version":3,"sources":["skylark-datgui.js"],"names":["define","color","forceCSSHex","colorFormat","__state","conversionName","toString","r","Math","round","g","b","a","h","s","toFixed","v","str","hex","length","ARR_EACH","Array","prototype","forEach","ARR_SLICE","slice","Common","BREAK","extend","target","this","each","call","arguments","obj","keys","isObject","Object","key","isUndefined","bind","defaults","compose","toCall","args","i","apply","itr","scope","l","defer","fnc","setTimeout","debounce","func","threshold","callImmediately","timeout","callNow","clearTimeout","toArray","undefined","isNull","isNaN","isArray","constructor","isNumber","isString","isBoolean","isFunction","Function","common","INTERPRETATIONS","litmus","conversions","THREE_CHAR_HEX","read","original","test","match","space","parseInt","write","SIX_CHAR_HEX","CSS_RGB","parseFloat","CSS_RGBA","HEX","RGB_ARRAY","RGBA_ARRAY","RGBA_OBJ","RGB_OBJ","HSVA_OBJ","HSV_OBJ","result","toReturn","family","conversion","tmpComponent","ColorMath","hsv_to_rgb","hi","floor","f","p","q","t","c","rgb_to_hsv","min","max","delta","NaN","rgb_to_hex","hex_with_component","component_from_hex","componentIndex","value","interpret","math","colorToString","Color","[object Object]","Error","defineRGBComponent","component","componentHexIndex","defineProperty","get","recalculateRGB","set","defineHSVComponent","recalculateHSV","COMPONENTS","object","property","initialValue","domElement","document","createElement","__onChange","__onFinishChange","newValue","updateDisplay","getValue","EVENT_MAP_INV","HTMLEvents","MouseEvents","KeyboardEvents","k","e","CSS_VALUE_PIXELS","cssValueToPixels","val","dom","makeSelectable","elem","selectable","style","onselectstart","MozUserSelect","KhtmlUserSelect","unselectable","makeFullscreen","hor","vert","vertical","horizontal","position","left","right","top","bottom","fakeEvent","eventType","pars","aux","params","className","evt","createEvent","clientX","x","clientY","y","initMouseEvent","bubbles","cancelable","window","clickCount","init","initKeyboardEvent","initKeyEvent","ctrlKey","altKey","shiftKey","metaKey","keyCode","charCode","initEvent","dispatchEvent","event","newBool","bool","addEventListener","attachEvent","unbind","removeEventListener","detachEvent","addClass","classes","split","indexOf","push","join","replace","removeClass","removeAttribute","index","splice","hasClass","RegExp","getWidth","getComputedStyle","width","getHeight","height","getOffset","el","offset","offsetParent","offsetLeft","offsetTop","isActive","activeElement","type","href","Controller","super","_this","__prev","__checkbox","setAttribute","setValue","appendChild","checked","opts","options","__select","map","element","opt","innerHTML","desiredValue","selectedIndex","onChange","__input","blur","numDecimals","_x","_params","__min","__max","__step","step","__impliedStep","pow","log","abs","LN10","__precision","_v","minValue","maxValue","stepValue","NumberController","__truncationSuspended","prevY","onFinish","onMouseDrag","diff","onMouseUp","attempted","decimals","tenTo","roundToDecimal","i1","i2","o1","o2","preventDefault","bgRect","__background","getBoundingClientRect","onTouchMove","touches","onTouchEnd","__foreground","pct","text","__button","fire","vendors","linearGradient","background","vendor","cssText","__color","__temp","__selector","__saturation_field","__field_knob","__field_knob_border","__hue_knob","__hue_field","__input_textShadow","onBlur","valueField","fieldDown","setSV","fieldUpSV","fieldDownH","setH","fieldUpH","toOriginal","fieldRect","padding","backgroundColor","boxShadow","border","borderRadius","zIndex","borderRight","marginRight","display","cursor","outline","textAlign","fontWeight","textShadow","mismatch","flip","_flip","marginLeft","marginTop","toHexString","css","load","url","indoc","doc","link","rel","getElementsByTagName","inject","cssContent","injected","head","OptionController","NumberControllerBox","NumberControllerSlider","StringController","FunctionController","BooleanController","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","backgroundElement","opacity","WebkitTransition","transition","body","hide","webkitTransform","layout","innerWidth","innerHeight","saveDialogueContents","ControllerFactory","ColorController","CenteredDiv","styleSheet","DEFAULT_DEFAULT_PRESET_NAME","SUPPORTS_LOCAL_STORAGE","localStorage","SAVE_DIALOGUE","autoPlaceContainer","autoPlaceVirgin","hideableGuis","GUI","__ul","__folders","__controllers","__rememberedObjects","__rememberedObjectIndecesToControllers","__listening","closeOnTop","autoPlace","DEFAULT_WIDTH","resizable","hideable","preset","parent","scrollable","saveToLocalStorage","titleRow","useLocalStorage","getItem","getLocalStorageHash","defineProperties","getRoot","gui","__preset_select","setPresetSelectIndex","revert","setWidth","name","closed","CLASS_CLOSED","onResize","__closeButton","TEXT_OPEN","TEXT_CLOSED","setItem","CLASS_MAIN","savedGui","JSON","parse","CLASS_CLOSE_BUTTON","CLASS_CLOSE_TOP","insertBefore","childNodes","CLASS_CLOSE_BOTTOM","titleRowName","createTextNode","addRow","onClickTitle","CLASS_AUTO_PLACE_CONTAINER","CLASS_AUTO_PLACE","__resizeHandler","onResizeDebounced","pmouseX","drag","dragStop","CLASS_DRAG","dragStart","__resize_handle","firstElementChild","addResizeHandle","stringify","getSaveObject","saveToLocalStorageIfPossible","root","resetWidth","newDom","liBefore","li","removeListeners","markPresetModified","modified","recallSavedValue","controller","matchedIndex","controllerMap","remembered","presetMap","add","factoryArgs","concat","before","__li","container","CLASS_CONTROLLER_ROW","__gui","nextSibling","nextElementSibling","remove","listen","box","method","pc","pb","returned","oldName","wasListening","newController","stopPropagation","borderLeftColor","isModified","augmentController","location","addPresetOption","setSelected","showHideExplain","explain","w","__save_row","getCurrentPreset","useInitialValues","savedValues","toggleHide","CLASS_TOO_TALL","_keydownHandler","which","addColor","removeChild","destroy","subfolder","removeFolder","addFolder","newGuiParams","folders","folder","parentElement","open","close","show","node","offsetHeight","remember","div","firstChild","gears","button","button2","button3","select","getElementById","localStorageCheckBox","saveLocally","newConstructorTextArea","focus","save","presetName","prompt","saveAs","addSaveMenu","updateDisplays","controllerArray","skylark","domImport","GUIImport","controllers","attach","main"],"mappings":"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","file":"../skylark-datgui.js","sourcesContent":["define('skylark-datgui/color/toString',[],function () {\n    'use strict';\n    return function (color, forceCSSHex) {\n        const colorFormat = color.__state.conversionName.toString();\n        const r = Math.round(color.r);\n        const g = Math.round(color.g);\n        const b = Math.round(color.b);\n        const a = color.a;\n        const h = Math.round(color.h);\n        const s = color.s.toFixed(1);\n        const v = color.v.toFixed(1);\n        if (forceCSSHex || colorFormat === 'THREE_CHAR_HEX' || colorFormat === 'SIX_CHAR_HEX') {\n            let str = color.hex.toString(16);\n            while (str.length < 6) {\n                str = '0' + str;\n            }\n            return '#' + str;\n        } else if (colorFormat === 'CSS_RGB') {\n            return 'rgb(' + r + ',' + g + ',' + b + ')';\n        } else if (colorFormat === 'CSS_RGBA') {\n            return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n        } else if (colorFormat === 'HEX') {\n            return '0x' + color.hex.toString(16);\n        } else if (colorFormat === 'RGB_ARRAY') {\n            return '[' + r + ',' + g + ',' + b + ']';\n        } else if (colorFormat === 'RGBA_ARRAY') {\n            return '[' + r + ',' + g + ',' + b + ',' + a + ']';\n        } else if (colorFormat === 'RGB_OBJ') {\n            return '{r:' + r + ',g:' + g + ',b:' + b + '}';\n        } else if (colorFormat === 'RGBA_OBJ') {\n            return '{r:' + r + ',g:' + g + ',b:' + b + ',a:' + a + '}';\n        } else if (colorFormat === 'HSV_OBJ') {\n            return '{h:' + h + ',s:' + s + ',v:' + v + '}';\n        } else if (colorFormat === 'HSVA_OBJ') {\n            return '{h:' + h + ',s:' + s + ',v:' + v + ',a:' + a + '}';\n        }\n        return 'unknown format';\n    };\n});\ndefine('skylark-datgui/utils/common',[],function () {\n    'use strict';\n    const ARR_EACH = Array.prototype.forEach;\n    const ARR_SLICE = Array.prototype.slice;\n    const Common = {\n        BREAK: {},\n        extend: function (target) {\n            this.each(ARR_SLICE.call(arguments, 1), function (obj) {\n                const keys = this.isObject(obj) ? Object.keys(obj) : [];\n                keys.forEach(function (key) {\n                    if (!this.isUndefined(obj[key])) {\n                        target[key] = obj[key];\n                    }\n                }.bind(this));\n            }, this);\n            return target;\n        },\n        defaults: function (target) {\n            this.each(ARR_SLICE.call(arguments, 1), function (obj) {\n                const keys = this.isObject(obj) ? Object.keys(obj) : [];\n                keys.forEach(function (key) {\n                    if (this.isUndefined(target[key])) {\n                        target[key] = obj[key];\n                    }\n                }.bind(this));\n            }, this);\n            return target;\n        },\n        compose: function () {\n            const toCall = ARR_SLICE.call(arguments);\n            return function () {\n                let args = ARR_SLICE.call(arguments);\n                for (let i = toCall.length - 1; i >= 0; i--) {\n                    args = [toCall[i].apply(this, args)];\n                }\n                return args[0];\n            };\n        },\n        each: function (obj, itr, scope) {\n            if (!obj) {\n                return;\n            }\n            if (ARR_EACH && obj.forEach && obj.forEach === ARR_EACH) {\n                obj.forEach(itr, scope);\n            } else if (obj.length === obj.length + 0) {\n                let key;\n                let l;\n                for (key = 0, l = obj.length; key < l; key++) {\n                    if (key in obj && itr.call(scope, obj[key], key) === this.BREAK) {\n                        return;\n                    }\n                }\n            } else {\n                for (const key in obj) {\n                    if (itr.call(scope, obj[key], key) === this.BREAK) {\n                        return;\n                    }\n                }\n            }\n        },\n        defer: function (fnc) {\n            setTimeout(fnc, 0);\n        },\n        debounce: function (func, threshold, callImmediately) {\n            let timeout;\n            return function () {\n                const obj = this;\n                const args = arguments;\n                function delayed() {\n                    timeout = null;\n                    if (!callImmediately)\n                        func.apply(obj, args);\n                }\n                const callNow = callImmediately || !timeout;\n                clearTimeout(timeout);\n                timeout = setTimeout(delayed, threshold);\n                if (callNow) {\n                    func.apply(obj, args);\n                }\n            };\n        },\n        toArray: function (obj) {\n            if (obj.toArray)\n                return obj.toArray();\n            return ARR_SLICE.call(obj);\n        },\n        isUndefined: function (obj) {\n            return obj === undefined;\n        },\n        isNull: function (obj) {\n            return obj === null;\n        },\n        isNaN: function (obj) {\n            return isNaN(obj);\n        },\n        isArray: Array.isArray || function (obj) {\n            return obj.constructor === Array;\n        },\n        isObject: function (obj) {\n            return obj === Object(obj);\n        },\n        isNumber: function (obj) {\n            return obj === obj + 0;\n        },\n        isString: function (obj) {\n            return obj === obj + '';\n        },\n        isBoolean: function (obj) {\n            return obj === false || obj === true;\n        },\n        isFunction: function (obj) {\n            return obj instanceof Function;\n        }\n    };\n    return Common;\n});\ndefine('skylark-datgui/color/interpret',[\n    './toString',\n    '../utils/common'\n], function (toString, common) {\n    'use strict';\n    const INTERPRETATIONS = [\n        {\n            litmus: common.isString,\n            conversions: {\n                THREE_CHAR_HEX: {\n                    read: function (original) {\n                        const test = original.match(/^#([A-F0-9])([A-F0-9])([A-F0-9])$/i);\n                        if (test === null) {\n                            return false;\n                        }\n                        return {\n                            space: 'HEX',\n                            hex: parseInt('0x' + test[1].toString() + test[1].toString() + test[2].toString() + test[2].toString() + test[3].toString() + test[3].toString(), 0)\n                        };\n                    },\n                    write: toString\n                },\n                SIX_CHAR_HEX: {\n                    read: function (original) {\n                        const test = original.match(/^#([A-F0-9]{6})$/i);\n                        if (test === null) {\n                            return false;\n                        }\n                        return {\n                            space: 'HEX',\n                            hex: parseInt('0x' + test[1].toString(), 0)\n                        };\n                    },\n                    write: toString\n                },\n                CSS_RGB: {\n                    read: function (original) {\n                        const test = original.match(/^rgb\\(\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*\\)/);\n                        if (test === null) {\n                            return false;\n                        }\n                        return {\n                            space: 'RGB',\n                            r: parseFloat(test[1]),\n                            g: parseFloat(test[2]),\n                            b: parseFloat(test[3])\n                        };\n                    },\n                    write: toString\n                },\n                CSS_RGBA: {\n                    read: function (original) {\n                        const test = original.match(/^rgba\\(\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*\\)/);\n                        if (test === null) {\n                            return false;\n                        }\n                        return {\n                            space: 'RGB',\n                            r: parseFloat(test[1]),\n                            g: parseFloat(test[2]),\n                            b: parseFloat(test[3]),\n                            a: parseFloat(test[4])\n                        };\n                    },\n                    write: toString\n                }\n            }\n        },\n        {\n            litmus: common.isNumber,\n            conversions: {\n                HEX: {\n                    read: function (original) {\n                        return {\n                            space: 'HEX',\n                            hex: original,\n                            conversionName: 'HEX'\n                        };\n                    },\n                    write: function (color) {\n                        return color.hex;\n                    }\n                }\n            }\n        },\n        {\n            litmus: common.isArray,\n            conversions: {\n                RGB_ARRAY: {\n                    read: function (original) {\n                        if (original.length !== 3) {\n                            return false;\n                        }\n                        return {\n                            space: 'RGB',\n                            r: original[0],\n                            g: original[1],\n                            b: original[2]\n                        };\n                    },\n                    write: function (color) {\n                        return [\n                            color.r,\n                            color.g,\n                            color.b\n                        ];\n                    }\n                },\n                RGBA_ARRAY: {\n                    read: function (original) {\n                        if (original.length !== 4)\n                            return false;\n                        return {\n                            space: 'RGB',\n                            r: original[0],\n                            g: original[1],\n                            b: original[2],\n                            a: original[3]\n                        };\n                    },\n                    write: function (color) {\n                        return [\n                            color.r,\n                            color.g,\n                            color.b,\n                            color.a\n                        ];\n                    }\n                }\n            }\n        },\n        {\n            litmus: common.isObject,\n            conversions: {\n                RGBA_OBJ: {\n                    read: function (original) {\n                        if (common.isNumber(original.r) && common.isNumber(original.g) && common.isNumber(original.b) && common.isNumber(original.a)) {\n                            return {\n                                space: 'RGB',\n                                r: original.r,\n                                g: original.g,\n                                b: original.b,\n                                a: original.a\n                            };\n                        }\n                        return false;\n                    },\n                    write: function (color) {\n                        return {\n                            r: color.r,\n                            g: color.g,\n                            b: color.b,\n                            a: color.a\n                        };\n                    }\n                },\n                RGB_OBJ: {\n                    read: function (original) {\n                        if (common.isNumber(original.r) && common.isNumber(original.g) && common.isNumber(original.b)) {\n                            return {\n                                space: 'RGB',\n                                r: original.r,\n                                g: original.g,\n                                b: original.b\n                            };\n                        }\n                        return false;\n                    },\n                    write: function (color) {\n                        return {\n                            r: color.r,\n                            g: color.g,\n                            b: color.b\n                        };\n                    }\n                },\n                HSVA_OBJ: {\n                    read: function (original) {\n                        if (common.isNumber(original.h) && common.isNumber(original.s) && common.isNumber(original.v) && common.isNumber(original.a)) {\n                            return {\n                                space: 'HSV',\n                                h: original.h,\n                                s: original.s,\n                                v: original.v,\n                                a: original.a\n                            };\n                        }\n                        return false;\n                    },\n                    write: function (color) {\n                        return {\n                            h: color.h,\n                            s: color.s,\n                            v: color.v,\n                            a: color.a\n                        };\n                    }\n                },\n                HSV_OBJ: {\n                    read: function (original) {\n                        if (common.isNumber(original.h) && common.isNumber(original.s) && common.isNumber(original.v)) {\n                            return {\n                                space: 'HSV',\n                                h: original.h,\n                                s: original.s,\n                                v: original.v\n                            };\n                        }\n                        return false;\n                    },\n                    write: function (color) {\n                        return {\n                            h: color.h,\n                            s: color.s,\n                            v: color.v\n                        };\n                    }\n                }\n            }\n        }\n    ];\n    let result;\n    let toReturn;\n    const interpret = function () {\n        toReturn = false;\n        const original = arguments.length > 1 ? common.toArray(arguments) : arguments[0];\n        common.each(INTERPRETATIONS, function (family) {\n            if (family.litmus(original)) {\n                common.each(family.conversions, function (conversion, conversionName) {\n                    result = conversion.read(original);\n                    if (toReturn === false && result !== false) {\n                        toReturn = result;\n                        result.conversionName = conversionName;\n                        result.conversion = conversion;\n                        return common.BREAK;\n                    }\n                });\n                return common.BREAK;\n            }\n        });\n        return toReturn;\n    };\n    return interpret;\n});\ndefine('skylark-datgui/color/math',[],function () {\n    'use strict';\n    let tmpComponent;\n    const ColorMath = {\n        hsv_to_rgb: function (h, s, v) {\n            const hi = Math.floor(h / 60) % 6;\n            const f = h / 60 - Math.floor(h / 60);\n            const p = v * (1 - s);\n            const q = v * (1 - f * s);\n            const t = v * (1 - (1 - f) * s);\n            const c = [\n                [\n                    v,\n                    t,\n                    p\n                ],\n                [\n                    q,\n                    v,\n                    p\n                ],\n                [\n                    p,\n                    v,\n                    t\n                ],\n                [\n                    p,\n                    q,\n                    v\n                ],\n                [\n                    t,\n                    p,\n                    v\n                ],\n                [\n                    v,\n                    p,\n                    q\n                ]\n            ][hi];\n            return {\n                r: c[0] * 255,\n                g: c[1] * 255,\n                b: c[2] * 255\n            };\n        },\n        rgb_to_hsv: function (r, g, b) {\n            const min = Math.min(r, g, b);\n            const max = Math.max(r, g, b);\n            const delta = max - min;\n            let h;\n            let s;\n            if (max !== 0) {\n                s = delta / max;\n            } else {\n                return {\n                    h: NaN,\n                    s: 0,\n                    v: 0\n                };\n            }\n            if (r === max) {\n                h = (g - b) / delta;\n            } else if (g === max) {\n                h = 2 + (b - r) / delta;\n            } else {\n                h = 4 + (r - g) / delta;\n            }\n            h /= 6;\n            if (h < 0) {\n                h += 1;\n            }\n            return {\n                h: h * 360,\n                s: s,\n                v: max / 255\n            };\n        },\n        rgb_to_hex: function (r, g, b) {\n            let hex = this.hex_with_component(0, 2, r);\n            hex = this.hex_with_component(hex, 1, g);\n            hex = this.hex_with_component(hex, 0, b);\n            return hex;\n        },\n        component_from_hex: function (hex, componentIndex) {\n            return hex >> componentIndex * 8 & 255;\n        },\n        hex_with_component: function (hex, componentIndex, value) {\n            return value << (tmpComponent = componentIndex * 8) | hex & ~(255 << tmpComponent);\n        }\n    };\n    return ColorMath;\n});\ndefine('skylark-datgui/color/Color',[\n    './interpret',\n    './math',\n    './toString',\n    '../utils/common'\n], function (interpret, math, colorToString, common) {\n    'use strict';\n    class Color {\n        constructor() {\n            this.__state = interpret.apply(this, arguments);\n            if (this.__state === false) {\n                throw new Error('Failed to interpret color arguments');\n            }\n            this.__state.a = this.__state.a || 1;\n        }\n        toString() {\n            return colorToString(this);\n        }\n        toHexString() {\n            return colorToString(this, true);\n        }\n        toOriginal() {\n            return this.__state.conversion.write(this);\n        }\n    }\n    function defineRGBComponent(target, component, componentHexIndex) {\n        Object.defineProperty(target, component, {\n            get: function () {\n                if (this.__state.space === 'RGB') {\n                    return this.__state[component];\n                }\n                Color.recalculateRGB(this, component, componentHexIndex);\n                return this.__state[component];\n            },\n            set: function (v) {\n                if (this.__state.space !== 'RGB') {\n                    Color.recalculateRGB(this, component, componentHexIndex);\n                    this.__state.space = 'RGB';\n                }\n                this.__state[component] = v;\n            }\n        });\n    }\n    function defineHSVComponent(target, component) {\n        Object.defineProperty(target, component, {\n            get: function () {\n                if (this.__state.space === 'HSV') {\n                    return this.__state[component];\n                }\n                Color.recalculateHSV(this);\n                return this.__state[component];\n            },\n            set: function (v) {\n                if (this.__state.space !== 'HSV') {\n                    Color.recalculateHSV(this);\n                    this.__state.space = 'HSV';\n                }\n                this.__state[component] = v;\n            }\n        });\n    }\n    Color.recalculateRGB = function (color, component, componentHexIndex) {\n        if (color.__state.space === 'HEX') {\n            color.__state[component] = math.component_from_hex(color.__state.hex, componentHexIndex);\n        } else if (color.__state.space === 'HSV') {\n            common.extend(color.__state, math.hsv_to_rgb(color.__state.h, color.__state.s, color.__state.v));\n        } else {\n            throw new Error('Corrupted color state');\n        }\n    };\n    Color.recalculateHSV = function (color) {\n        const result = math.rgb_to_hsv(color.r, color.g, color.b);\n        common.extend(color.__state, {\n            s: result.s,\n            v: result.v\n        });\n        if (!common.isNaN(result.h)) {\n            color.__state.h = result.h;\n        } else if (common.isUndefined(color.__state.h)) {\n            color.__state.h = 0;\n        }\n    };\n    Color.COMPONENTS = [\n        'r',\n        'g',\n        'b',\n        'h',\n        's',\n        'v',\n        'hex',\n        'a'\n    ];\n    defineRGBComponent(Color.prototype, 'r', 2);\n    defineRGBComponent(Color.prototype, 'g', 1);\n    defineRGBComponent(Color.prototype, 'b', 0);\n    defineHSVComponent(Color.prototype, 'h');\n    defineHSVComponent(Color.prototype, 's');\n    defineHSVComponent(Color.prototype, 'v');\n    Object.defineProperty(Color.prototype, 'a', {\n        get: function () {\n            return this.__state.a;\n        },\n        set: function (v) {\n            this.__state.a = v;\n        }\n    });\n    Object.defineProperty(Color.prototype, 'hex', {\n        get: function () {\n            if (this.__state.space !== 'HEX') {\n                this.__state.hex = math.rgb_to_hex(this.r, this.g, this.b);\n                this.__state.space = 'HEX';\n            }\n            return this.__state.hex;\n        },\n        set: function (v) {\n            this.__state.space = 'HEX';\n            this.__state.hex = v;\n        }\n    });\n    return Color;\n});\ndefine('skylark-datgui/controllers/Controller',[],function () {\n    'use strict';\n    class Controller {\n        constructor(object, property) {\n            this.initialValue = object[property];\n            this.domElement = document.createElement('div');\n            this.object = object;\n            this.property = property;\n            this.__onChange = undefined;\n            this.__onFinishChange = undefined;\n        }\n        onChange(fnc) {\n            this.__onChange = fnc;\n            return this;\n        }\n        onFinishChange(fnc) {\n            this.__onFinishChange = fnc;\n            return this;\n        }\n        setValue(newValue) {\n            this.object[this.property] = newValue;\n            if (this.__onChange) {\n                this.__onChange.call(this, newValue);\n            }\n            this.updateDisplay();\n            return this;\n        }\n        getValue() {\n            return this.object[this.property];\n        }\n        updateDisplay() {\n            return this;\n        }\n        isModified() {\n            return this.initialValue !== this.getValue();\n        }\n    }\n    return Controller;\n});\ndefine('skylark-datgui/dom/dom',['../utils/common'], function (common) {\n    'use strict';\n    const EVENT_MAP = {\n        HTMLEvents: ['change'],\n        MouseEvents: [\n            'click',\n            'mousemove',\n            'mousedown',\n            'mouseup',\n            'mouseover'\n        ],\n        KeyboardEvents: ['keydown']\n    };\n    const EVENT_MAP_INV = {};\n    common.each(EVENT_MAP, function (v, k) {\n        common.each(v, function (e) {\n            EVENT_MAP_INV[e] = k;\n        });\n    });\n    const CSS_VALUE_PIXELS = /(\\d+(\\.\\d+)?)px/;\n    function cssValueToPixels(val) {\n        if (val === '0' || common.isUndefined(val)) {\n            return 0;\n        }\n        const match = val.match(CSS_VALUE_PIXELS);\n        if (!common.isNull(match)) {\n            return parseFloat(match[1]);\n        }\n        return 0;\n    }\n    const dom = {\n        makeSelectable: function (elem, selectable) {\n            if (elem === undefined || elem.style === undefined)\n                return;\n            elem.onselectstart = selectable ? function () {\n                return false;\n            } : function () {\n            };\n            elem.style.MozUserSelect = selectable ? 'auto' : 'none';\n            elem.style.KhtmlUserSelect = selectable ? 'auto' : 'none';\n            elem.unselectable = selectable ? 'on' : 'off';\n        },\n        makeFullscreen: function (elem, hor, vert) {\n            let vertical = vert;\n            let horizontal = hor;\n            if (common.isUndefined(horizontal)) {\n                horizontal = true;\n            }\n            if (common.isUndefined(vertical)) {\n                vertical = true;\n            }\n            elem.style.position = 'absolute';\n            if (horizontal) {\n                elem.style.left = 0;\n                elem.style.right = 0;\n            }\n            if (vertical) {\n                elem.style.top = 0;\n                elem.style.bottom = 0;\n            }\n        },\n        fakeEvent: function (elem, eventType, pars, aux) {\n            const params = pars || {};\n            const className = EVENT_MAP_INV[eventType];\n            if (!className) {\n                throw new Error('Event type ' + eventType + ' not supported.');\n            }\n            const evt = document.createEvent(className);\n            switch (className) {\n            case 'MouseEvents': {\n                    const clientX = params.x || params.clientX || 0;\n                    const clientY = params.y || params.clientY || 0;\n                    evt.initMouseEvent(eventType, params.bubbles || false, params.cancelable || true, window, params.clickCount || 1, 0, 0, clientX, clientY, false, false, false, false, 0, null);\n                    break;\n                }\n            case 'KeyboardEvents': {\n                    const init = evt.initKeyboardEvent || evt.initKeyEvent;\n                    common.defaults(params, {\n                        cancelable: true,\n                        ctrlKey: false,\n                        altKey: false,\n                        shiftKey: false,\n                        metaKey: false,\n                        keyCode: undefined,\n                        charCode: undefined\n                    });\n                    init(eventType, params.bubbles || false, params.cancelable, window, params.ctrlKey, params.altKey, params.shiftKey, params.metaKey, params.keyCode, params.charCode);\n                    break;\n                }\n            default: {\n                    evt.initEvent(eventType, params.bubbles || false, params.cancelable || true);\n                    break;\n                }\n            }\n            common.defaults(evt, aux);\n            elem.dispatchEvent(evt);\n        },\n        bind: function (elem, event, func, newBool) {\n            const bool = newBool || false;\n            if (elem.addEventListener) {\n                elem.addEventListener(event, func, bool);\n            } else if (elem.attachEvent) {\n                elem.attachEvent('on' + event, func);\n            }\n            return dom;\n        },\n        unbind: function (elem, event, func, newBool) {\n            const bool = newBool || false;\n            if (elem.removeEventListener) {\n                elem.removeEventListener(event, func, bool);\n            } else if (elem.detachEvent) {\n                elem.detachEvent('on' + event, func);\n            }\n            return dom;\n        },\n        addClass: function (elem, className) {\n            if (elem.className === undefined) {\n                elem.className = className;\n            } else if (elem.className !== className) {\n                const classes = elem.className.split(/ +/);\n                if (classes.indexOf(className) === -1) {\n                    classes.push(className);\n                    elem.className = classes.join(' ').replace(/^\\s+/, '').replace(/\\s+$/, '');\n                }\n            }\n            return dom;\n        },\n        removeClass: function (elem, className) {\n            if (className) {\n                if (elem.className === className) {\n                    elem.removeAttribute('class');\n                } else {\n                    const classes = elem.className.split(/ +/);\n                    const index = classes.indexOf(className);\n                    if (index !== -1) {\n                        classes.splice(index, 1);\n                        elem.className = classes.join(' ');\n                    }\n                }\n            } else {\n                elem.className = undefined;\n            }\n            return dom;\n        },\n        hasClass: function (elem, className) {\n            return new RegExp('(?:^|\\\\s+)' + className + '(?:\\\\s+|$)').test(elem.className) || false;\n        },\n        getWidth: function (elem) {\n            const style = getComputedStyle(elem);\n            return cssValueToPixels(style['border-left-width']) + cssValueToPixels(style['border-right-width']) + cssValueToPixels(style['padding-left']) + cssValueToPixels(style['padding-right']) + cssValueToPixels(style.width);\n        },\n        getHeight: function (elem) {\n            const style = getComputedStyle(elem);\n            return cssValueToPixels(style['border-top-width']) + cssValueToPixels(style['border-bottom-width']) + cssValueToPixels(style['padding-top']) + cssValueToPixels(style['padding-bottom']) + cssValueToPixels(style.height);\n        },\n        getOffset: function (el) {\n            let elem = el;\n            const offset = {\n                left: 0,\n                top: 0\n            };\n            if (elem.offsetParent) {\n                do {\n                    offset.left += elem.offsetLeft;\n                    offset.top += elem.offsetTop;\n                    elem = elem.offsetParent;\n                } while (elem);\n            }\n            return offset;\n        },\n        isActive: function (elem) {\n            return elem === document.activeElement && (elem.type || elem.href);\n        }\n    };\n    return dom;\n});\ndefine('skylark-datgui/controllers/BooleanController',[\n    './Controller',\n    '../dom/dom'\n], function (Controller, dom) {\n    'use strict';\n    class BooleanController extends Controller {\n        constructor(object, property) {\n            super(object, property);\n            const _this = this;\n            this.__prev = this.getValue();\n            this.__checkbox = document.createElement('input');\n            this.__checkbox.setAttribute('type', 'checkbox');\n            function onChange() {\n                _this.setValue(!_this.__prev);\n            }\n            dom.bind(this.__checkbox, 'change', onChange, false);\n            this.domElement.appendChild(this.__checkbox);\n            this.updateDisplay();\n        }\n        setValue(v) {\n            const toReturn = super.setValue(v);\n            if (this.__onFinishChange) {\n                this.__onFinishChange.call(this, this.getValue());\n            }\n            this.__prev = this.getValue();\n            return toReturn;\n        }\n        updateDisplay() {\n            if (this.getValue() === true) {\n                this.__checkbox.setAttribute('checked', 'checked');\n                this.__checkbox.checked = true;\n                this.__prev = true;\n            } else {\n                this.__checkbox.checked = false;\n                this.__prev = false;\n            }\n            return super.updateDisplay();\n        }\n    }\n    return BooleanController;\n});\ndefine('skylark-datgui/controllers/OptionController',[\n    './Controller',\n    '../dom/dom',\n    '../utils/common'\n], function (Controller, dom, common) {\n    'use strict';\n    class OptionController extends Controller {\n        constructor(object, property, opts) {\n            super(object, property);\n            let options = opts;\n            const _this = this;\n            this.__select = document.createElement('select');\n            if (common.isArray(options)) {\n                const map = {};\n                common.each(options, function (element) {\n                    map[element] = element;\n                });\n                options = map;\n            }\n            common.each(options, function (value, key) {\n                const opt = document.createElement('option');\n                opt.innerHTML = key;\n                opt.setAttribute('value', value);\n                _this.__select.appendChild(opt);\n            });\n            this.updateDisplay();\n            dom.bind(this.__select, 'change', function () {\n                const desiredValue = this.options[this.selectedIndex].value;\n                _this.setValue(desiredValue);\n            });\n            this.domElement.appendChild(this.__select);\n        }\n        setValue(v) {\n            const toReturn = super.setValue(v);\n            if (this.__onFinishChange) {\n                this.__onFinishChange.call(this, this.getValue());\n            }\n            return toReturn;\n        }\n        updateDisplay() {\n            if (dom.isActive(this.__select))\n                return this;\n            this.__select.value = this.getValue();\n            return super.updateDisplay();\n        }\n    }\n    return OptionController;\n});\ndefine('skylark-datgui/controllers/StringController',[\n    './Controller',\n    '../dom/dom'\n], function (Controller, dom) {\n    'use strict';\n    class StringController extends Controller {\n        constructor(object, property) {\n            super(object, property);\n            const _this = this;\n            function onChange() {\n                _this.setValue(_this.__input.value);\n            }\n            function onBlur() {\n                if (_this.__onFinishChange) {\n                    _this.__onFinishChange.call(_this, _this.getValue());\n                }\n            }\n            this.__input = document.createElement('input');\n            this.__input.setAttribute('type', 'text');\n            dom.bind(this.__input, 'keyup', onChange);\n            dom.bind(this.__input, 'change', onChange);\n            dom.bind(this.__input, 'blur', onBlur);\n            dom.bind(this.__input, 'keydown', function (e) {\n                if (e.keyCode === 13) {\n                    this.blur();\n                }\n            });\n            this.updateDisplay();\n            this.domElement.appendChild(this.__input);\n        }\n        updateDisplay() {\n            if (!dom.isActive(this.__input)) {\n                this.__input.value = this.getValue();\n            }\n            return super.updateDisplay();\n        }\n    }\n    return StringController;\n});\ndefine('skylark-datgui/controllers/NumberController',[\n    './Controller',\n    '../utils/common'\n], function (Controller, common) {\n    'use strict';\n    function numDecimals(x) {\n        const _x = x.toString();\n        if (_x.indexOf('.') > -1) {\n            return _x.length - _x.indexOf('.') - 1;\n        }\n        return 0;\n    }\n    class NumberController extends Controller {\n        constructor(object, property, params) {\n            super(object, property);\n            const _params = params || {};\n            this.__min = _params.min;\n            this.__max = _params.max;\n            this.__step = _params.step;\n            if (common.isUndefined(this.__step)) {\n                if (this.initialValue === 0) {\n                    this.__impliedStep = 1;\n                } else {\n                    this.__impliedStep = Math.pow(10, Math.floor(Math.log(Math.abs(this.initialValue)) / Math.LN10)) / 10;\n                }\n            } else {\n                this.__impliedStep = this.__step;\n            }\n            this.__precision = numDecimals(this.__impliedStep);\n        }\n        setValue(v) {\n            let _v = v;\n            if (this.__min !== undefined && _v < this.__min) {\n                _v = this.__min;\n            } else if (this.__max !== undefined && _v > this.__max) {\n                _v = this.__max;\n            }\n            if (this.__step !== undefined && _v % this.__step !== 0) {\n                _v = Math.round(_v / this.__step) * this.__step;\n            }\n            return super.setValue(_v);\n        }\n        min(minValue) {\n            this.__min = minValue;\n            return this;\n        }\n        max(maxValue) {\n            this.__max = maxValue;\n            return this;\n        }\n        step(stepValue) {\n            this.__step = stepValue;\n            this.__impliedStep = stepValue;\n            this.__precision = numDecimals(stepValue);\n            return this;\n        }\n    }\n    return NumberController;\n});\ndefine('skylark-datgui/controllers/NumberControllerBox',[\n    './NumberController',\n    '../dom/dom',\n    '../utils/common'\n], function (NumberController, dom, common) {\n    'use strict';\n    function roundToDecimal(value, decimals) {\n        const tenTo = Math.pow(10, decimals);\n        return Math.round(value * tenTo) / tenTo;\n    }\n    class NumberControllerBox extends NumberController {\n        constructor(object, property, params) {\n            super(object, property, params);\n            this.__truncationSuspended = false;\n            const _this = this;\n            let prevY;\n            function onChange() {\n                const attempted = parseFloat(_this.__input.value);\n                if (!common.isNaN(attempted)) {\n                    _this.setValue(attempted);\n                }\n            }\n            function onFinish() {\n                if (_this.__onFinishChange) {\n                    _this.__onFinishChange.call(_this, _this.getValue());\n                }\n            }\n            function onBlur() {\n                onFinish();\n            }\n            function onMouseDrag(e) {\n                const diff = prevY - e.clientY;\n                _this.setValue(_this.getValue() + diff * _this.__impliedStep);\n                prevY = e.clientY;\n            }\n            function onMouseUp() {\n                dom.unbind(window, 'mousemove', onMouseDrag);\n                dom.unbind(window, 'mouseup', onMouseUp);\n                onFinish();\n            }\n            function onMouseDown(e) {\n                dom.bind(window, 'mousemove', onMouseDrag);\n                dom.bind(window, 'mouseup', onMouseUp);\n                prevY = e.clientY;\n            }\n            this.__input = document.createElement('input');\n            this.__input.setAttribute('type', 'text');\n            dom.bind(this.__input, 'change', onChange);\n            dom.bind(this.__input, 'blur', onBlur);\n            dom.bind(this.__input, 'mousedown', onMouseDown);\n            dom.bind(this.__input, 'keydown', function (e) {\n                if (e.keyCode === 13) {\n                    _this.__truncationSuspended = true;\n                    this.blur();\n                    _this.__truncationSuspended = false;\n                    onFinish();\n                }\n            });\n            this.updateDisplay();\n            this.domElement.appendChild(this.__input);\n        }\n        updateDisplay() {\n            this.__input.value = this.__truncationSuspended ? this.getValue() : roundToDecimal(this.getValue(), this.__precision);\n            return super.updateDisplay();\n        }\n    }\n    return NumberControllerBox;\n});\ndefine('skylark-datgui/controllers/NumberControllerSlider',[\n    './NumberController',\n    '../dom/dom'\n], function (NumberController, dom) {\n    'use strict';\n    function map(v, i1, i2, o1, o2) {\n        return o1 + (o2 - o1) * ((v - i1) / (i2 - i1));\n    }\n    class NumberControllerSlider extends NumberController {\n        constructor(object, property, min, max, step) {\n            super(object, property, {\n                min: min,\n                max: max,\n                step: step\n            });\n            const _this = this;\n            this.__background = document.createElement('div');\n            this.__foreground = document.createElement('div');\n            dom.bind(this.__background, 'mousedown', onMouseDown);\n            dom.bind(this.__background, 'touchstart', onTouchStart);\n            dom.addClass(this.__background, 'slider');\n            dom.addClass(this.__foreground, 'slider-fg');\n            function onMouseDown(e) {\n                document.activeElement.blur();\n                dom.bind(window, 'mousemove', onMouseDrag);\n                dom.bind(window, 'mouseup', onMouseUp);\n                onMouseDrag(e);\n            }\n            function onMouseDrag(e) {\n                e.preventDefault();\n                const bgRect = _this.__background.getBoundingClientRect();\n                _this.setValue(map(e.clientX, bgRect.left, bgRect.right, _this.__min, _this.__max));\n                return false;\n            }\n            function onMouseUp() {\n                dom.unbind(window, 'mousemove', onMouseDrag);\n                dom.unbind(window, 'mouseup', onMouseUp);\n                if (_this.__onFinishChange) {\n                    _this.__onFinishChange.call(_this, _this.getValue());\n                }\n            }\n            function onTouchStart(e) {\n                if (e.touches.length !== 1) {\n                    return;\n                }\n                dom.bind(window, 'touchmove', onTouchMove);\n                dom.bind(window, 'touchend', onTouchEnd);\n                onTouchMove(e);\n            }\n            function onTouchMove(e) {\n                const clientX = e.touches[0].clientX;\n                const bgRect = _this.__background.getBoundingClientRect();\n                _this.setValue(map(clientX, bgRect.left, bgRect.right, _this.__min, _this.__max));\n            }\n            function onTouchEnd() {\n                dom.unbind(window, 'touchmove', onTouchMove);\n                dom.unbind(window, 'touchend', onTouchEnd);\n                if (_this.__onFinishChange) {\n                    _this.__onFinishChange.call(_this, _this.getValue());\n                }\n            }\n            this.updateDisplay();\n            this.__background.appendChild(this.__foreground);\n            this.domElement.appendChild(this.__background);\n        }\n        updateDisplay() {\n            const pct = (this.getValue() - this.__min) / (this.__max - this.__min);\n            this.__foreground.style.width = pct * 100 + '%';\n            return super.updateDisplay();\n        }\n    }\n    return NumberControllerSlider;\n});\ndefine('skylark-datgui/controllers/FunctionController',[\n    './Controller',\n    '../dom/dom'\n], function (Controller, dom) {\n    'use strict';\n    class FunctionController extends Controller {\n        constructor(object, property, text) {\n            super(object, property);\n            const _this = this;\n            this.__button = document.createElement('div');\n            this.__button.innerHTML = text === undefined ? 'Fire' : text;\n            dom.bind(this.__button, 'click', function (e) {\n                e.preventDefault();\n                _this.fire();\n                return false;\n            });\n            dom.addClass(this.__button, 'button');\n            this.domElement.appendChild(this.__button);\n        }\n        fire() {\n            if (this.__onChange) {\n                this.__onChange.call(this);\n            }\n            this.getValue().call(this.object);\n            if (this.__onFinishChange) {\n                this.__onFinishChange.call(this, this.getValue());\n            }\n        }\n    }\n    return FunctionController;\n});\ndefine('skylark-datgui/controllers/ColorController',[\n    './Controller',\n    '../dom/dom',\n    '../color/Color',\n    '../color/interpret',\n    '../utils/common'\n], function (Controller, dom, Color, interpret, common) {\n    'use strict';\n    class ColorController extends Controller {\n        constructor(object, property) {\n            super(object, property);\n            this.__color = new Color(this.getValue());\n            this.__temp = new Color(0);\n            const _this = this;\n            this.domElement = document.createElement('div');\n            dom.makeSelectable(this.domElement, false);\n            this.__selector = document.createElement('div');\n            this.__selector.className = 'selector';\n            this.__saturation_field = document.createElement('div');\n            this.__saturation_field.className = 'saturation-field';\n            this.__field_knob = document.createElement('div');\n            this.__field_knob.className = 'field-knob';\n            this.__field_knob_border = '2px solid ';\n            this.__hue_knob = document.createElement('div');\n            this.__hue_knob.className = 'hue-knob';\n            this.__hue_field = document.createElement('div');\n            this.__hue_field.className = 'hue-field';\n            this.__input = document.createElement('input');\n            this.__input.type = 'text';\n            this.__input_textShadow = '0 1px 1px ';\n            dom.bind(this.__input, 'keydown', function (e) {\n                if (e.keyCode === 13) {\n                    onBlur.call(this);\n                }\n            });\n            dom.bind(this.__input, 'blur', onBlur);\n            dom.bind(this.__selector, 'mousedown', function () {\n                dom.addClass(this, 'drag').bind(window, 'mouseup', function () {\n                    dom.removeClass(_this.__selector, 'drag');\n                });\n            });\n            dom.bind(this.__selector, 'touchstart', function () {\n                dom.addClass(this, 'drag').bind(window, 'touchend', function () {\n                    dom.removeClass(_this.__selector, 'drag');\n                });\n            });\n            const valueField = document.createElement('div');\n            common.extend(this.__selector.style, {\n                width: '122px',\n                height: '102px',\n                padding: '3px',\n                backgroundColor: '#222',\n                boxShadow: '0px 1px 3px rgba(0,0,0,0.3)'\n            });\n            common.extend(this.__field_knob.style, {\n                position: 'absolute',\n                width: '12px',\n                height: '12px',\n                border: this.__field_knob_border + (this.__color.v < 0.5 ? '#fff' : '#000'),\n                boxShadow: '0px 1px 3px rgba(0,0,0,0.5)',\n                borderRadius: '12px',\n                zIndex: 1\n            });\n            common.extend(this.__hue_knob.style, {\n                position: 'absolute',\n                width: '15px',\n                height: '2px',\n                borderRight: '4px solid #fff',\n                zIndex: 1\n            });\n            common.extend(this.__saturation_field.style, {\n                width: '100px',\n                height: '100px',\n                border: '1px solid #555',\n                marginRight: '3px',\n                display: 'inline-block',\n                cursor: 'pointer'\n            });\n            common.extend(valueField.style, {\n                width: '100%',\n                height: '100%',\n                background: 'none'\n            });\n            linearGradient(valueField, 'top', 'rgba(0,0,0,0)', '#000');\n            common.extend(this.__hue_field.style, {\n                width: '15px',\n                height: '100px',\n                border: '1px solid #555',\n                cursor: 'ns-resize',\n                position: 'absolute',\n                top: '3px',\n                right: '3px'\n            });\n            hueGradient(this.__hue_field);\n            common.extend(this.__input.style, {\n                outline: 'none',\n                textAlign: 'center',\n                color: '#fff',\n                border: 0,\n                fontWeight: 'bold',\n                textShadow: this.__input_textShadow + 'rgba(0,0,0,0.7)'\n            });\n            dom.bind(this.__saturation_field, 'mousedown', fieldDown);\n            dom.bind(this.__saturation_field, 'touchstart', fieldDown);\n            dom.bind(this.__field_knob, 'mousedown', fieldDown);\n            dom.bind(this.__field_knob, 'touchstart', fieldDown);\n            dom.bind(this.__hue_field, 'mousedown', fieldDownH);\n            dom.bind(this.__hue_field, 'touchstart', fieldDownH);\n            function fieldDown(e) {\n                setSV(e);\n                dom.bind(window, 'mousemove', setSV);\n                dom.bind(window, 'touchmove', setSV);\n                dom.bind(window, 'mouseup', fieldUpSV);\n                dom.bind(window, 'touchend', fieldUpSV);\n            }\n            function fieldDownH(e) {\n                setH(e);\n                dom.bind(window, 'mousemove', setH);\n                dom.bind(window, 'touchmove', setH);\n                dom.bind(window, 'mouseup', fieldUpH);\n                dom.bind(window, 'touchend', fieldUpH);\n            }\n            function fieldUpSV() {\n                dom.unbind(window, 'mousemove', setSV);\n                dom.unbind(window, 'touchmove', setSV);\n                dom.unbind(window, 'mouseup', fieldUpSV);\n                dom.unbind(window, 'touchend', fieldUpSV);\n                onFinish();\n            }\n            function fieldUpH() {\n                dom.unbind(window, 'mousemove', setH);\n                dom.unbind(window, 'touchmove', setH);\n                dom.unbind(window, 'mouseup', fieldUpH);\n                dom.unbind(window, 'touchend', fieldUpH);\n                onFinish();\n            }\n            function onBlur() {\n                const i = interpret(this.value);\n                if (i !== false) {\n                    _this.__color.__state = i;\n                    _this.setValue(_this.__color.toOriginal());\n                } else {\n                    this.value = _this.__color.toString();\n                }\n            }\n            function onFinish() {\n                if (_this.__onFinishChange) {\n                    _this.__onFinishChange.call(_this, _this.__color.toOriginal());\n                }\n            }\n            this.__saturation_field.appendChild(valueField);\n            this.__selector.appendChild(this.__field_knob);\n            this.__selector.appendChild(this.__saturation_field);\n            this.__selector.appendChild(this.__hue_field);\n            this.__hue_field.appendChild(this.__hue_knob);\n            this.domElement.appendChild(this.__input);\n            this.domElement.appendChild(this.__selector);\n            this.updateDisplay();\n            function setSV(e) {\n                if (e.type.indexOf('touch') === -1) {\n                    e.preventDefault();\n                }\n                const fieldRect = _this.__saturation_field.getBoundingClientRect();\n                const {clientX, clientY} = e.touches && e.touches[0] || e;\n                let s = (clientX - fieldRect.left) / (fieldRect.right - fieldRect.left);\n                let v = 1 - (clientY - fieldRect.top) / (fieldRect.bottom - fieldRect.top);\n                if (v > 1) {\n                    v = 1;\n                } else if (v < 0) {\n                    v = 0;\n                }\n                if (s > 1) {\n                    s = 1;\n                } else if (s < 0) {\n                    s = 0;\n                }\n                _this.__color.v = v;\n                _this.__color.s = s;\n                _this.setValue(_this.__color.toOriginal());\n                return false;\n            }\n            function setH(e) {\n                if (e.type.indexOf('touch') === -1) {\n                    e.preventDefault();\n                }\n                const fieldRect = _this.__hue_field.getBoundingClientRect();\n                const {clientY} = e.touches && e.touches[0] || e;\n                let h = 1 - (clientY - fieldRect.top) / (fieldRect.bottom - fieldRect.top);\n                if (h > 1) {\n                    h = 1;\n                } else if (h < 0) {\n                    h = 0;\n                }\n                _this.__color.h = h * 360;\n                _this.setValue(_this.__color.toOriginal());\n                return false;\n            }\n        }\n        updateDisplay() {\n            const i = interpret(this.getValue());\n            if (i !== false) {\n                let mismatch = false;\n                common.each(Color.COMPONENTS, function (component) {\n                    if (!common.isUndefined(i[component]) && !common.isUndefined(this.__color.__state[component]) && i[component] !== this.__color.__state[component]) {\n                        mismatch = true;\n                        return {};\n                    }\n                }, this);\n                if (mismatch) {\n                    common.extend(this.__color.__state, i);\n                }\n            }\n            common.extend(this.__temp.__state, this.__color.__state);\n            this.__temp.a = 1;\n            const flip = this.__color.v < 0.5 || this.__color.s > 0.5 ? 255 : 0;\n            const _flip = 255 - flip;\n            common.extend(this.__field_knob.style, {\n                marginLeft: 100 * this.__color.s - 7 + 'px',\n                marginTop: 100 * (1 - this.__color.v) - 7 + 'px',\n                backgroundColor: this.__temp.toHexString(),\n                border: this.__field_knob_border + 'rgb(' + flip + ',' + flip + ',' + flip + ')'\n            });\n            this.__hue_knob.style.marginTop = (1 - this.__color.h / 360) * 100 + 'px';\n            this.__temp.s = 1;\n            this.__temp.v = 1;\n            linearGradient(this.__saturation_field, 'left', '#fff', this.__temp.toHexString());\n            this.__input.value = this.__color.toString();\n            common.extend(this.__input.style, {\n                backgroundColor: this.__color.toHexString(),\n                color: 'rgb(' + flip + ',' + flip + ',' + flip + ')',\n                textShadow: this.__input_textShadow + 'rgba(' + _flip + ',' + _flip + ',' + _flip + ',.7)'\n            });\n        }\n    }\n    const vendors = [\n        '-moz-',\n        '-o-',\n        '-webkit-',\n        '-ms-',\n        ''\n    ];\n    function linearGradient(elem, x, a, b) {\n        elem.style.background = '';\n        common.each(vendors, function (vendor) {\n            elem.style.cssText += 'background: ' + vendor + 'linear-gradient(' + x + ', ' + a + ' 0%, ' + b + ' 100%); ';\n        });\n    }\n    function hueGradient(elem) {\n        elem.style.background = '';\n        elem.style.cssText += 'background: -moz-linear-gradient(top,  #ff0000 0%, #ff00ff 17%, #0000ff 34%, #00ffff 50%, #00ff00 67%, #ffff00 84%, #ff0000 100%);';\n        elem.style.cssText += 'background: -webkit-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n        elem.style.cssText += 'background: -o-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n        elem.style.cssText += 'background: -ms-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n        elem.style.cssText += 'background: linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n    }\n    return ColorController;\n});\ndefine('skylark-datgui/utils/css',[],function () {\n    'use strict';\n    const css = {\n        load: function (url, indoc) {\n            const doc = indoc || document;\n            const link = doc.createElement('link');\n            link.type = 'text/css';\n            link.rel = 'stylesheet';\n            link.href = url;\n            doc.getElementsByTagName('head')[0].appendChild(link);\n        },\n        inject: function (cssContent, indoc) {\n            const doc = indoc || document;\n            const injected = document.createElement('style');\n            injected.type = 'text/css';\n            injected.innerHTML = cssContent;\n            const head = doc.getElementsByTagName('head')[0];\n            try {\n                head.appendChild(injected);\n            } catch (e) {\n            }\n        }\n    };\n    return css;\n});\ndefine('skylark-datgui/gui/saveDialogue.html',[],function () {\n    'use strict';\n    const saveDialogContents = `<div id=\"dg-save\" class=\"dg dialogue\">\n\n  Here's the new load parameter for your <code>GUI</code>'s constructor:\n\n  <textarea id=\"dg-new-constructor\"></textarea>\n\n  <div id=\"dg-save-locally\">\n\n    <input id=\"dg-local-storage\" type=\"checkbox\"/> Automatically save\n    values to <code>localStorage</code> on exit.\n\n    <div id=\"dg-local-explain\">The values saved to <code>localStorage</code> will\n      override those passed to <code>dat.GUI</code>'s constructor. This makes it\n      easier to work incrementally, but <code>localStorage</code> is fragile,\n      and your friends may not see the same values you do.\n\n    </div>\n\n  </div>\n\n</div>`;\n    return saveDialogContents;\n});\ndefine('skylark-datgui/controllers/ControllerFactory',[\n    './OptionController',\n    './NumberControllerBox',\n    './NumberControllerSlider',\n    './StringController',\n    './FunctionController',\n    './BooleanController',\n    '../utils/common'\n], function (OptionController, NumberControllerBox, NumberControllerSlider, StringController, FunctionController, BooleanController, common) {\n    'use strict';\n    const ControllerFactory = function (object, property) {\n        const initialValue = object[property];\n        if (common.isArray(arguments[2]) || common.isObject(arguments[2])) {\n            return new OptionController(object, property, arguments[2]);\n        }\n        if (common.isNumber(initialValue)) {\n            if (common.isNumber(arguments[2]) && common.isNumber(arguments[3])) {\n                if (common.isNumber(arguments[4])) {\n                    return new NumberControllerSlider(object, property, arguments[2], arguments[3], arguments[4]);\n                }\n                return new NumberControllerSlider(object, property, arguments[2], arguments[3]);\n            }\n            if (common.isNumber(arguments[4])) {\n                return new NumberControllerBox(object, property, {\n                    min: arguments[2],\n                    max: arguments[3],\n                    step: arguments[4]\n                });\n            }\n            return new NumberControllerBox(object, property, {\n                min: arguments[2],\n                max: arguments[3]\n            });\n        }\n        if (common.isString(initialValue)) {\n            return new StringController(object, property);\n        }\n        if (common.isFunction(initialValue)) {\n            return new FunctionController(object, property, '');\n        }\n        if (common.isBoolean(initialValue)) {\n            return new BooleanController(object, property);\n        }\n        return null;\n    };\n    return ControllerFactory;\n});\ndefine('skylark-datgui/utils/requestAnimationFrame',[],function () {\n    'use strict';\n    function requestAnimationFrame(callback) {\n        setTimeout(callback, 1000 / 60);\n    }\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || requestAnimationFrame;\n});\ndefine('skylark-datgui/dom/CenteredDiv',[\n    '../dom/dom',\n    '../utils/common'\n], function (dom, common) {\n    'use strict';\n    class CenteredDiv {\n        constructor() {\n            this.backgroundElement = document.createElement('div');\n            common.extend(this.backgroundElement.style, {\n                backgroundColor: 'rgba(0,0,0,0.8)',\n                top: 0,\n                left: 0,\n                display: 'none',\n                zIndex: '1000',\n                opacity: 0,\n                WebkitTransition: 'opacity 0.2s linear',\n                transition: 'opacity 0.2s linear'\n            });\n            dom.makeFullscreen(this.backgroundElement);\n            this.backgroundElement.style.position = 'fixed';\n            this.domElement = document.createElement('div');\n            common.extend(this.domElement.style, {\n                position: 'fixed',\n                display: 'none',\n                zIndex: '1001',\n                opacity: 0,\n                WebkitTransition: '-webkit-transform 0.2s ease-out, opacity 0.2s linear',\n                transition: 'transform 0.2s ease-out, opacity 0.2s linear'\n            });\n            document.body.appendChild(this.backgroundElement);\n            document.body.appendChild(this.domElement);\n            const _this = this;\n            dom.bind(this.backgroundElement, 'click', function () {\n                _this.hide();\n            });\n        }\n        show() {\n            const _this = this;\n            this.backgroundElement.style.display = 'block';\n            this.domElement.style.display = 'block';\n            this.domElement.style.opacity = 0;\n            this.domElement.style.webkitTransform = 'scale(1.1)';\n            this.layout();\n            common.defer(function () {\n                _this.backgroundElement.style.opacity = 1;\n                _this.domElement.style.opacity = 1;\n                _this.domElement.style.webkitTransform = 'scale(1)';\n            });\n        }\n        hide() {\n            const _this = this;\n            const hide = function () {\n                _this.domElement.style.display = 'none';\n                _this.backgroundElement.style.display = 'none';\n                dom.unbind(_this.domElement, 'webkitTransitionEnd', hide);\n                dom.unbind(_this.domElement, 'transitionend', hide);\n                dom.unbind(_this.domElement, 'oTransitionEnd', hide);\n            };\n            dom.bind(this.domElement, 'webkitTransitionEnd', hide);\n            dom.bind(this.domElement, 'transitionend', hide);\n            dom.bind(this.domElement, 'oTransitionEnd', hide);\n            this.backgroundElement.style.opacity = 0;\n            this.domElement.style.opacity = 0;\n            this.domElement.style.webkitTransform = 'scale(1.1)';\n        }\n        layout() {\n            this.domElement.style.left = window.innerWidth / 2 - dom.getWidth(this.domElement) / 2 + 'px';\n            this.domElement.style.top = window.innerHeight / 2 - dom.getHeight(this.domElement) / 2 + 'px';\n        }\n    }\n    return CenteredDiv;\n});\ndefine('skylark-datgui/gui/GUI',[\n    '../utils/css',\n    './saveDialogue.html',\n    '../controllers/ControllerFactory',\n    '../controllers/Controller',\n    '../controllers/BooleanController',\n    '../controllers/FunctionController',\n    '../controllers/NumberControllerBox',\n    '../controllers/NumberControllerSlider',\n    '../controllers/ColorController',\n    '../utils/requestAnimationFrame',\n    '../dom/CenteredDiv',\n    '../dom/dom',\n    '../utils/common'\n], function (css, saveDialogueContents, ControllerFactory, Controller, BooleanController, FunctionController, NumberControllerBox, NumberControllerSlider, ColorController, requestAnimationFrame, CenteredDiv, dom, common, styleSheet) {\n    'use strict';\n\n    //css.inject(styleSheet);\n\n    const CSS_NAMESPACE = 'dg';\n    const HIDE_KEY_CODE = 72;\n    const CLOSE_BUTTON_HEIGHT = 20;\n    const DEFAULT_DEFAULT_PRESET_NAME = 'Default';\n    const SUPPORTS_LOCAL_STORAGE = function () {\n        try {\n            return !!window.localStorage;\n        } catch (e) {\n            return false;\n        }\n    }();\n    let SAVE_DIALOGUE;\n    let autoPlaceVirgin = true;\n    let autoPlaceContainer;\n    let hide = false;\n    const hideableGuis = [];\n    const GUI = function (pars) {\n        const _this = this;\n        let params = pars || {};\n        this.domElement = document.createElement('div');\n        this.__ul = document.createElement('ul');\n        this.domElement.appendChild(this.__ul);\n        dom.addClass(this.domElement, CSS_NAMESPACE);\n        this.__folders = {};\n        this.__controllers = [];\n        this.__rememberedObjects = [];\n        this.__rememberedObjectIndecesToControllers = [];\n        this.__listening = [];\n        params = common.defaults(params, {\n            closeOnTop: false,\n            autoPlace: true,\n            width: GUI.DEFAULT_WIDTH\n        });\n        params = common.defaults(params, {\n            resizable: params.autoPlace,\n            hideable: params.autoPlace\n        });\n        if (!common.isUndefined(params.load)) {\n            if (params.preset) {\n                params.load.preset = params.preset;\n            }\n        } else {\n            params.load = { preset: DEFAULT_DEFAULT_PRESET_NAME };\n        }\n        if (common.isUndefined(params.parent) && params.hideable) {\n            hideableGuis.push(this);\n        }\n        params.resizable = common.isUndefined(params.parent) && params.resizable;\n        if (params.autoPlace && common.isUndefined(params.scrollable)) {\n            params.scrollable = true;\n        }\n        let useLocalStorage = SUPPORTS_LOCAL_STORAGE && localStorage.getItem(getLocalStorageHash(this, 'isLocal')) === 'true';\n        let saveToLocalStorage;\n        let titleRow;\n        Object.defineProperties(this, {\n            parent: {\n                get: function () {\n                    return params.parent;\n                }\n            },\n            scrollable: {\n                get: function () {\n                    return params.scrollable;\n                }\n            },\n            autoPlace: {\n                get: function () {\n                    return params.autoPlace;\n                }\n            },\n            closeOnTop: {\n                get: function () {\n                    return params.closeOnTop;\n                }\n            },\n            preset: {\n                get: function () {\n                    if (_this.parent) {\n                        return _this.getRoot().preset;\n                    }\n                    return params.load.preset;\n                },\n                set: function (v) {\n                    if (_this.parent) {\n                        _this.getRoot().preset = v;\n                    } else {\n                        params.load.preset = v;\n                    }\n                    setPresetSelectIndex(this);\n                    _this.revert();\n                }\n            },\n            width: {\n                get: function () {\n                    return params.width;\n                },\n                set: function (v) {\n                    params.width = v;\n                    setWidth(_this, v);\n                }\n            },\n            name: {\n                get: function () {\n                    return params.name;\n                },\n                set: function (v) {\n                    params.name = v;\n                    if (titleRow) {\n                        titleRow.innerHTML = params.name;\n                    }\n                }\n            },\n            closed: {\n                get: function () {\n                    return params.closed;\n                },\n                set: function (v) {\n                    params.closed = v;\n                    if (params.closed) {\n                        dom.addClass(_this.__ul, GUI.CLASS_CLOSED);\n                    } else {\n                        dom.removeClass(_this.__ul, GUI.CLASS_CLOSED);\n                    }\n                    this.onResize();\n                    if (_this.__closeButton) {\n                        _this.__closeButton.innerHTML = v ? GUI.TEXT_OPEN : GUI.TEXT_CLOSED;\n                    }\n                }\n            },\n            load: {\n                get: function () {\n                    return params.load;\n                }\n            },\n            useLocalStorage: {\n                get: function () {\n                    return useLocalStorage;\n                },\n                set: function (bool) {\n                    if (SUPPORTS_LOCAL_STORAGE) {\n                        useLocalStorage = bool;\n                        if (bool) {\n                            dom.bind(window, 'unload', saveToLocalStorage);\n                        } else {\n                            dom.unbind(window, 'unload', saveToLocalStorage);\n                        }\n                        localStorage.setItem(getLocalStorageHash(_this, 'isLocal'), bool);\n                    }\n                }\n            }\n        });\n        if (common.isUndefined(params.parent)) {\n            this.closed = params.closed || false;\n            dom.addClass(this.domElement, GUI.CLASS_MAIN);\n            dom.makeSelectable(this.domElement, false);\n            if (SUPPORTS_LOCAL_STORAGE) {\n                if (useLocalStorage) {\n                    _this.useLocalStorage = true;\n                    const savedGui = localStorage.getItem(getLocalStorageHash(this, 'gui'));\n                    if (savedGui) {\n                        params.load = JSON.parse(savedGui);\n                    }\n                }\n            }\n            this.__closeButton = document.createElement('div');\n            this.__closeButton.innerHTML = GUI.TEXT_CLOSED;\n            dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BUTTON);\n            if (params.closeOnTop) {\n                dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_TOP);\n                this.domElement.insertBefore(this.__closeButton, this.domElement.childNodes[0]);\n            } else {\n                dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BOTTOM);\n                this.domElement.appendChild(this.__closeButton);\n            }\n            dom.bind(this.__closeButton, 'click', function () {\n                _this.closed = !_this.closed;\n            });\n        } else {\n            if (params.closed === undefined) {\n                params.closed = true;\n            }\n            const titleRowName = document.createTextNode(params.name);\n            dom.addClass(titleRowName, 'controller-name');\n            titleRow = addRow(_this, titleRowName);\n            const onClickTitle = function (e) {\n                e.preventDefault();\n                _this.closed = !_this.closed;\n                return false;\n            };\n            dom.addClass(this.__ul, GUI.CLASS_CLOSED);\n            dom.addClass(titleRow, 'title');\n            dom.bind(titleRow, 'click', onClickTitle);\n            if (!params.closed) {\n                this.closed = false;\n            }\n        }\n        if (params.autoPlace) {\n            if (common.isUndefined(params.parent)) {\n                if (autoPlaceVirgin) {\n                    autoPlaceContainer = document.createElement('div');\n                    dom.addClass(autoPlaceContainer, CSS_NAMESPACE);\n                    dom.addClass(autoPlaceContainer, GUI.CLASS_AUTO_PLACE_CONTAINER);\n                    document.body.appendChild(autoPlaceContainer);\n                    autoPlaceVirgin = false;\n                }\n                autoPlaceContainer.appendChild(this.domElement);\n                dom.addClass(this.domElement, GUI.CLASS_AUTO_PLACE);\n            }\n            if (!this.parent) {\n                setWidth(_this, params.width);\n            }\n        }\n        this.__resizeHandler = function () {\n            _this.onResizeDebounced();\n        };\n        dom.bind(window, 'resize', this.__resizeHandler);\n        dom.bind(this.__ul, 'webkitTransitionEnd', this.__resizeHandler);\n        dom.bind(this.__ul, 'transitionend', this.__resizeHandler);\n        dom.bind(this.__ul, 'oTransitionEnd', this.__resizeHandler);\n        this.onResize();\n        if (params.resizable) {\n            addResizeHandle(this);\n        }\n        saveToLocalStorage = function () {\n            if (SUPPORTS_LOCAL_STORAGE && localStorage.getItem(getLocalStorageHash(_this, 'isLocal')) === 'true') {\n                localStorage.setItem(getLocalStorageHash(_this, 'gui'), JSON.stringify(_this.getSaveObject()));\n            }\n        };\n        this.saveToLocalStorageIfPossible = saveToLocalStorage;\n        function resetWidth() {\n            const root = _this.getRoot();\n            root.width += 1;\n            common.defer(function () {\n                root.width -= 1;\n            });\n        }\n        if (!params.parent) {\n            resetWidth();\n        }\n    };\n    GUI.toggleHide = function () {\n        hide = !hide;\n        common.each(hideableGuis, function (gui) {\n            gui.domElement.style.display = hide ? 'none' : '';\n        });\n    };\n    GUI.CLASS_AUTO_PLACE = 'a';\n    GUI.CLASS_AUTO_PLACE_CONTAINER = 'ac';\n    GUI.CLASS_MAIN = 'main';\n    GUI.CLASS_CONTROLLER_ROW = 'cr';\n    GUI.CLASS_TOO_TALL = 'taller-than-window';\n    GUI.CLASS_CLOSED = 'closed';\n    GUI.CLASS_CLOSE_BUTTON = 'close-button';\n    GUI.CLASS_CLOSE_TOP = 'close-top';\n    GUI.CLASS_CLOSE_BOTTOM = 'close-bottom';\n    GUI.CLASS_DRAG = 'drag';\n    GUI.DEFAULT_WIDTH = 245;\n    GUI.TEXT_CLOSED = 'Close Controls';\n    GUI.TEXT_OPEN = 'Open Controls';\n    GUI._keydownHandler = function (e) {\n        if (document.activeElement.type !== 'text' && (e.which === HIDE_KEY_CODE || e.keyCode === HIDE_KEY_CODE)) {\n            GUI.toggleHide();\n        }\n    };\n    dom.bind(window, 'keydown', GUI._keydownHandler, false);\n    common.extend(GUI.prototype, {\n        add: function (object, property) {\n            return add(this, object, property, { factoryArgs: Array.prototype.slice.call(arguments, 2) });\n        },\n        addColor: function (object, property) {\n            return add(this, object, property, { color: true });\n        },\n        remove: function (controller) {\n            this.__ul.removeChild(controller.__li);\n            this.__controllers.splice(this.__controllers.indexOf(controller), 1);\n            const _this = this;\n            common.defer(function () {\n                _this.onResize();\n            });\n        },\n        destroy: function () {\n            if (this.parent) {\n                throw new Error('Only the root GUI should be removed with .destroy(). ' + 'For subfolders, use gui.removeFolder(folder) instead.');\n            }\n            if (this.autoPlace) {\n                autoPlaceContainer.removeChild(this.domElement);\n            }\n            const _this = this;\n            common.each(this.__folders, function (subfolder) {\n                _this.removeFolder(subfolder);\n            });\n            dom.unbind(window, 'keydown', GUI._keydownHandler, false);\n            removeListeners(this);\n        },\n        addFolder: function (name) {\n            if (this.__folders[name] !== undefined) {\n                throw new Error('You already have a folder in this GUI by the' + ' name \"' + name + '\"');\n            }\n            const newGuiParams = {\n                name: name,\n                parent: this\n            };\n            newGuiParams.autoPlace = this.autoPlace;\n            if (this.load && this.load.folders && this.load.folders[name]) {\n                newGuiParams.closed = this.load.folders[name].closed;\n                newGuiParams.load = this.load.folders[name];\n            }\n            const gui = new GUI(newGuiParams);\n            this.__folders[name] = gui;\n            const li = addRow(this, gui.domElement);\n            dom.addClass(li, 'folder');\n            return gui;\n        },\n        removeFolder: function (folder) {\n            this.__ul.removeChild(folder.domElement.parentElement);\n            delete this.__folders[folder.name];\n            if (this.load && this.load.folders && this.load.folders[folder.name]) {\n                delete this.load.folders[folder.name];\n            }\n            removeListeners(folder);\n            const _this = this;\n            common.each(folder.__folders, function (subfolder) {\n                folder.removeFolder(subfolder);\n            });\n            common.defer(function () {\n                _this.onResize();\n            });\n        },\n        open: function () {\n            this.closed = false;\n        },\n        close: function () {\n            this.closed = true;\n        },\n        hide: function () {\n            this.domElement.style.display = 'none';\n        },\n        show: function () {\n            this.domElement.style.display = '';\n        },\n        onResize: function () {\n            const root = this.getRoot();\n            if (root.scrollable) {\n                const top = dom.getOffset(root.__ul).top;\n                let h = 0;\n                common.each(root.__ul.childNodes, function (node) {\n                    if (!(root.autoPlace && node === root.__save_row)) {\n                        h += dom.getHeight(node);\n                    }\n                });\n                if (window.innerHeight - top - CLOSE_BUTTON_HEIGHT < h) {\n                    dom.addClass(root.domElement, GUI.CLASS_TOO_TALL);\n                    root.__ul.style.height = window.innerHeight - top - CLOSE_BUTTON_HEIGHT + 'px';\n                } else {\n                    dom.removeClass(root.domElement, GUI.CLASS_TOO_TALL);\n                    root.__ul.style.height = 'auto';\n                }\n            }\n            if (root.__resize_handle) {\n                common.defer(function () {\n                    root.__resize_handle.style.height = root.__ul.offsetHeight + 'px';\n                });\n            }\n            if (root.__closeButton) {\n                root.__closeButton.style.width = root.width + 'px';\n            }\n        },\n        onResizeDebounced: common.debounce(function () {\n            this.onResize();\n        }, 50),\n        remember: function () {\n            if (common.isUndefined(SAVE_DIALOGUE)) {\n                SAVE_DIALOGUE = new CenteredDiv();\n                SAVE_DIALOGUE.domElement.innerHTML = saveDialogueContents;\n            }\n            if (this.parent) {\n                throw new Error('You can only call remember on a top level GUI.');\n            }\n            const _this = this;\n            common.each(Array.prototype.slice.call(arguments), function (object) {\n                if (_this.__rememberedObjects.length === 0) {\n                    addSaveMenu(_this);\n                }\n                if (_this.__rememberedObjects.indexOf(object) === -1) {\n                    _this.__rememberedObjects.push(object);\n                }\n            });\n            if (this.autoPlace) {\n                setWidth(this, this.width);\n            }\n        },\n        getRoot: function () {\n            let gui = this;\n            while (gui.parent) {\n                gui = gui.parent;\n            }\n            return gui;\n        },\n        getSaveObject: function () {\n            const toReturn = this.load;\n            toReturn.closed = this.closed;\n            if (this.__rememberedObjects.length > 0) {\n                toReturn.preset = this.preset;\n                if (!toReturn.remembered) {\n                    toReturn.remembered = {};\n                }\n                toReturn.remembered[this.preset] = getCurrentPreset(this);\n            }\n            toReturn.folders = {};\n            common.each(this.__folders, function (element, key) {\n                toReturn.folders[key] = element.getSaveObject();\n            });\n            return toReturn;\n        },\n        save: function () {\n            if (!this.load.remembered) {\n                this.load.remembered = {};\n            }\n            this.load.remembered[this.preset] = getCurrentPreset(this);\n            markPresetModified(this, false);\n            this.saveToLocalStorageIfPossible();\n        },\n        saveAs: function (presetName) {\n            if (!this.load.remembered) {\n                this.load.remembered = {};\n                this.load.remembered[DEFAULT_DEFAULT_PRESET_NAME] = getCurrentPreset(this, true);\n            }\n            this.load.remembered[presetName] = getCurrentPreset(this);\n            this.preset = presetName;\n            addPresetOption(this, presetName, true);\n            this.saveToLocalStorageIfPossible();\n        },\n        revert: function (gui) {\n            common.each(this.__controllers, function (controller) {\n                if (!this.getRoot().load.remembered) {\n                    controller.setValue(controller.initialValue);\n                } else {\n                    recallSavedValue(gui || this.getRoot(), controller);\n                }\n                if (controller.__onFinishChange) {\n                    controller.__onFinishChange.call(controller, controller.getValue());\n                }\n            }, this);\n            common.each(this.__folders, function (folder) {\n                folder.revert(folder);\n            });\n            if (!gui) {\n                markPresetModified(this.getRoot(), false);\n            }\n        },\n        listen: function (controller) {\n            const init = this.__listening.length === 0;\n            this.__listening.push(controller);\n            if (init) {\n                updateDisplays(this.__listening);\n            }\n        },\n        updateDisplay: function () {\n            common.each(this.__controllers, function (controller) {\n                controller.updateDisplay();\n            });\n            common.each(this.__folders, function (folder) {\n                folder.updateDisplay();\n            });\n        }\n    });\n    function addRow(gui, newDom, liBefore) {\n        const li = document.createElement('li');\n        if (newDom) {\n            li.appendChild(newDom);\n        }\n        if (liBefore) {\n            gui.__ul.insertBefore(li, liBefore);\n        } else {\n            gui.__ul.appendChild(li);\n        }\n        gui.onResize();\n        return li;\n    }\n    function removeListeners(gui) {\n        dom.unbind(window, 'resize', gui.__resizeHandler);\n        if (gui.saveToLocalStorageIfPossible) {\n            dom.unbind(window, 'unload', gui.saveToLocalStorageIfPossible);\n        }\n    }\n    function markPresetModified(gui, modified) {\n        const opt = gui.__preset_select[gui.__preset_select.selectedIndex];\n        if (modified) {\n            opt.innerHTML = opt.value + '*';\n        } else {\n            opt.innerHTML = opt.value;\n        }\n    }\n    function augmentController(gui, li, controller) {\n        controller.__li = li;\n        controller.__gui = gui;\n        common.extend(controller, {\n            options: function (options) {\n                if (arguments.length > 1) {\n                    const nextSibling = controller.__li.nextElementSibling;\n                    controller.remove();\n                    return add(gui, controller.object, controller.property, {\n                        before: nextSibling,\n                        factoryArgs: [common.toArray(arguments)]\n                    });\n                }\n                if (common.isArray(options) || common.isObject(options)) {\n                    const nextSibling = controller.__li.nextElementSibling;\n                    controller.remove();\n                    return add(gui, controller.object, controller.property, {\n                        before: nextSibling,\n                        factoryArgs: [options]\n                    });\n                }\n            },\n            name: function (name) {\n                controller.__li.firstElementChild.firstElementChild.innerHTML = name;\n                return controller;\n            },\n            listen: function () {\n                controller.__gui.listen(controller);\n                return controller;\n            },\n            remove: function () {\n                controller.__gui.remove(controller);\n                return controller;\n            }\n        });\n        if (controller instanceof NumberControllerSlider) {\n            const box = new NumberControllerBox(controller.object, controller.property, {\n                min: controller.__min,\n                max: controller.__max,\n                step: controller.__step\n            });\n            common.each([\n                'updateDisplay',\n                'onChange',\n                'onFinishChange',\n                'step',\n                'min',\n                'max'\n            ], function (method) {\n                const pc = controller[method];\n                const pb = box[method];\n                controller[method] = box[method] = function () {\n                    const args = Array.prototype.slice.call(arguments);\n                    pb.apply(box, args);\n                    return pc.apply(controller, args);\n                };\n            });\n            dom.addClass(li, 'has-slider');\n            controller.domElement.insertBefore(box.domElement, controller.domElement.firstElementChild);\n        } else if (controller instanceof NumberControllerBox) {\n            const r = function (returned) {\n                if (common.isNumber(controller.__min) && common.isNumber(controller.__max)) {\n                    const oldName = controller.__li.firstElementChild.firstElementChild.innerHTML;\n                    const wasListening = controller.__gui.__listening.indexOf(controller) > -1;\n                    controller.remove();\n                    const newController = add(gui, controller.object, controller.property, {\n                        before: controller.__li.nextElementSibling,\n                        factoryArgs: [\n                            controller.__min,\n                            controller.__max,\n                            controller.__step\n                        ]\n                    });\n                    newController.name(oldName);\n                    if (wasListening)\n                        newController.listen();\n                    return newController;\n                }\n                return returned;\n            };\n            controller.min = common.compose(r, controller.min);\n            controller.max = common.compose(r, controller.max);\n        } else if (controller instanceof BooleanController) {\n            dom.bind(li, 'click', function () {\n                dom.fakeEvent(controller.__checkbox, 'click');\n            });\n            dom.bind(controller.__checkbox, 'click', function (e) {\n                e.stopPropagation();\n            });\n        } else if (controller instanceof FunctionController) {\n            dom.bind(li, 'click', function () {\n                dom.fakeEvent(controller.__button, 'click');\n            });\n            dom.bind(li, 'mouseover', function () {\n                dom.addClass(controller.__button, 'hover');\n            });\n            dom.bind(li, 'mouseout', function () {\n                dom.removeClass(controller.__button, 'hover');\n            });\n        } else if (controller instanceof ColorController) {\n            dom.addClass(li, 'color');\n            controller.updateDisplay = common.compose(function (val) {\n                li.style.borderLeftColor = controller.__color.toString();\n                return val;\n            }, controller.updateDisplay);\n            controller.updateDisplay();\n        }\n        controller.setValue = common.compose(function (val) {\n            if (gui.getRoot().__preset_select && controller.isModified()) {\n                markPresetModified(gui.getRoot(), true);\n            }\n            return val;\n        }, controller.setValue);\n    }\n    function recallSavedValue(gui, controller) {\n        const root = gui.getRoot();\n        const matchedIndex = root.__rememberedObjects.indexOf(controller.object);\n        if (matchedIndex !== -1) {\n            let controllerMap = root.__rememberedObjectIndecesToControllers[matchedIndex];\n            if (controllerMap === undefined) {\n                controllerMap = {};\n                root.__rememberedObjectIndecesToControllers[matchedIndex] = controllerMap;\n            }\n            controllerMap[controller.property] = controller;\n            if (root.load && root.load.remembered) {\n                const presetMap = root.load.remembered;\n                let preset;\n                if (presetMap[gui.preset]) {\n                    preset = presetMap[gui.preset];\n                } else if (presetMap[DEFAULT_DEFAULT_PRESET_NAME]) {\n                    preset = presetMap[DEFAULT_DEFAULT_PRESET_NAME];\n                } else {\n                    return;\n                }\n                if (preset[matchedIndex] && preset[matchedIndex][controller.property] !== undefined) {\n                    const value = preset[matchedIndex][controller.property];\n                    controller.initialValue = value;\n                    controller.setValue(value);\n                }\n            }\n        }\n    }\n    function add(gui, object, property, params) {\n        if (object[property] === undefined) {\n            throw new Error(`Object \"${ object }\" has no property \"${ property }\"`);\n        }\n        let controller;\n        if (params.color) {\n            controller = new ColorController(object, property);\n        } else {\n            const factoryArgs = [\n                object,\n                property\n            ].concat(params.factoryArgs);\n            controller = ControllerFactory.apply(gui, factoryArgs);\n        }\n        if (params.before instanceof Controller) {\n            params.before = params.before.__li;\n        }\n        recallSavedValue(gui, controller);\n        dom.addClass(controller.domElement, 'c');\n        const name = document.createElement('span');\n        dom.addClass(name, 'property-name');\n        name.innerHTML = controller.property;\n        const container = document.createElement('div');\n        container.appendChild(name);\n        container.appendChild(controller.domElement);\n        const li = addRow(gui, container, params.before);\n        dom.addClass(li, GUI.CLASS_CONTROLLER_ROW);\n        if (controller instanceof ColorController) {\n            dom.addClass(li, 'color');\n        } else {\n            dom.addClass(li, typeof controller.getValue());\n        }\n        augmentController(gui, li, controller);\n        gui.__controllers.push(controller);\n        return controller;\n    }\n    function getLocalStorageHash(gui, key) {\n        return document.location.href + '.' + key;\n    }\n    function addPresetOption(gui, name, setSelected) {\n        const opt = document.createElement('option');\n        opt.innerHTML = name;\n        opt.value = name;\n        gui.__preset_select.appendChild(opt);\n        if (setSelected) {\n            gui.__preset_select.selectedIndex = gui.__preset_select.length - 1;\n        }\n    }\n    function showHideExplain(gui, explain) {\n        explain.style.display = gui.useLocalStorage ? 'block' : 'none';\n    }\n    function addSaveMenu(gui) {\n        const div = gui.__save_row = document.createElement('li');\n        dom.addClass(gui.domElement, 'has-save');\n        gui.__ul.insertBefore(div, gui.__ul.firstChild);\n        dom.addClass(div, 'save-row');\n        const gears = document.createElement('span');\n        gears.innerHTML = '&nbsp;';\n        dom.addClass(gears, 'button gears');\n        const button = document.createElement('span');\n        button.innerHTML = 'Save';\n        dom.addClass(button, 'button');\n        dom.addClass(button, 'save');\n        const button2 = document.createElement('span');\n        button2.innerHTML = 'New';\n        dom.addClass(button2, 'button');\n        dom.addClass(button2, 'save-as');\n        const button3 = document.createElement('span');\n        button3.innerHTML = 'Revert';\n        dom.addClass(button3, 'button');\n        dom.addClass(button3, 'revert');\n        const select = gui.__preset_select = document.createElement('select');\n        if (gui.load && gui.load.remembered) {\n            common.each(gui.load.remembered, function (value, key) {\n                addPresetOption(gui, key, key === gui.preset);\n            });\n        } else {\n            addPresetOption(gui, DEFAULT_DEFAULT_PRESET_NAME, false);\n        }\n        dom.bind(select, 'change', function () {\n            for (let index = 0; index < gui.__preset_select.length; index++) {\n                gui.__preset_select[index].innerHTML = gui.__preset_select[index].value;\n            }\n            gui.preset = this.value;\n        });\n        div.appendChild(select);\n        div.appendChild(gears);\n        div.appendChild(button);\n        div.appendChild(button2);\n        div.appendChild(button3);\n        if (SUPPORTS_LOCAL_STORAGE) {\n            const explain = document.getElementById('dg-local-explain');\n            const localStorageCheckBox = document.getElementById('dg-local-storage');\n            const saveLocally = document.getElementById('dg-save-locally');\n            saveLocally.style.display = 'block';\n            if (localStorage.getItem(getLocalStorageHash(gui, 'isLocal')) === 'true') {\n                localStorageCheckBox.setAttribute('checked', 'checked');\n            }\n            showHideExplain(gui, explain);\n            dom.bind(localStorageCheckBox, 'change', function () {\n                gui.useLocalStorage = !gui.useLocalStorage;\n                showHideExplain(gui, explain);\n            });\n        }\n        const newConstructorTextArea = document.getElementById('dg-new-constructor');\n        dom.bind(newConstructorTextArea, 'keydown', function (e) {\n            if (e.metaKey && (e.which === 67 || e.keyCode === 67)) {\n                SAVE_DIALOGUE.hide();\n            }\n        });\n        dom.bind(gears, 'click', function () {\n            newConstructorTextArea.innerHTML = JSON.stringify(gui.getSaveObject(), undefined, 2);\n            SAVE_DIALOGUE.show();\n            newConstructorTextArea.focus();\n            newConstructorTextArea.select();\n        });\n        dom.bind(button, 'click', function () {\n            gui.save();\n        });\n        dom.bind(button2, 'click', function () {\n            const presetName = prompt('Enter a new preset name.');\n            if (presetName) {\n                gui.saveAs(presetName);\n            }\n        });\n        dom.bind(button3, 'click', function () {\n            gui.revert();\n        });\n    }\n    function addResizeHandle(gui) {\n        let pmouseX;\n        gui.__resize_handle = document.createElement('div');\n        common.extend(gui.__resize_handle.style, {\n            width: '6px',\n            marginLeft: '-3px',\n            height: '200px',\n            cursor: 'ew-resize',\n            position: 'absolute'\n        });\n        function drag(e) {\n            e.preventDefault();\n            gui.width += pmouseX - e.clientX;\n            gui.onResize();\n            pmouseX = e.clientX;\n            return false;\n        }\n        function dragStop() {\n            dom.removeClass(gui.__closeButton, GUI.CLASS_DRAG);\n            dom.unbind(window, 'mousemove', drag);\n            dom.unbind(window, 'mouseup', dragStop);\n        }\n        function dragStart(e) {\n            e.preventDefault();\n            pmouseX = e.clientX;\n            dom.addClass(gui.__closeButton, GUI.CLASS_DRAG);\n            dom.bind(window, 'mousemove', drag);\n            dom.bind(window, 'mouseup', dragStop);\n            return false;\n        }\n        dom.bind(gui.__resize_handle, 'mousedown', dragStart);\n        dom.bind(gui.__closeButton, 'mousedown', dragStart);\n        gui.domElement.insertBefore(gui.__resize_handle, gui.domElement.firstElementChild);\n    }\n    function setWidth(gui, w) {\n        gui.domElement.style.width = w + 'px';\n        if (gui.__save_row && gui.autoPlace) {\n            gui.__save_row.style.width = w + 'px';\n        }\n        if (gui.__closeButton) {\n            gui.__closeButton.style.width = w + 'px';\n        }\n    }\n    function getCurrentPreset(gui, useInitialValues) {\n        const toReturn = {};\n        common.each(gui.__rememberedObjects, function (val, index) {\n            const savedValues = {};\n            const controllerMap = gui.__rememberedObjectIndecesToControllers[index];\n            common.each(controllerMap, function (controller, property) {\n                savedValues[property] = useInitialValues ? controller.initialValue : controller.getValue();\n            });\n            toReturn[index] = savedValues;\n        });\n        return toReturn;\n    }\n    function setPresetSelectIndex(gui) {\n        for (let index = 0; index < gui.__preset_select.length; index++) {\n            if (gui.__preset_select[index].value === gui.preset) {\n                gui.__preset_select.selectedIndex = index;\n            }\n        }\n    }\n    function updateDisplays(controllerArray) {\n        if (controllerArray.length !== 0) {\n            requestAnimationFrame.call(window, function () {\n                updateDisplays(controllerArray);\n            });\n        }\n        common.each(controllerArray, function (c) {\n            c.updateDisplay();\n        });\n    }\n    return GUI;\n});\ndefine('skylark-datgui/main',[\n    \"skylark-langx-ns\",\n    './color/Color',\n    './color/math',\n    './color/interpret',\n    './controllers/Controller',\n    './controllers/BooleanController',\n    './controllers/OptionController',\n    './controllers/StringController',\n    './controllers/NumberController',\n    './controllers/NumberControllerBox',\n    './controllers/NumberControllerSlider',\n    './controllers/FunctionController',\n    './controllers/ColorController',\n    './dom/dom',\n    './gui/GUI'\n], function (skylark,Color, math, interpret, Controller, BooleanController, OptionController, StringController, NumberController, NumberControllerBox, NumberControllerSlider, FunctionController, ColorController, domImport, GUIImport) {\n    'use strict';\n    const color = {\n        Color: Color,\n        math: math,\n        interpret: interpret\n    };\n    const controllers = {\n        Controller: Controller,\n        BooleanController: BooleanController,\n        OptionController: OptionController,\n        StringController: StringController,\n        NumberController: NumberController,\n        NumberControllerBox: NumberControllerBox,\n        NumberControllerSlider: NumberControllerSlider,\n        FunctionController: FunctionController,\n        ColorController: ColorController\n    };\n    const dom = { dom: domImport };\n    const gui = { GUI: GUIImport };\n    const GUI = GUIImport;\n    return skylark.attach(\"intg.datgui\",{\n        color,\n        controllers,\n        dom,\n        gui,\n        GUI\n    });\n});\ndefine('skylark-datgui', ['skylark-datgui/main'], function (main) { return main; });\n\n"]}