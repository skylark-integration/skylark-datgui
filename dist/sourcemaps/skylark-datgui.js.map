{"version":3,"sources":["skylark-datgui.js"],"names":["define","color","forceCSSHex","colorFormat","__state","conversionName","toString","r","Math","round","g","b","a","h","s","toFixed","v","str","hex","length","types","arrays","objects","funcs","ARR_EACH","Array","prototype","forEach","ARR_SLICE","slice","Common","BREAK","extend","defaults","target","this","each","call","arguments","obj","keys","isObject","Object","key","isUndefined","bind","compose","toCall","args","i","apply","itr","scope","l","defer","debounce","func","threshold","callImmediately","timeout","callNow","clearTimeout","setTimeout","toArray","makeArray","isNull","isNaN","isArray","isPlainObject","isNumber","isString","isBoolean","isFunction","common","INTERPRETATIONS","litmus","conversions","THREE_CHAR_HEX","read","original","test","match","space","parseInt","write","SIX_CHAR_HEX","CSS_RGB","parseFloat","CSS_RGBA","HEX","RGB_ARRAY","RGBA_ARRAY","RGBA_OBJ","RGB_OBJ","HSVA_OBJ","HSV_OBJ","result","toReturn","family","conversion","colors","tmpComponent","ColorMath","hsv_to_rgb","hsvToRgb","rgb_to_hsv","rgbToHsv","rgb_to_hex","rgbToHex","component_from_hex","componentIndex","hex_with_component","value","interpret","math","colorToString","Color","[object Object]","Error","defineRGBComponent","component","componentHexIndex","defineProperty","get","recalculateRGB","set","defineHSVComponent","recalculateHSV","COMPONENTS","object","property","initialValue","domElement","document","createElement","__onChange","undefined","__onFinishChange","fnc","newValue","updateDisplay","getValue","noder","styler","geom","eventer","EVENT_MAP_INV","HTMLEvents","MouseEvents","KeyboardEvents","k","e","dom","makeSelectable","selectable","makeFullscreen","fullCover","fakeEvent","elem","eventType","pars","aux","params","className","evt","createEvent","clientX","x","clientY","y","initMouseEvent","bubbles","cancelable","window","clickCount","init","initKeyboardEvent","initKeyEvent","ctrlKey","altKey","shiftKey","metaKey","keyCode","charCode","initEvent","dispatchEvent","on","unbind","off","addClass","removeClass","hasClass","getWidth","width","getHeight","height","getOffset","pagePosition","isActive","Controller","super","_this","__prev","__checkbox","setAttribute","setValue","appendChild","checked","opts","options","__select","map","element","opt","innerHTML","desiredValue","selectedIndex","onChange","__input","blur","numDecimals","_x","indexOf","_params","__min","min","__max","max","__step","step","__impliedStep","pow","floor","log","abs","LN10","__precision","_v","minValue","maxValue","stepValue","NumberController","__truncationSuspended","prevY","onFinish","onMouseDrag","diff","onMouseUp","attempted","decimals","tenTo","roundToDecimal","i1","i2","o1","o2","preventDefault","bgRect","__background","getBoundingClientRect","left","right","onTouchMove","touches","onTouchEnd","__foreground","activeElement","pct","style","text","__button","fire","vendors","linearGradient","background","vendor","cssText","__color","__temp","__selector","__saturation_field","__field_knob","__field_knob_border","__hue_knob","__hue_field","type","__input_textShadow","onBlur","valueField","fieldDown","setSV","fieldUpSV","fieldDownH","setH","fieldUpH","toOriginal","fieldRect","top","bottom","padding","backgroundColor","boxShadow","position","border","borderRadius","zIndex","borderRight","marginRight","display","cursor","outline","textAlign","fontWeight","textShadow","mismatch","flip","_flip","marginLeft","marginTop","toHexString","css","load","url","indoc","doc","link","rel","href","getElementsByTagName","inject","cssContent","injected","head","OptionController","NumberControllerBox","NumberControllerSlider","StringController","FunctionController","BooleanController","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","backgroundElement","opacity","WebkitTransition","transition","body","hide","webkitTransform","layout","innerWidth","innerHeight","saveDialogueContents","ControllerFactory","ColorController","CenteredDiv","styleSheet","DEFAULT_DEFAULT_PRESET_NAME","SUPPORTS_LOCAL_STORAGE","localStorage","SAVE_DIALOGUE","autoPlaceContainer","autoPlaceVirgin","hideableGuis","GUI","__ul","__folders","__controllers","__rememberedObjects","__rememberedObjectIndecesToControllers","__listening","closeOnTop","autoPlace","DEFAULT_WIDTH","resizable","hideable","preset","parent","push","scrollable","saveToLocalStorage","titleRow","useLocalStorage","getItem","getLocalStorageHash","defineProperties","getRoot","gui","index","__preset_select","setPresetSelectIndex","revert","setWidth","name","closed","CLASS_CLOSED","onResize","__closeButton","TEXT_OPEN","TEXT_CLOSED","bool","setItem","CLASS_MAIN","savedGui","JSON","parse","CLASS_CLOSE_BUTTON","CLASS_CLOSE_TOP","insertBefore","childNodes","CLASS_CLOSE_BOTTOM","titleRowName","createTextNode","addRow","onClickTitle","CLASS_AUTO_PLACE_CONTAINER","CLASS_AUTO_PLACE","__resizeHandler","onResizeDebounced","pmouseX","drag","dragStop","CLASS_DRAG","dragStart","__resize_handle","firstElementChild","addResizeHandle","stringify","getSaveObject","saveToLocalStorageIfPossible","root","resetWidth","newDom","liBefore","li","removeListeners","markPresetModified","modified","recallSavedValue","controller","matchedIndex","controllerMap","remembered","presetMap","add","factoryArgs","concat","before","__li","container","CLASS_CONTROLLER_ROW","__gui","nextSibling","nextElementSibling","remove","listen","box","method","pc","pb","returned","oldName","wasListening","newController","stopPropagation","val","borderLeftColor","isModified","augmentController","location","addPresetOption","setSelected","showHideExplain","explain","w","__save_row","getCurrentPreset","useInitialValues","savedValues","toggleHide","CLASS_TOO_TALL","_keydownHandler","which","addColor","removeChild","splice","destroy","subfolder","removeFolder","addFolder","newGuiParams","folders","folder","parentElement","open","close","show","node","offsetHeight","remember","div","firstChild","gears","button","button2","button3","select","getElementById","localStorageCheckBox","saveLocally","newConstructorTextArea","focus","save","presetName","prompt","saveAs","addSaveMenu","updateDisplays","controllerArray","c","skylark","domImport","GUIImport","controllers","attach","main"],"mappings":"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","file":"../skylark-datgui.js","sourcesContent":["define('skylark-datgui/color/toString',[],function () {\n    'use strict';\n    return function (color, forceCSSHex) {\n        const colorFormat = color.__state.conversionName.toString();\n        const r = Math.round(color.r);\n        const g = Math.round(color.g);\n        const b = Math.round(color.b);\n        const a = color.a;\n        const h = Math.round(color.h);\n        const s = color.s.toFixed(1);\n        const v = color.v.toFixed(1);\n        if (forceCSSHex || colorFormat === 'THREE_CHAR_HEX' || colorFormat === 'SIX_CHAR_HEX') {\n            let str = color.hex.toString(16);\n            while (str.length < 6) {\n                str = '0' + str;\n            }\n            return '#' + str;\n        } else if (colorFormat === 'CSS_RGB') {\n            return 'rgb(' + r + ',' + g + ',' + b + ')';\n        } else if (colorFormat === 'CSS_RGBA') {\n            return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n        } else if (colorFormat === 'HEX') {\n            return '0x' + color.hex.toString(16);\n        } else if (colorFormat === 'RGB_ARRAY') {\n            return '[' + r + ',' + g + ',' + b + ']';\n        } else if (colorFormat === 'RGBA_ARRAY') {\n            return '[' + r + ',' + g + ',' + b + ',' + a + ']';\n        } else if (colorFormat === 'RGB_OBJ') {\n            return '{r:' + r + ',g:' + g + ',b:' + b + '}';\n        } else if (colorFormat === 'RGBA_OBJ') {\n            return '{r:' + r + ',g:' + g + ',b:' + b + ',a:' + a + '}';\n        } else if (colorFormat === 'HSV_OBJ') {\n            return '{h:' + h + ',s:' + s + ',v:' + v + '}';\n        } else if (colorFormat === 'HSVA_OBJ') {\n            return '{h:' + h + ',s:' + s + ',v:' + v + ',a:' + a + '}';\n        }\n        return 'unknown format';\n    };\n});\ndefine('skylark-datgui/utils/common',[\n    \"skylark-langx-types\",\n    \"skylark-langx-arrays\",\n    \"skylark-langx-objects\",\n    \"skylark-langx-funcs\"\n],function (types,arrays,objects,funcs) {\n    'use strict';\n    const ARR_EACH = Array.prototype.forEach;\n    const ARR_SLICE = Array.prototype.slice;\n    const Common = {\n        BREAK: {},\n\n        extend: objects.extend,\n\n        defaults: function (target) {\n            this.each(ARR_SLICE.call(arguments, 1), function (obj) {\n                const keys = this.isObject(obj) ? Object.keys(obj) : [];\n                keys.forEach(function (key) {\n                    if (this.isUndefined(target[key])) {\n                        target[key] = obj[key];\n                    }\n                }.bind(this));\n            }, this);\n            return target;\n        },\n\n        compose: function () {\n            const toCall = ARR_SLICE.call(arguments);\n            return function () {\n                let args = ARR_SLICE.call(arguments);\n                for (let i = toCall.length - 1; i >= 0; i--) {\n                    args = [toCall[i].apply(this, args)];\n                }\n                return args[0];\n            };\n        },\n\n        each: function (obj, itr, scope) {\n            if (!obj) {\n                return;\n            }\n            if (ARR_EACH && obj.forEach && obj.forEach === ARR_EACH) {\n                obj.forEach(itr, scope);\n            } else if (obj.length === obj.length + 0) {\n                let key;\n                let l;\n                for (key = 0, l = obj.length; key < l; key++) {\n                    if (key in obj && itr.call(scope, obj[key], key) === this.BREAK) {\n                        return;\n                    }\n                }\n            } else {\n                for (const key in obj) {\n                    if (itr.call(scope, obj[key], key) === this.BREAK) {\n                        return;\n                    }\n                }\n            }\n        },\n\n        defer: funcs.defer,\n\n        debounce: function (func, threshold, callImmediately) {\n            let timeout;\n            return function () {\n                const obj = this;\n                const args = arguments;\n                function delayed() {\n                    timeout = null;\n                    if (!callImmediately)\n                        func.apply(obj, args);\n                }\n                const callNow = callImmediately || !timeout;\n                clearTimeout(timeout);\n                timeout = setTimeout(delayed, threshold);\n                if (callNow) {\n                    func.apply(obj, args);\n                }\n            };\n        },\n\n        toArray: arrays.toArray || arrays.makeArray,\n\n        isUndefined: types.isUndefined,\n        isNull: types.isNull,\n        isNaN: types.isNaN,\n        isArray: types.isArray,\n\n        isObject: types.isPlainObject,\n        isNumber: types.isNumber,\n        isString: types.isString,\n        isBoolean: types.isBoolean,\n        isFunction: types.isFunction\n    };\n\n    return Common;\n});\ndefine('skylark-datgui/color/interpret',[\n    './toString',\n    '../utils/common'\n], function (toString, common) {\n    'use strict';\n    const INTERPRETATIONS = [\n        {\n            litmus: common.isString,\n            conversions: {\n                THREE_CHAR_HEX: {\n                    read: function (original) {\n                        const test = original.match(/^#([A-F0-9])([A-F0-9])([A-F0-9])$/i);\n                        if (test === null) {\n                            return false;\n                        }\n                        return {\n                            space: 'HEX',\n                            hex: parseInt('0x' + test[1].toString() + test[1].toString() + test[2].toString() + test[2].toString() + test[3].toString() + test[3].toString(), 0)\n                        };\n                    },\n                    write: toString\n                },\n                SIX_CHAR_HEX: {\n                    read: function (original) {\n                        const test = original.match(/^#([A-F0-9]{6})$/i);\n                        if (test === null) {\n                            return false;\n                        }\n                        return {\n                            space: 'HEX',\n                            hex: parseInt('0x' + test[1].toString(), 0)\n                        };\n                    },\n                    write: toString\n                },\n                CSS_RGB: {\n                    read: function (original) {\n                        const test = original.match(/^rgb\\(\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*\\)/);\n                        if (test === null) {\n                            return false;\n                        }\n                        return {\n                            space: 'RGB',\n                            r: parseFloat(test[1]),\n                            g: parseFloat(test[2]),\n                            b: parseFloat(test[3])\n                        };\n                    },\n                    write: toString\n                },\n                CSS_RGBA: {\n                    read: function (original) {\n                        const test = original.match(/^rgba\\(\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*\\)/);\n                        if (test === null) {\n                            return false;\n                        }\n                        return {\n                            space: 'RGB',\n                            r: parseFloat(test[1]),\n                            g: parseFloat(test[2]),\n                            b: parseFloat(test[3]),\n                            a: parseFloat(test[4])\n                        };\n                    },\n                    write: toString\n                }\n            }\n        },\n        {\n            litmus: common.isNumber,\n            conversions: {\n                HEX: {\n                    read: function (original) {\n                        return {\n                            space: 'HEX',\n                            hex: original,\n                            conversionName: 'HEX'\n                        };\n                    },\n                    write: function (color) {\n                        return color.hex;\n                    }\n                }\n            }\n        },\n        {\n            litmus: common.isArray,\n            conversions: {\n                RGB_ARRAY: {\n                    read: function (original) {\n                        if (original.length !== 3) {\n                            return false;\n                        }\n                        return {\n                            space: 'RGB',\n                            r: original[0],\n                            g: original[1],\n                            b: original[2]\n                        };\n                    },\n                    write: function (color) {\n                        return [\n                            color.r,\n                            color.g,\n                            color.b\n                        ];\n                    }\n                },\n                RGBA_ARRAY: {\n                    read: function (original) {\n                        if (original.length !== 4)\n                            return false;\n                        return {\n                            space: 'RGB',\n                            r: original[0],\n                            g: original[1],\n                            b: original[2],\n                            a: original[3]\n                        };\n                    },\n                    write: function (color) {\n                        return [\n                            color.r,\n                            color.g,\n                            color.b,\n                            color.a\n                        ];\n                    }\n                }\n            }\n        },\n        {\n            litmus: common.isObject,\n            conversions: {\n                RGBA_OBJ: {\n                    read: function (original) {\n                        if (common.isNumber(original.r) && common.isNumber(original.g) && common.isNumber(original.b) && common.isNumber(original.a)) {\n                            return {\n                                space: 'RGB',\n                                r: original.r,\n                                g: original.g,\n                                b: original.b,\n                                a: original.a\n                            };\n                        }\n                        return false;\n                    },\n                    write: function (color) {\n                        return {\n                            r: color.r,\n                            g: color.g,\n                            b: color.b,\n                            a: color.a\n                        };\n                    }\n                },\n                RGB_OBJ: {\n                    read: function (original) {\n                        if (common.isNumber(original.r) && common.isNumber(original.g) && common.isNumber(original.b)) {\n                            return {\n                                space: 'RGB',\n                                r: original.r,\n                                g: original.g,\n                                b: original.b\n                            };\n                        }\n                        return false;\n                    },\n                    write: function (color) {\n                        return {\n                            r: color.r,\n                            g: color.g,\n                            b: color.b\n                        };\n                    }\n                },\n                HSVA_OBJ: {\n                    read: function (original) {\n                        if (common.isNumber(original.h) && common.isNumber(original.s) && common.isNumber(original.v) && common.isNumber(original.a)) {\n                            return {\n                                space: 'HSV',\n                                h: original.h,\n                                s: original.s,\n                                v: original.v,\n                                a: original.a\n                            };\n                        }\n                        return false;\n                    },\n                    write: function (color) {\n                        return {\n                            h: color.h,\n                            s: color.s,\n                            v: color.v,\n                            a: color.a\n                        };\n                    }\n                },\n                HSV_OBJ: {\n                    read: function (original) {\n                        if (common.isNumber(original.h) && common.isNumber(original.s) && common.isNumber(original.v)) {\n                            return {\n                                space: 'HSV',\n                                h: original.h,\n                                s: original.s,\n                                v: original.v\n                            };\n                        }\n                        return false;\n                    },\n                    write: function (color) {\n                        return {\n                            h: color.h,\n                            s: color.s,\n                            v: color.v\n                        };\n                    }\n                }\n            }\n        }\n    ];\n    let result;\n    let toReturn;\n    const interpret = function () {\n        toReturn = false;\n        const original = arguments.length > 1 ? common.toArray(arguments) : arguments[0];\n        common.each(INTERPRETATIONS, function (family) {\n            if (family.litmus(original)) {\n                common.each(family.conversions, function (conversion, conversionName) {\n                    result = conversion.read(original);\n                    if (toReturn === false && result !== false) {\n                        toReturn = result;\n                        result.conversionName = conversionName;\n                        result.conversion = conversion;\n                        return common.BREAK;\n                    }\n                });\n                return common.BREAK;\n            }\n        });\n        return toReturn;\n    };\n    return interpret;\n});\ndefine('skylark-datgui/color/math',[\n    \"skylark-data-color\"\n], function (colors) {\n    'use strict';\n    let tmpComponent;\n    const ColorMath = {\n        hsv_to_rgb: colors.hsvToRgb,\n        rgb_to_hsv: colors.rgbToHsv,\n        rgb_to_hex: colors.rgbToHex,\n        \n        component_from_hex: function (hex, componentIndex) {\n            return hex >> componentIndex * 8 & 255;\n        },\n        hex_with_component: function (hex, componentIndex, value) {\n            return value << (tmpComponent = componentIndex * 8) | hex & ~(255 << tmpComponent);\n        }\n    };\n    return ColorMath;\n});\ndefine('skylark-datgui/color/Color',[\n    './interpret',\n    './math',\n    './toString',\n    '../utils/common'\n], function (interpret, math, colorToString, common) {\n    'use strict';\n    class Color  {\n        constructor() {\n            this.__state = interpret.apply(this, arguments);\n            if (this.__state === false) {\n                throw new Error('Failed tcomponent_from_hexo interpret color arguments');\n            }\n            this.__state.a = this.__state.a || 1;\n        }\n        toString() {\n            return colorToString(this);\n        }\n        toHexString() {\n            return colorToString(this, true);\n        }\n        toOriginal() {\n            return this.__state.conversion.write(this);\n        }\n    }\n    function defineRGBComponent(target, component, componentHexIndex) {\n        Object.defineProperty(target, component, {\n            get: function () {\n                if (this.__state.space === 'RGB') {\n                    return this.__state[component];\n                }\n                Color.recalculateRGB(this, component, componentHexIndex);\n                return this.__state[component];\n            },\n            set: function (v) {\n                if (this.__state.space !== 'RGB') {\n                    Color.recalculateRGB(this, component, componentHexIndex);\n                    this.__state.space = 'RGB';\n                }\n                this.__state[component] = v;\n            }\n        });\n    }\n    function defineHSVComponent(target, component) {\n        Object.defineProperty(target, component, {\n            get: function () {\n                if (this.__state.space === 'HSV') {\n                    return this.__state[component];\n                }\n                Color.recalculateHSV(this);\n                return this.__state[component];\n            },\n            set: function (v) {\n                if (this.__state.space !== 'HSV') {\n                    Color.recalculateHSV(this);\n                    this.__state.space = 'HSV';\n                }\n                this.__state[component] = v;\n            }\n        });\n    }\n    Color.recalculateRGB = function (color, component, componentHexIndex) {\n        if (color.__state.space === 'HEX') {\n            color.__state[component] = math.component_from_hex(color.__state.hex, componentHexIndex);\n        } else if (color.__state.space === 'HSV') {\n            common.extend(color.__state, math.hsv_to_rgb(color.__state.h, color.__state.s, color.__state.v));\n        } else {\n            throw new Error('Corrupted color state');\n        }\n    };\n    Color.recalculateHSV = function (color) {\n        const result = math.rgb_to_hsv(color.r, color.g, color.b);\n        common.extend(color.__state, {\n            s: result.s,\n            v: result.v\n        });\n        if (!common.isNaN(result.h)) {\n            color.__state.h = result.h;\n        } else if (common.isUndefined(color.__state.h)) {\n            color.__state.h = 0;\n        }\n    };\n    Color.COMPONENTS = [\n        'r',\n        'g',\n        'b',\n        'h',\n        's',\n        'v',\n        'hex',\n        'a'\n    ];\n    defineRGBComponent(Color.prototype, 'r', 2);\n    defineRGBComponent(Color.prototype, 'g', 1);\n    defineRGBComponent(Color.prototype, 'b', 0);\n    defineHSVComponent(Color.prototype, 'h');\n    defineHSVComponent(Color.prototype, 's');\n    defineHSVComponent(Color.prototype, 'v');\n    Object.defineProperty(Color.prototype, 'a', {\n        get: function () {\n            return this.__state.a;\n        },\n        set: function (v) {\n            this.__state.a = v;\n        }\n    });\n    Object.defineProperty(Color.prototype, 'hex', {\n        get: function () {\n            if (this.__state.space !== 'HEX') {\n                this.__state.hex = math.rgb_to_hex(this.r, this.g, this.b);\n                this.__state.space = 'HEX';\n            }\n            return this.__state.hex;\n        },\n        set: function (v) {\n            this.__state.space = 'HEX';\n            this.__state.hex = v;\n        }\n    });\n    return Color;\n});\ndefine('skylark-datgui/controllers/Controller',[],function () {\n    'use strict';\n    class Controller {\n        constructor(object, property) {\n            this.initialValue = object[property];\n            this.domElement = document.createElement('div');\n            this.object = object;\n            this.property = property;\n            this.__onChange = undefined;\n            this.__onFinishChange = undefined;\n        }\n        onChange(fnc) {\n            this.__onChange = fnc;\n            return this;\n        }\n        onFinishChange(fnc) {\n            this.__onFinishChange = fnc;\n            return this;\n        }\n        setValue(newValue) {\n            this.object[this.property] = newValue;\n            if (this.__onChange) {\n                this.__onChange.call(this, newValue);\n            }\n            this.updateDisplay();\n            return this;\n        }\n        getValue() {\n            return this.object[this.property];\n        }\n        updateDisplay() {\n            return this;\n        }\n        isModified() {\n            return this.initialValue !== this.getValue();\n        }\n    }\n    return Controller;\n});\ndefine('skylark-datgui/dom/dom',[\n    \"skylark-domx-noder\",\n    \"skylark-domx-styler\",\n    \"skylark-domx-geom\",\n    \"skylark-domx-eventer\",\n    '../utils/common'\n], function (noder,styler,geom,eventer,common) {\n    'use strict';\n    const EVENT_MAP = {\n        HTMLEvents: ['change'],\n        MouseEvents: [\n            'click',\n            'mousemove',\n            'mousedown',\n            'mouseup',\n            'mouseover'\n        ],\n        KeyboardEvents: ['keydown']\n    };\n    const EVENT_MAP_INV = {};\n    common.each(EVENT_MAP, function (v, k) {\n        common.each(v, function (e) {\n            EVENT_MAP_INV[e] = k;\n        });\n    });\n    const CSS_VALUE_PIXELS = /(\\d+(\\.\\d+)?)px/;\n    function cssValueToPixels(val) {\n        if (val === '0' || common.isUndefined(val)) {\n            return 0;\n        }\n        const match = val.match(CSS_VALUE_PIXELS);\n        if (!common.isNull(match)) {\n            return parseFloat(match[1]);\n        }\n        return 0;\n    }\n    const dom = {\n        makeSelectable: noder.selectable,\n\n        makeFullscreen: geom.fullCover,\n\n        fakeEvent: function (elem, eventType, pars, aux) {\n            const params = pars || {};\n            const className = EVENT_MAP_INV[eventType];\n            if (!className) {\n                throw new Error('Event type ' + eventType + ' not supported.');\n            }\n            const evt = document.createEvent(className);\n            switch (className) {\n            case 'MouseEvents': {\n                    const clientX = params.x || params.clientX || 0;\n                    const clientY = params.y || params.clientY || 0;\n                    evt.initMouseEvent(eventType, params.bubbles || false, params.cancelable || true, window, params.clickCount || 1, 0, 0, clientX, clientY, false, false, false, false, 0, null);\n                    break;\n                }\n            case 'KeyboardEvents': {\n                    const init = evt.initKeyboardEvent || evt.initKeyEvent;\n                    common.defaults(params, {\n                        cancelable: true,\n                        ctrlKey: false,\n                        altKey: false,\n                        shiftKey: false,\n                        metaKey: false,\n                        keyCode: undefined,\n                        charCode: undefined\n                    });\n                    init(eventType, params.bubbles || false, params.cancelable, window, params.ctrlKey, params.altKey, params.shiftKey, params.metaKey, params.keyCode, params.charCode);\n                    break;\n                }\n            default: {\n                    evt.initEvent(eventType, params.bubbles || false, params.cancelable || true);\n                    break;\n                }\n            }\n            common.defaults(evt, aux);\n            elem.dispatchEvent(evt);\n        },\n\n        bind: eventer.on,\n        unbind: eventer.off,\n\n        addClass: styler.addClass,\n\n        removeClass: styler.removeClass,\n\n        hasClass: styler.hasClass,\n\n        getWidth: geom.width,\n\n        getHeight: geom.height,\n\n        getOffset: geom.pagePosition,\n\n        isActive: noder.isActive\n    };\n    return dom;\n});\ndefine('skylark-datgui/controllers/BooleanController',[\n    './Controller',\n    '../dom/dom'\n], function (Controller, dom) {\n    'use strict';\n    class BooleanController extends Controller {\n        constructor(object, property) {\n            super(object, property);\n            const _this = this;\n            this.__prev = this.getValue();\n            this.__checkbox = document.createElement('input');\n            this.__checkbox.setAttribute('type', 'checkbox');\n            function onChange() {\n                _this.setValue(!_this.__prev);\n            }\n            dom.bind(this.__checkbox, 'change', onChange, false);\n            this.domElement.appendChild(this.__checkbox);\n            this.updateDisplay();\n        }\n        setValue(v) {\n            const toReturn = super.setValue(v);\n            if (this.__onFinishChange) {\n                this.__onFinishChange.call(this, this.getValue());\n            }\n            this.__prev = this.getValue();\n            return toReturn;\n        }\n        updateDisplay() {\n            if (this.getValue() === true) {\n                this.__checkbox.setAttribute('checked', 'checked');\n                this.__checkbox.checked = true;\n                this.__prev = true;\n            } else {\n                this.__checkbox.checked = false;\n                this.__prev = false;\n            }\n            return super.updateDisplay();\n        }\n    }\n    return BooleanController;\n});\ndefine('skylark-datgui/controllers/OptionController',[\n    './Controller',\n    '../dom/dom',\n    '../utils/common'\n], function (Controller, dom, common) {\n    'use strict';\n    class OptionController extends Controller {\n        constructor(object, property, opts) {\n            super(object, property);\n            let options = opts;\n            const _this = this;\n            this.__select = document.createElement('select');\n            if (common.isArray(options)) {\n                const map = {};\n                common.each(options, function (element) {\n                    map[element] = element;\n                });\n                options = map;\n            }\n            common.each(options, function (value, key) {\n                const opt = document.createElement('option');\n                opt.innerHTML = key;\n                opt.setAttribute('value', value);\n                _this.__select.appendChild(opt);\n            });\n            this.updateDisplay();\n            dom.bind(this.__select, 'change', function () {\n                const desiredValue = this.options[this.selectedIndex].value;\n                _this.setValue(desiredValue);\n            });\n            this.domElement.appendChild(this.__select);\n        }\n        setValue(v) {\n            const toReturn = super.setValue(v);\n            if (this.__onFinishChange) {\n                this.__onFinishChange.call(this, this.getValue());\n            }\n            return toReturn;\n        }\n        updateDisplay() {\n            if (dom.isActive(this.__select))\n                return this;\n            this.__select.value = this.getValue();\n            return super.updateDisplay();\n        }\n    }\n    return OptionController;\n});\ndefine('skylark-datgui/controllers/StringController',[\n    './Controller',\n    '../dom/dom'\n], function (Controller, dom) {\n    'use strict';\n    class StringController extends Controller {\n        constructor(object, property) {\n            super(object, property);\n            const _this = this;\n            function onChange() {\n                _this.setValue(_this.__input.value);\n            }\n            function onBlur() {\n                if (_this.__onFinishChange) {\n                    _this.__onFinishChange.call(_this, _this.getValue());\n                }\n            }\n            this.__input = document.createElement('input');\n            this.__input.setAttribute('type', 'text');\n            dom.bind(this.__input, 'keyup', onChange);\n            dom.bind(this.__input, 'change', onChange);\n            dom.bind(this.__input, 'blur', onBlur);\n            dom.bind(this.__input, 'keydown', function (e) {\n                if (e.keyCode === 13) {\n                    this.blur();\n                }\n            });\n            this.updateDisplay();\n            this.domElement.appendChild(this.__input);\n        }\n        updateDisplay() {\n            if (!dom.isActive(this.__input)) {\n                this.__input.value = this.getValue();\n            }\n            return super.updateDisplay();\n        }\n    }\n    return StringController;\n});\ndefine('skylark-datgui/controllers/NumberController',[\n    './Controller',\n    '../utils/common'\n], function (Controller, common) {\n    'use strict';\n    function numDecimals(x) {\n        const _x = x.toString();\n        if (_x.indexOf('.') > -1) {\n            return _x.length - _x.indexOf('.') - 1;\n        }\n        return 0;\n    }\n    class NumberController extends Controller {\n        constructor(object, property, params) {\n            super(object, property);\n            const _params = params || {};\n            this.__min = _params.min;\n            this.__max = _params.max;\n            this.__step = _params.step;\n            if (common.isUndefined(this.__step)) {\n                if (this.initialValue === 0) {\n                    this.__impliedStep = 1;\n                } else {\n                    this.__impliedStep = Math.pow(10, Math.floor(Math.log(Math.abs(this.initialValue)) / Math.LN10)) / 10;\n                }\n            } else {\n                this.__impliedStep = this.__step;\n            }\n            this.__precision = numDecimals(this.__impliedStep);\n        }\n        setValue(v) {\n            let _v = v;\n            if (this.__min !== undefined && _v < this.__min) {\n                _v = this.__min;\n            } else if (this.__max !== undefined && _v > this.__max) {\n                _v = this.__max;\n            }\n            if (this.__step !== undefined && _v % this.__step !== 0) {\n                _v = Math.round(_v / this.__step) * this.__step;\n            }\n            return super.setValue(_v);\n        }\n        min(minValue) {\n            this.__min = minValue;\n            return this;\n        }\n        max(maxValue) {\n            this.__max = maxValue;\n            return this;\n        }\n        step(stepValue) {\n            this.__step = stepValue;\n            this.__impliedStep = stepValue;\n            this.__precision = numDecimals(stepValue);\n            return this;\n        }\n    }\n    return NumberController;\n});\ndefine('skylark-datgui/controllers/NumberControllerBox',[\n    './NumberController',\n    '../dom/dom',\n    '../utils/common'\n], function (NumberController, dom, common) {\n    'use strict';\n    function roundToDecimal(value, decimals) {\n        const tenTo = Math.pow(10, decimals);\n        return Math.round(value * tenTo) / tenTo;\n    }\n    class NumberControllerBox extends NumberController {\n        constructor(object, property, params) {\n            super(object, property, params);\n            this.__truncationSuspended = false;\n            const _this = this;\n            let prevY;\n            function onChange() {\n                const attempted = parseFloat(_this.__input.value);\n                if (!common.isNaN(attempted)) {\n                    _this.setValue(attempted);\n                }\n            }\n            function onFinish() {\n                if (_this.__onFinishChange) {\n                    _this.__onFinishChange.call(_this, _this.getValue());\n                }\n            }\n            function onBlur() {\n                onFinish();\n            }\n            function onMouseDrag(e) {\n                const diff = prevY - e.clientY;\n                _this.setValue(_this.getValue() + diff * _this.__impliedStep);\n                prevY = e.clientY;\n            }\n            function onMouseUp() {\n                dom.unbind(window, 'mousemove', onMouseDrag);\n                dom.unbind(window, 'mouseup', onMouseUp);\n                onFinish();\n            }\n            function onMouseDown(e) {\n                dom.bind(window, 'mousemove', onMouseDrag);\n                dom.bind(window, 'mouseup', onMouseUp);\n                prevY = e.clientY;\n            }\n            this.__input = document.createElement('input');\n            this.__input.setAttribute('type', 'text');\n            dom.bind(this.__input, 'change', onChange);\n            dom.bind(this.__input, 'blur', onBlur);\n            dom.bind(this.__input, 'mousedown', onMouseDown);\n            dom.bind(this.__input, 'keydown', function (e) {\n                if (e.keyCode === 13) {\n                    _this.__truncationSuspended = true;\n                    this.blur();\n                    _this.__truncationSuspended = false;\n                    onFinish();\n                }\n            });\n            this.updateDisplay();\n            this.domElement.appendChild(this.__input);\n        }\n        updateDisplay() {\n            this.__input.value = this.__truncationSuspended ? this.getValue() : roundToDecimal(this.getValue(), this.__precision);\n            return super.updateDisplay();\n        }\n    }\n    return NumberControllerBox;\n});\ndefine('skylark-datgui/controllers/NumberControllerSlider',[\n    './NumberController',\n    '../dom/dom'\n], function (NumberController, dom) {\n    'use strict';\n    function map(v, i1, i2, o1, o2) {\n        return o1 + (o2 - o1) * ((v - i1) / (i2 - i1));\n    }\n    class NumberControllerSlider extends NumberController {\n        constructor(object, property, min, max, step) {\n            super(object, property, {\n                min: min,\n                max: max,\n                step: step\n            });\n            const _this = this;\n            this.__background = document.createElement('div');\n            this.__foreground = document.createElement('div');\n            dom.bind(this.__background, 'mousedown', onMouseDown);\n            dom.bind(this.__background, 'touchstart', onTouchStart);\n            dom.addClass(this.__background, 'slider');\n            dom.addClass(this.__foreground, 'slider-fg');\n            function onMouseDown(e) {\n                document.activeElement.blur();\n                dom.bind(window, 'mousemove', onMouseDrag);\n                dom.bind(window, 'mouseup', onMouseUp);\n                onMouseDrag(e);\n            }\n            function onMouseDrag(e) {\n                e.preventDefault();\n                const bgRect = _this.__background.getBoundingClientRect();\n                _this.setValue(map(e.clientX, bgRect.left, bgRect.right, _this.__min, _this.__max));\n                return false;\n            }\n            function onMouseUp() {\n                dom.unbind(window, 'mousemove', onMouseDrag);\n                dom.unbind(window, 'mouseup', onMouseUp);\n                if (_this.__onFinishChange) {\n                    _this.__onFinishChange.call(_this, _this.getValue());\n                }\n            }\n            function onTouchStart(e) {\n                if (e.touches.length !== 1) {\n                    return;\n                }\n                dom.bind(window, 'touchmove', onTouchMove);\n                dom.bind(window, 'touchend', onTouchEnd);\n                onTouchMove(e);\n            }\n            function onTouchMove(e) {\n                const clientX = e.touches[0].clientX;\n                const bgRect = _this.__background.getBoundingClientRect();\n                _this.setValue(map(clientX, bgRect.left, bgRect.right, _this.__min, _this.__max));\n            }\n            function onTouchEnd() {\n                dom.unbind(window, 'touchmove', onTouchMove);\n                dom.unbind(window, 'touchend', onTouchEnd);\n                if (_this.__onFinishChange) {\n                    _this.__onFinishChange.call(_this, _this.getValue());\n                }\n            }\n            this.updateDisplay();\n            this.__background.appendChild(this.__foreground);\n            this.domElement.appendChild(this.__background);\n        }\n        updateDisplay() {\n            const pct = (this.getValue() - this.__min) / (this.__max - this.__min);\n            this.__foreground.style.width = pct * 100 + '%';\n            return super.updateDisplay();\n        }\n    }\n    return NumberControllerSlider;\n});\ndefine('skylark-datgui/controllers/FunctionController',[\n    './Controller',\n    '../dom/dom'\n], function (Controller, dom) {\n    'use strict';\n    class FunctionController extends Controller {\n        constructor(object, property, text) {\n            super(object, property);\n            const _this = this;\n            this.__button = document.createElement('div');\n            this.__button.innerHTML = text === undefined ? 'Fire' : text;\n            dom.bind(this.__button, 'click', function (e) {\n                e.preventDefault();\n                _this.fire();\n                return false;\n            });\n            dom.addClass(this.__button, 'button');\n            this.domElement.appendChild(this.__button);\n        }\n        fire() {\n            if (this.__onChange) {\n                this.__onChange.call(this);\n            }\n            this.getValue().call(this.object);\n            if (this.__onFinishChange) {\n                this.__onFinishChange.call(this, this.getValue());\n            }\n        }\n    }\n    return FunctionController;\n});\ndefine('skylark-datgui/controllers/ColorController',[\n    './Controller',\n    '../dom/dom',\n    '../color/Color',\n    '../color/interpret',\n    '../utils/common'\n], function (Controller, dom, Color, interpret, common) {\n    'use strict';\n    class ColorController extends Controller {\n        constructor(object, property) {\n            super(object, property);\n            this.__color = new Color(this.getValue());\n            this.__temp = new Color(0);\n            const _this = this;\n            this.domElement = document.createElement('div');\n            dom.makeSelectable(this.domElement, false);\n            this.__selector = document.createElement('div');\n            this.__selector.className = 'selector';\n            this.__saturation_field = document.createElement('div');\n            this.__saturation_field.className = 'saturation-field';\n            this.__field_knob = document.createElement('div');\n            this.__field_knob.className = 'field-knob';\n            this.__field_knob_border = '2px solid ';\n            this.__hue_knob = document.createElement('div');\n            this.__hue_knob.className = 'hue-knob';\n            this.__hue_field = document.createElement('div');\n            this.__hue_field.className = 'hue-field';\n            this.__input = document.createElement('input');\n            this.__input.type = 'text';\n            this.__input_textShadow = '0 1px 1px ';\n            dom.bind(this.__input, 'keydown', function (e) {\n                if (e.keyCode === 13) {\n                    onBlur.call(this);\n                }\n            });\n            dom.bind(this.__input, 'blur', onBlur);\n            dom.bind(this.__selector, 'mousedown', function () {\n                dom.addClass(this, 'drag').bind(window, 'mouseup', function () {\n                    dom.removeClass(_this.__selector, 'drag');\n                });\n            });\n            dom.bind(this.__selector, 'touchstart', function () {\n                dom.addClass(this, 'drag').bind(window, 'touchend', function () {\n                    dom.removeClass(_this.__selector, 'drag');\n                });\n            });\n            const valueField = document.createElement('div');\n            common.extend(this.__selector.style, {\n                width: '122px',\n                height: '102px',\n                padding: '3px',\n                backgroundColor: '#222',\n                boxShadow: '0px 1px 3px rgba(0,0,0,0.3)'\n            });\n            common.extend(this.__field_knob.style, {\n                position: 'absolute',\n                width: '12px',\n                height: '12px',\n                border: this.__field_knob_border + (this.__color.v < 0.5 ? '#fff' : '#000'),\n                boxShadow: '0px 1px 3px rgba(0,0,0,0.5)',\n                borderRadius: '12px',\n                zIndex: 1\n            });\n            common.extend(this.__hue_knob.style, {\n                position: 'absolute',\n                width: '15px',\n                height: '2px',\n                borderRight: '4px solid #fff',\n                zIndex: 1\n            });\n            common.extend(this.__saturation_field.style, {\n                width: '100px',\n                height: '100px',\n                border: '1px solid #555',\n                marginRight: '3px',\n                display: 'inline-block',\n                cursor: 'pointer'\n            });\n            common.extend(valueField.style, {\n                width: '100%',\n                height: '100%',\n                background: 'none'\n            });\n            linearGradient(valueField, 'top', 'rgba(0,0,0,0)', '#000');\n            common.extend(this.__hue_field.style, {\n                width: '15px',\n                height: '100px',\n                border: '1px solid #555',\n                cursor: 'ns-resize',\n                position: 'absolute',\n                top: '3px',\n                right: '3px'\n            });\n            hueGradient(this.__hue_field);\n            common.extend(this.__input.style, {\n                outline: 'none',\n                textAlign: 'center',\n                color: '#fff',\n                border: 0,\n                fontWeight: 'bold',\n                textShadow: this.__input_textShadow + 'rgba(0,0,0,0.7)'\n            });\n            dom.bind(this.__saturation_field, 'mousedown', fieldDown);\n            dom.bind(this.__saturation_field, 'touchstart', fieldDown);\n            dom.bind(this.__field_knob, 'mousedown', fieldDown);\n            dom.bind(this.__field_knob, 'touchstart', fieldDown);\n            dom.bind(this.__hue_field, 'mousedown', fieldDownH);\n            dom.bind(this.__hue_field, 'touchstart', fieldDownH);\n            function fieldDown(e) {\n                setSV(e);\n                dom.bind(window, 'mousemove', setSV);\n                dom.bind(window, 'touchmove', setSV);\n                dom.bind(window, 'mouseup', fieldUpSV);\n                dom.bind(window, 'touchend', fieldUpSV);\n            }\n            function fieldDownH(e) {\n                setH(e);\n                dom.bind(window, 'mousemove', setH);\n                dom.bind(window, 'touchmove', setH);\n                dom.bind(window, 'mouseup', fieldUpH);\n                dom.bind(window, 'touchend', fieldUpH);\n            }\n            function fieldUpSV() {\n                dom.unbind(window, 'mousemove', setSV);\n                dom.unbind(window, 'touchmove', setSV);\n                dom.unbind(window, 'mouseup', fieldUpSV);\n                dom.unbind(window, 'touchend', fieldUpSV);\n                onFinish();\n            }\n            function fieldUpH() {\n                dom.unbind(window, 'mousemove', setH);\n                dom.unbind(window, 'touchmove', setH);\n                dom.unbind(window, 'mouseup', fieldUpH);\n                dom.unbind(window, 'touchend', fieldUpH);\n                onFinish();\n            }\n            function onBlur() {\n                const i = interpret(this.value);\n                if (i !== false) {\n                    _this.__color.__state = i;\n                    _this.setValue(_this.__color.toOriginal());\n                } else {\n                    this.value = _this.__color.toString();\n                }\n            }\n            function onFinish() {\n                if (_this.__onFinishChange) {\n                    _this.__onFinishChange.call(_this, _this.__color.toOriginal());\n                }\n            }\n            this.__saturation_field.appendChild(valueField);\n            this.__selector.appendChild(this.__field_knob);\n            this.__selector.appendChild(this.__saturation_field);\n            this.__selector.appendChild(this.__hue_field);\n            this.__hue_field.appendChild(this.__hue_knob);\n            this.domElement.appendChild(this.__input);\n            this.domElement.appendChild(this.__selector);\n            this.updateDisplay();\n            function setSV(e) {\n                if (e.type.indexOf('touch') === -1) {\n                    e.preventDefault();\n                }\n                const fieldRect = _this.__saturation_field.getBoundingClientRect();\n                const {clientX, clientY} = e.touches && e.touches[0] || e;\n                let s = (clientX - fieldRect.left) / (fieldRect.right - fieldRect.left);\n                let v = 1 - (clientY - fieldRect.top) / (fieldRect.bottom - fieldRect.top);\n                if (v > 1) {\n                    v = 1;\n                } else if (v < 0) {\n                    v = 0;\n                }\n                if (s > 1) {\n                    s = 1;\n                } else if (s < 0) {\n                    s = 0;\n                }\n                _this.__color.v = v;\n                _this.__color.s = s;\n                _this.setValue(_this.__color.toOriginal());\n                return false;\n            }\n            function setH(e) {\n                if (e.type.indexOf('touch') === -1) {\n                    e.preventDefault();\n                }\n                const fieldRect = _this.__hue_field.getBoundingClientRect();\n                const {clientY} = e.touches && e.touches[0] || e;\n                let h = 1 - (clientY - fieldRect.top) / (fieldRect.bottom - fieldRect.top);\n                if (h > 1) {\n                    h = 1;\n                } else if (h < 0) {\n                    h = 0;\n                }\n                _this.__color.h = h * 360;\n                _this.setValue(_this.__color.toOriginal());\n                return false;\n            }\n        }\n        updateDisplay() {\n            const i = interpret(this.getValue());\n            if (i !== false) {\n                let mismatch = false;\n                common.each(Color.COMPONENTS, function (component) {\n                    if (!common.isUndefined(i[component]) && !common.isUndefined(this.__color.__state[component]) && i[component] !== this.__color.__state[component]) {\n                        mismatch = true;\n                        return {};\n                    }\n                }, this);\n                if (mismatch) {\n                    common.extend(this.__color.__state, i);\n                }\n            }\n            common.extend(this.__temp.__state, this.__color.__state);\n            this.__temp.a = 1;\n            const flip = this.__color.v < 0.5 || this.__color.s > 0.5 ? 255 : 0;\n            const _flip = 255 - flip;\n            common.extend(this.__field_knob.style, {\n                marginLeft: 100 * this.__color.s - 7 + 'px',\n                marginTop: 100 * (1 - this.__color.v) - 7 + 'px',\n                backgroundColor: this.__temp.toHexString(),\n                border: this.__field_knob_border + 'rgb(' + flip + ',' + flip + ',' + flip + ')'\n            });\n            this.__hue_knob.style.marginTop = (1 - this.__color.h / 360) * 100 + 'px';\n            this.__temp.s = 1;\n            this.__temp.v = 1;\n            linearGradient(this.__saturation_field, 'left', '#fff', this.__temp.toHexString());\n            this.__input.value = this.__color.toString();\n            common.extend(this.__input.style, {\n                backgroundColor: this.__color.toHexString(),\n                color: 'rgb(' + flip + ',' + flip + ',' + flip + ')',\n                textShadow: this.__input_textShadow + 'rgba(' + _flip + ',' + _flip + ',' + _flip + ',.7)'\n            });\n        }\n    }\n    const vendors = [\n        '-moz-',\n        '-o-',\n        '-webkit-',\n        '-ms-',\n        ''\n    ];\n    function linearGradient(elem, x, a, b) {\n        elem.style.background = '';\n        common.each(vendors, function (vendor) {\n            elem.style.cssText += 'background: ' + vendor + 'linear-gradient(' + x + ', ' + a + ' 0%, ' + b + ' 100%); ';\n        });\n    }\n    function hueGradient(elem) {\n        elem.style.background = '';\n        elem.style.cssText += 'background: -moz-linear-gradient(top,  #ff0000 0%, #ff00ff 17%, #0000ff 34%, #00ffff 50%, #00ff00 67%, #ffff00 84%, #ff0000 100%);';\n        elem.style.cssText += 'background: -webkit-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n        elem.style.cssText += 'background: -o-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n        elem.style.cssText += 'background: -ms-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n        elem.style.cssText += 'background: linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n    }\n    return ColorController;\n});\ndefine('skylark-datgui/utils/css',[],function () {\n    'use strict';\n    const css = {\n        load: function (url, indoc) {\n            const doc = indoc || document;\n            const link = doc.createElement('link');\n            link.type = 'text/css';\n            link.rel = 'stylesheet';\n            link.href = url;\n            doc.getElementsByTagName('head')[0].appendChild(link);\n        },\n        inject: function (cssContent, indoc) {\n            const doc = indoc || document;\n            const injected = document.createElement('style');\n            injected.type = 'text/css';\n            injected.innerHTML = cssContent;\n            const head = doc.getElementsByTagName('head')[0];\n            try {\n                head.appendChild(injected);\n            } catch (e) {\n            }\n        }\n    };\n    return css;\n});\ndefine('skylark-datgui/gui/saveDialogue.html',[],function () {\n    'use strict';\n    const saveDialogContents = `<div id=\"dg-save\" class=\"dg dialogue\">\n\n  Here's the new load parameter for your <code>GUI</code>'s constructor:\n\n  <textarea id=\"dg-new-constructor\"></textarea>\n\n  <div id=\"dg-save-locally\">\n\n    <input id=\"dg-local-storage\" type=\"checkbox\"/> Automatically save\n    values to <code>localStorage</code> on exit.\n\n    <div id=\"dg-local-explain\">The values saved to <code>localStorage</code> will\n      override those passed to <code>dat.GUI</code>'s constructor. This makes it\n      easier to work incrementally, but <code>localStorage</code> is fragile,\n      and your friends may not see the same values you do.\n\n    </div>\n\n  </div>\n\n</div>`;\n    return saveDialogContents;\n});\ndefine('skylark-datgui/controllers/ControllerFactory',[\n    './OptionController',\n    './NumberControllerBox',\n    './NumberControllerSlider',\n    './StringController',\n    './FunctionController',\n    './BooleanController',\n    '../utils/common'\n], function (OptionController, NumberControllerBox, NumberControllerSlider, StringController, FunctionController, BooleanController, common) {\n    'use strict';\n    const ControllerFactory = function (object, property) {\n        const initialValue = object[property];\n        if (common.isArray(arguments[2]) || common.isObject(arguments[2])) {\n            return new OptionController(object, property, arguments[2]);\n        }\n        if (common.isNumber(initialValue)) {\n            if (common.isNumber(arguments[2]) && common.isNumber(arguments[3])) {\n                if (common.isNumber(arguments[4])) {\n                    return new NumberControllerSlider(object, property, arguments[2], arguments[3], arguments[4]);\n                }\n                return new NumberControllerSlider(object, property, arguments[2], arguments[3]);\n            }\n            if (common.isNumber(arguments[4])) {\n                return new NumberControllerBox(object, property, {\n                    min: arguments[2],\n                    max: arguments[3],\n                    step: arguments[4]\n                });\n            }\n            return new NumberControllerBox(object, property, {\n                min: arguments[2],\n                max: arguments[3]\n            });\n        }\n        if (common.isString(initialValue)) {\n            return new StringController(object, property);\n        }\n        if (common.isFunction(initialValue)) {\n            return new FunctionController(object, property, '');\n        }\n        if (common.isBoolean(initialValue)) {\n            return new BooleanController(object, property);\n        }\n        return null;\n    };\n    return ControllerFactory;\n});\ndefine('skylark-datgui/utils/requestAnimationFrame',[],function () {\n    'use strict';\n    function requestAnimationFrame(callback) {\n        setTimeout(callback, 1000 / 60);\n    }\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || requestAnimationFrame;\n});\ndefine('skylark-datgui/dom/CenteredDiv',[\n    '../dom/dom',\n    '../utils/common'\n], function (dom, common) {\n    'use strict';\n    class CenteredDiv {\n        constructor() {\n            this.backgroundElement = document.createElement('div');\n            common.extend(this.backgroundElement.style, {\n                backgroundColor: 'rgba(0,0,0,0.8)',\n                top: 0,\n                left: 0,\n                display: 'none',\n                zIndex: '1000',\n                opacity: 0,\n                WebkitTransition: 'opacity 0.2s linear',\n                transition: 'opacity 0.2s linear'\n            });\n            dom.makeFullscreen(this.backgroundElement);\n            this.backgroundElement.style.position = 'fixed';\n            this.domElement = document.createElement('div');\n            common.extend(this.domElement.style, {\n                position: 'fixed',\n                display: 'none',\n                zIndex: '1001',\n                opacity: 0,\n                WebkitTransition: '-webkit-transform 0.2s ease-out, opacity 0.2s linear',\n                transition: 'transform 0.2s ease-out, opacity 0.2s linear'\n            });\n            document.body.appendChild(this.backgroundElement);\n            document.body.appendChild(this.domElement);\n            const _this = this;\n            dom.bind(this.backgroundElement, 'click', function () {\n                _this.hide();\n            });\n        }\n        show() {\n            const _this = this;\n            this.backgroundElement.style.display = 'block';\n            this.domElement.style.display = 'block';\n            this.domElement.style.opacity = 0;\n            this.domElement.style.webkitTransform = 'scale(1.1)';\n            this.layout();\n            common.defer(function () {\n                _this.backgroundElement.style.opacity = 1;\n                _this.domElement.style.opacity = 1;\n                _this.domElement.style.webkitTransform = 'scale(1)';\n            });\n        }\n        hide() {\n            const _this = this;\n            const hide = function () {\n                _this.domElement.style.display = 'none';\n                _this.backgroundElement.style.display = 'none';\n                dom.unbind(_this.domElement, 'webkitTransitionEnd', hide);\n                dom.unbind(_this.domElement, 'transitionend', hide);\n                dom.unbind(_this.domElement, 'oTransitionEnd', hide);\n            };\n            dom.bind(this.domElement, 'webkitTransitionEnd', hide);\n            dom.bind(this.domElement, 'transitionend', hide);\n            dom.bind(this.domElement, 'oTransitionEnd', hide);\n            this.backgroundElement.style.opacity = 0;\n            this.domElement.style.opacity = 0;\n            this.domElement.style.webkitTransform = 'scale(1.1)';\n        }\n        layout() {\n            this.domElement.style.left = window.innerWidth / 2 - dom.getWidth(this.domElement) / 2 + 'px';\n            this.domElement.style.top = window.innerHeight / 2 - dom.getHeight(this.domElement) / 2 + 'px';\n        }\n    }\n    return CenteredDiv;\n});\ndefine('skylark-datgui/gui/GUI',[\n    '../utils/css',\n    './saveDialogue.html',\n    '../controllers/ControllerFactory',\n    '../controllers/Controller',\n    '../controllers/BooleanController',\n    '../controllers/FunctionController',\n    '../controllers/NumberControllerBox',\n    '../controllers/NumberControllerSlider',\n    '../controllers/ColorController',\n    '../utils/requestAnimationFrame',\n    '../dom/CenteredDiv',\n    '../dom/dom',\n    '../utils/common'\n], function (css, saveDialogueContents, ControllerFactory, Controller, BooleanController, FunctionController, NumberControllerBox, NumberControllerSlider, ColorController, requestAnimationFrame, CenteredDiv, dom, common, styleSheet) {\n    'use strict';\n\n    //css.inject(styleSheet);\n\n    const CSS_NAMESPACE = 'dg';\n    const HIDE_KEY_CODE = 72;\n    const CLOSE_BUTTON_HEIGHT = 20;\n    const DEFAULT_DEFAULT_PRESET_NAME = 'Default';\n    const SUPPORTS_LOCAL_STORAGE = function () {\n        try {\n            return !!window.localStorage;\n        } catch (e) {\n            return false;\n        }\n    }();\n    let SAVE_DIALOGUE;\n    let autoPlaceVirgin = true;\n    let autoPlaceContainer;\n    let hide = false;\n    const hideableGuis = [];\n    const GUI = function (pars) {\n        const _this = this;\n        let params = pars || {};\n        this.domElement = document.createElement('div');\n        this.__ul = document.createElement('ul');\n        this.domElement.appendChild(this.__ul);\n        dom.addClass(this.domElement, CSS_NAMESPACE);\n        this.__folders = {};\n        this.__controllers = [];\n        this.__rememberedObjects = [];\n        this.__rememberedObjectIndecesToControllers = [];\n        this.__listening = [];\n        params = common.defaults(params, {\n            closeOnTop: false,\n            autoPlace: true,\n            width: GUI.DEFAULT_WIDTH\n        });\n        params = common.defaults(params, {\n            resizable: params.autoPlace,\n            hideable: params.autoPlace\n        });\n        if (!common.isUndefined(params.load)) {\n            if (params.preset) {\n                params.load.preset = params.preset;\n            }\n        } else {\n            params.load = { preset: DEFAULT_DEFAULT_PRESET_NAME };\n        }\n        if (common.isUndefined(params.parent) && params.hideable) {\n            hideableGuis.push(this);\n        }\n        params.resizable = common.isUndefined(params.parent) && params.resizable;\n        if (params.autoPlace && common.isUndefined(params.scrollable)) {\n            params.scrollable = true;\n        }\n        let useLocalStorage = SUPPORTS_LOCAL_STORAGE && localStorage.getItem(getLocalStorageHash(this, 'isLocal')) === 'true';\n        let saveToLocalStorage;\n        let titleRow;\n        Object.defineProperties(this, {\n            parent: {\n                get: function () {\n                    return params.parent;\n                }\n            },\n            scrollable: {\n                get: function () {\n                    return params.scrollable;\n                }\n            },\n            autoPlace: {\n                get: function () {\n                    return params.autoPlace;\n                }\n            },\n            closeOnTop: {\n                get: function () {\n                    return params.closeOnTop;\n                }\n            },\n            preset: {\n                get: function () {\n                    if (_this.parent) {\n                        return _this.getRoot().preset;\n                    }\n                    return params.load.preset;\n                },\n                set: function (v) {\n                    if (_this.parent) {\n                        _this.getRoot().preset = v;\n                    } else {\n                        params.load.preset = v;\n                    }\n                    setPresetSelectIndex(this);\n                    _this.revert();\n                }\n            },\n            width: {\n                get: function () {\n                    return params.width;\n                },\n                set: function (v) {\n                    params.width = v;\n                    setWidth(_this, v);\n                }\n            },\n            name: {\n                get: function () {\n                    return params.name;\n                },\n                set: function (v) {\n                    params.name = v;\n                    if (titleRow) {\n                        titleRow.innerHTML = params.name;\n                    }\n                }\n            },\n            closed: {\n                get: function () {\n                    return params.closed;\n                },\n                set: function (v) {\n                    params.closed = v;\n                    if (params.closed) {\n                        dom.addClass(_this.__ul, GUI.CLASS_CLOSED);\n                    } else {\n                        dom.removeClass(_this.__ul, GUI.CLASS_CLOSED);\n                    }\n                    this.onResize();\n                    if (_this.__closeButton) {\n                        _this.__closeButton.innerHTML = v ? GUI.TEXT_OPEN : GUI.TEXT_CLOSED;\n                    }\n                }\n            },\n            load: {\n                get: function () {\n                    return params.load;\n                }\n            },\n            useLocalStorage: {\n                get: function () {\n                    return useLocalStorage;\n                },\n                set: function (bool) {\n                    if (SUPPORTS_LOCAL_STORAGE) {\n                        useLocalStorage = bool;\n                        if (bool) {\n                            dom.bind(window, 'unload', saveToLocalStorage);\n                        } else {\n                            dom.unbind(window, 'unload', saveToLocalStorage);\n                        }\n                        localStorage.setItem(getLocalStorageHash(_this, 'isLocal'), bool);\n                    }\n                }\n            }\n        });\n        if (common.isUndefined(params.parent)) {\n            this.closed = params.closed || false;\n            dom.addClass(this.domElement, GUI.CLASS_MAIN);\n            dom.makeSelectable(this.domElement, false);\n            if (SUPPORTS_LOCAL_STORAGE) {\n                if (useLocalStorage) {\n                    _this.useLocalStorage = true;\n                    const savedGui = localStorage.getItem(getLocalStorageHash(this, 'gui'));\n                    if (savedGui) {\n                        params.load = JSON.parse(savedGui);\n                    }\n                }\n            }\n            this.__closeButton = document.createElement('div');\n            this.__closeButton.innerHTML = GUI.TEXT_CLOSED;\n            dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BUTTON);\n            if (params.closeOnTop) {\n                dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_TOP);\n                this.domElement.insertBefore(this.__closeButton, this.domElement.childNodes[0]);\n            } else {\n                dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BOTTOM);\n                this.domElement.appendChild(this.__closeButton);\n            }\n            dom.bind(this.__closeButton, 'click', function () {\n                _this.closed = !_this.closed;\n            });\n        } else {\n            if (params.closed === undefined) {\n                params.closed = true;\n            }\n            const titleRowName = document.createTextNode(params.name);\n            dom.addClass(titleRowName, 'controller-name');\n            titleRow = addRow(_this, titleRowName);\n            const onClickTitle = function (e) {\n                e.preventDefault();\n                _this.closed = !_this.closed;\n                return false;\n            };\n            dom.addClass(this.__ul, GUI.CLASS_CLOSED);\n            dom.addClass(titleRow, 'title');\n            dom.bind(titleRow, 'click', onClickTitle);\n            if (!params.closed) {\n                this.closed = false;\n            }\n        }\n        if (params.autoPlace) {\n            if (common.isUndefined(params.parent)) {\n                if (autoPlaceVirgin) {\n                    autoPlaceContainer = document.createElement('div');\n                    dom.addClass(autoPlaceContainer, CSS_NAMESPACE);\n                    dom.addClass(autoPlaceContainer, GUI.CLASS_AUTO_PLACE_CONTAINER);\n                    document.body.appendChild(autoPlaceContainer);\n                    autoPlaceVirgin = false;\n                }\n                autoPlaceContainer.appendChild(this.domElement);\n                dom.addClass(this.domElement, GUI.CLASS_AUTO_PLACE);\n            }\n            if (!this.parent) {\n                setWidth(_this, params.width);\n            }\n        }\n        this.__resizeHandler = function () {\n            _this.onResizeDebounced();\n        };\n        dom.bind(window, 'resize', this.__resizeHandler);\n        dom.bind(this.__ul, 'webkitTransitionEnd', this.__resizeHandler);\n        dom.bind(this.__ul, 'transitionend', this.__resizeHandler);\n        dom.bind(this.__ul, 'oTransitionEnd', this.__resizeHandler);\n        this.onResize();\n        if (params.resizable) {\n            addResizeHandle(this);\n        }\n        saveToLocalStorage = function () {\n            if (SUPPORTS_LOCAL_STORAGE && localStorage.getItem(getLocalStorageHash(_this, 'isLocal')) === 'true') {\n                localStorage.setItem(getLocalStorageHash(_this, 'gui'), JSON.stringify(_this.getSaveObject()));\n            }\n        };\n        this.saveToLocalStorageIfPossible = saveToLocalStorage;\n        function resetWidth() {\n            const root = _this.getRoot();\n            root.width += 1;\n            common.defer(function () {\n                root.width -= 1;\n            });\n        }\n        if (!params.parent) {\n            resetWidth();\n        }\n    };\n    GUI.toggleHide = function () {\n        hide = !hide;\n        common.each(hideableGuis, function (gui) {\n            gui.domElement.style.display = hide ? 'none' : '';\n        });\n    };\n    GUI.CLASS_AUTO_PLACE = 'a';\n    GUI.CLASS_AUTO_PLACE_CONTAINER = 'ac';\n    GUI.CLASS_MAIN = 'main';\n    GUI.CLASS_CONTROLLER_ROW = 'cr';\n    GUI.CLASS_TOO_TALL = 'taller-than-window';\n    GUI.CLASS_CLOSED = 'closed';\n    GUI.CLASS_CLOSE_BUTTON = 'close-button';\n    GUI.CLASS_CLOSE_TOP = 'close-top';\n    GUI.CLASS_CLOSE_BOTTOM = 'close-bottom';\n    GUI.CLASS_DRAG = 'drag';\n    GUI.DEFAULT_WIDTH = 245;\n    GUI.TEXT_CLOSED = 'Close Controls';\n    GUI.TEXT_OPEN = 'Open Controls';\n    GUI._keydownHandler = function (e) {\n        if (document.activeElement.type !== 'text' && (e.which === HIDE_KEY_CODE || e.keyCode === HIDE_KEY_CODE)) {\n            GUI.toggleHide();\n        }\n    };\n    dom.bind(window, 'keydown', GUI._keydownHandler, false);\n    common.extend(GUI.prototype, {\n        add: function (object, property) {\n            return add(this, object, property, { factoryArgs: Array.prototype.slice.call(arguments, 2) });\n        },\n        addColor: function (object, property) {\n            return add(this, object, property, { color: true });\n        },\n        remove: function (controller) {\n            this.__ul.removeChild(controller.__li);\n            this.__controllers.splice(this.__controllers.indexOf(controller), 1);\n            const _this = this;\n            common.defer(function () {\n                _this.onResize();\n            });\n        },\n        destroy: function () {\n            if (this.parent) {\n                throw new Error('Only the root GUI should be removed with .destroy(). ' + 'For subfolders, use gui.removeFolder(folder) instead.');\n            }\n            if (this.autoPlace) {\n                autoPlaceContainer.removeChild(this.domElement);\n            }\n            const _this = this;\n            common.each(this.__folders, function (subfolder) {\n                _this.removeFolder(subfolder);\n            });\n            dom.unbind(window, 'keydown', GUI._keydownHandler, false);\n            removeListeners(this);\n        },\n        addFolder: function (name) {\n            if (this.__folders[name] !== undefined) {\n                throw new Error('You already have a folder in this GUI by the' + ' name \"' + name + '\"');\n            }\n            const newGuiParams = {\n                name: name,\n                parent: this\n            };\n            newGuiParams.autoPlace = this.autoPlace;\n            if (this.load && this.load.folders && this.load.folders[name]) {\n                newGuiParams.closed = this.load.folders[name].closed;\n                newGuiParams.load = this.load.folders[name];\n            }\n            const gui = new GUI(newGuiParams);\n            this.__folders[name] = gui;\n            const li = addRow(this, gui.domElement);\n            dom.addClass(li, 'folder');\n            return gui;\n        },\n        removeFolder: function (folder) {\n            this.__ul.removeChild(folder.domElement.parentElement);\n            delete this.__folders[folder.name];\n            if (this.load && this.load.folders && this.load.folders[folder.name]) {\n                delete this.load.folders[folder.name];\n            }\n            removeListeners(folder);\n            const _this = this;\n            common.each(folder.__folders, function (subfolder) {\n                folder.removeFolder(subfolder);\n            });\n            common.defer(function () {\n                _this.onResize();\n            });\n        },\n        open: function () {\n            this.closed = false;\n        },\n        close: function () {\n            this.closed = true;\n        },\n        hide: function () {\n            this.domElement.style.display = 'none';\n        },\n        show: function () {\n            this.domElement.style.display = '';\n        },\n        onResize: function () {\n            const root = this.getRoot();\n            if (root.scrollable) {\n                const top = dom.getOffset(root.__ul).top;\n                let h = 0;\n                common.each(root.__ul.childNodes, function (node) {\n                    if (!(root.autoPlace && node === root.__save_row)) {\n                        h += dom.getHeight(node);\n                    }\n                });\n                if (window.innerHeight - top - CLOSE_BUTTON_HEIGHT < h) {\n                    dom.addClass(root.domElement, GUI.CLASS_TOO_TALL);\n                    root.__ul.style.height = window.innerHeight - top - CLOSE_BUTTON_HEIGHT + 'px';\n                } else {\n                    dom.removeClass(root.domElement, GUI.CLASS_TOO_TALL);\n                    root.__ul.style.height = 'auto';\n                }\n            }\n            if (root.__resize_handle) {\n                common.defer(function () {\n                    root.__resize_handle.style.height = root.__ul.offsetHeight + 'px';\n                });\n            }\n            if (root.__closeButton) {\n                root.__closeButton.style.width = root.width + 'px';\n            }\n        },\n        onResizeDebounced: common.debounce(function () {\n            this.onResize();\n        }, 50),\n        remember: function () {\n            if (common.isUndefined(SAVE_DIALOGUE)) {\n                SAVE_DIALOGUE = new CenteredDiv();\n                SAVE_DIALOGUE.domElement.innerHTML = saveDialogueContents;\n            }\n            if (this.parent) {\n                throw new Error('You can only call remember on a top level GUI.');\n            }\n            const _this = this;\n            common.each(Array.prototype.slice.call(arguments), function (object) {\n                if (_this.__rememberedObjects.length === 0) {\n                    addSaveMenu(_this);\n                }\n                if (_this.__rememberedObjects.indexOf(object) === -1) {\n                    _this.__rememberedObjects.push(object);\n                }\n            });\n            if (this.autoPlace) {\n                setWidth(this, this.width);\n            }\n        },\n        getRoot: function () {\n            let gui = this;\n            while (gui.parent) {\n                gui = gui.parent;\n            }\n            return gui;\n        },\n        getSaveObject: function () {\n            const toReturn = this.load;\n            toReturn.closed = this.closed;\n            if (this.__rememberedObjects.length > 0) {\n                toReturn.preset = this.preset;\n                if (!toReturn.remembered) {\n                    toReturn.remembered = {};\n                }\n                toReturn.remembered[this.preset] = getCurrentPreset(this);\n            }\n            toReturn.folders = {};\n            common.each(this.__folders, function (element, key) {\n                toReturn.folders[key] = element.getSaveObject();\n            });\n            return toReturn;\n        },\n        save: function () {\n            if (!this.load.remembered) {\n                this.load.remembered = {};\n            }\n            this.load.remembered[this.preset] = getCurrentPreset(this);\n            markPresetModified(this, false);\n            this.saveToLocalStorageIfPossible();\n        },\n        saveAs: function (presetName) {\n            if (!this.load.remembered) {\n                this.load.remembered = {};\n                this.load.remembered[DEFAULT_DEFAULT_PRESET_NAME] = getCurrentPreset(this, true);\n            }\n            this.load.remembered[presetName] = getCurrentPreset(this);\n            this.preset = presetName;\n            addPresetOption(this, presetName, true);\n            this.saveToLocalStorageIfPossible();\n        },\n        revert: function (gui) {\n            common.each(this.__controllers, function (controller) {\n                if (!this.getRoot().load.remembered) {\n                    controller.setValue(controller.initialValue);\n                } else {\n                    recallSavedValue(gui || this.getRoot(), controller);\n                }\n                if (controller.__onFinishChange) {\n                    controller.__onFinishChange.call(controller, controller.getValue());\n                }\n            }, this);\n            common.each(this.__folders, function (folder) {\n                folder.revert(folder);\n            });\n            if (!gui) {\n                markPresetModified(this.getRoot(), false);\n            }\n        },\n        listen: function (controller) {\n            const init = this.__listening.length === 0;\n            this.__listening.push(controller);\n            if (init) {\n                updateDisplays(this.__listening);\n            }\n        },\n        updateDisplay: function () {\n            common.each(this.__controllers, function (controller) {\n                controller.updateDisplay();\n            });\n            common.each(this.__folders, function (folder) {\n                folder.updateDisplay();\n            });\n        }\n    });\n    function addRow(gui, newDom, liBefore) {\n        const li = document.createElement('li');\n        if (newDom) {\n            li.appendChild(newDom);\n        }\n        if (liBefore) {\n            gui.__ul.insertBefore(li, liBefore);\n        } else {\n            gui.__ul.appendChild(li);\n        }\n        gui.onResize();\n        return li;\n    }\n    function removeListeners(gui) {\n        dom.unbind(window, 'resize', gui.__resizeHandler);\n        if (gui.saveToLocalStorageIfPossible) {\n            dom.unbind(window, 'unload', gui.saveToLocalStorageIfPossible);\n        }\n    }\n    function markPresetModified(gui, modified) {\n        const opt = gui.__preset_select[gui.__preset_select.selectedIndex];\n        if (modified) {\n            opt.innerHTML = opt.value + '*';\n        } else {\n            opt.innerHTML = opt.value;\n        }\n    }\n    function augmentController(gui, li, controller) {\n        controller.__li = li;\n        controller.__gui = gui;\n        common.extend(controller, {\n            options: function (options) {\n                if (arguments.length > 1) {\n                    const nextSibling = controller.__li.nextElementSibling;\n                    controller.remove();\n                    return add(gui, controller.object, controller.property, {\n                        before: nextSibling,\n                        factoryArgs: [common.toArray(arguments)]\n                    });\n                }\n                if (common.isArray(options) || common.isObject(options)) {\n                    const nextSibling = controller.__li.nextElementSibling;\n                    controller.remove();\n                    return add(gui, controller.object, controller.property, {\n                        before: nextSibling,\n                        factoryArgs: [options]\n                    });\n                }\n            },\n            name: function (name) {\n                controller.__li.firstElementChild.firstElementChild.innerHTML = name;\n                return controller;\n            },\n            listen: function () {\n                controller.__gui.listen(controller);\n                return controller;\n            },\n            remove: function () {\n                controller.__gui.remove(controller);\n                return controller;\n            }\n        });\n        if (controller instanceof NumberControllerSlider) {\n            const box = new NumberControllerBox(controller.object, controller.property, {\n                min: controller.__min,\n                max: controller.__max,\n                step: controller.__step\n            });\n            common.each([\n                'updateDisplay',\n                'onChange',\n                'onFinishChange',\n                'step',\n                'min',\n                'max'\n            ], function (method) {\n                const pc = controller[method];\n                const pb = box[method];\n                controller[method] = box[method] = function () {\n                    const args = Array.prototype.slice.call(arguments);\n                    pb.apply(box, args);\n                    return pc.apply(controller, args);\n                };\n            });\n            dom.addClass(li, 'has-slider');\n            controller.domElement.insertBefore(box.domElement, controller.domElement.firstElementChild);\n        } else if (controller instanceof NumberControllerBox) {\n            const r = function (returned) {\n                if (common.isNumber(controller.__min) && common.isNumber(controller.__max)) {\n                    const oldName = controller.__li.firstElementChild.firstElementChild.innerHTML;\n                    const wasListening = controller.__gui.__listening.indexOf(controller) > -1;\n                    controller.remove();\n                    const newController = add(gui, controller.object, controller.property, {\n                        before: controller.__li.nextElementSibling,\n                        factoryArgs: [\n                            controller.__min,\n                            controller.__max,\n                            controller.__step\n                        ]\n                    });\n                    newController.name(oldName);\n                    if (wasListening)\n                        newController.listen();\n                    return newController;\n                }\n                return returned;\n            };\n            controller.min = common.compose(r, controller.min);\n            controller.max = common.compose(r, controller.max);\n        } else if (controller instanceof BooleanController) {\n            dom.bind(li, 'click', function () {\n                dom.fakeEvent(controller.__checkbox, 'click');\n            });\n            dom.bind(controller.__checkbox, 'click', function (e) {\n                e.stopPropagation();\n            });\n        } else if (controller instanceof FunctionController) {\n            dom.bind(li, 'click', function () {\n                dom.fakeEvent(controller.__button, 'click');\n            });\n            dom.bind(li, 'mouseover', function () {\n                dom.addClass(controller.__button, 'hover');\n            });\n            dom.bind(li, 'mouseout', function () {\n                dom.removeClass(controller.__button, 'hover');\n            });\n        } else if (controller instanceof ColorController) {\n            dom.addClass(li, 'color');\n            controller.updateDisplay = common.compose(function (val) {\n                li.style.borderLeftColor = controller.__color.toString();\n                return val;\n            }, controller.updateDisplay);\n            controller.updateDisplay();\n        }\n        controller.setValue = common.compose(function (val) {\n            if (gui.getRoot().__preset_select && controller.isModified()) {\n                markPresetModified(gui.getRoot(), true);\n            }\n            return val;\n        }, controller.setValue);\n    }\n    function recallSavedValue(gui, controller) {\n        const root = gui.getRoot();\n        const matchedIndex = root.__rememberedObjects.indexOf(controller.object);\n        if (matchedIndex !== -1) {\n            let controllerMap = root.__rememberedObjectIndecesToControllers[matchedIndex];\n            if (controllerMap === undefined) {\n                controllerMap = {};\n                root.__rememberedObjectIndecesToControllers[matchedIndex] = controllerMap;\n            }\n            controllerMap[controller.property] = controller;\n            if (root.load && root.load.remembered) {\n                const presetMap = root.load.remembered;\n                let preset;\n                if (presetMap[gui.preset]) {\n                    preset = presetMap[gui.preset];\n                } else if (presetMap[DEFAULT_DEFAULT_PRESET_NAME]) {\n                    preset = presetMap[DEFAULT_DEFAULT_PRESET_NAME];\n                } else {\n                    return;\n                }\n                if (preset[matchedIndex] && preset[matchedIndex][controller.property] !== undefined) {\n                    const value = preset[matchedIndex][controller.property];\n                    controller.initialValue = value;\n                    controller.setValue(value);\n                }\n            }\n        }\n    }\n    function add(gui, object, property, params) {\n        if (object[property] === undefined) {\n            throw new Error(`Object \"${ object }\" has no property \"${ property }\"`);\n        }\n        let controller;\n        if (params.color) {\n            controller = new ColorController(object, property);\n        } else {\n            const factoryArgs = [\n                object,\n                property\n            ].concat(params.factoryArgs);\n            controller = ControllerFactory.apply(gui, factoryArgs);\n        }\n        if (params.before instanceof Controller) {\n            params.before = params.before.__li;\n        }\n        recallSavedValue(gui, controller);\n        dom.addClass(controller.domElement, 'c');\n        const name = document.createElement('span');\n        dom.addClass(name, 'property-name');\n        name.innerHTML = controller.property;\n        const container = document.createElement('div');\n        container.appendChild(name);\n        container.appendChild(controller.domElement);\n        const li = addRow(gui, container, params.before);\n        dom.addClass(li, GUI.CLASS_CONTROLLER_ROW);\n        if (controller instanceof ColorController) {\n            dom.addClass(li, 'color');\n        } else {\n            dom.addClass(li, typeof controller.getValue());\n        }\n        augmentController(gui, li, controller);\n        gui.__controllers.push(controller);\n        return controller;\n    }\n    function getLocalStorageHash(gui, key) {\n        return document.location.href + '.' + key;\n    }\n    function addPresetOption(gui, name, setSelected) {\n        const opt = document.createElement('option');\n        opt.innerHTML = name;\n        opt.value = name;\n        gui.__preset_select.appendChild(opt);\n        if (setSelected) {\n            gui.__preset_select.selectedIndex = gui.__preset_select.length - 1;\n        }\n    }\n    function showHideExplain(gui, explain) {\n        explain.style.display = gui.useLocalStorage ? 'block' : 'none';\n    }\n    function addSaveMenu(gui) {\n        const div = gui.__save_row = document.createElement('li');\n        dom.addClass(gui.domElement, 'has-save');\n        gui.__ul.insertBefore(div, gui.__ul.firstChild);\n        dom.addClass(div, 'save-row');\n        const gears = document.createElement('span');\n        gears.innerHTML = '&nbsp;';\n        dom.addClass(gears, 'button gears');\n        const button = document.createElement('span');\n        button.innerHTML = 'Save';\n        dom.addClass(button, 'button');\n        dom.addClass(button, 'save');\n        const button2 = document.createElement('span');\n        button2.innerHTML = 'New';\n        dom.addClass(button2, 'button');\n        dom.addClass(button2, 'save-as');\n        const button3 = document.createElement('span');\n        button3.innerHTML = 'Revert';\n        dom.addClass(button3, 'button');\n        dom.addClass(button3, 'revert');\n        const select = gui.__preset_select = document.createElement('select');\n        if (gui.load && gui.load.remembered) {\n            common.each(gui.load.remembered, function (value, key) {\n                addPresetOption(gui, key, key === gui.preset);\n            });\n        } else {\n            addPresetOption(gui, DEFAULT_DEFAULT_PRESET_NAME, false);\n        }\n        dom.bind(select, 'change', function () {\n            for (let index = 0; index < gui.__preset_select.length; index++) {\n                gui.__preset_select[index].innerHTML = gui.__preset_select[index].value;\n            }\n            gui.preset = this.value;\n        });\n        div.appendChild(select);\n        div.appendChild(gears);\n        div.appendChild(button);\n        div.appendChild(button2);\n        div.appendChild(button3);\n        if (SUPPORTS_LOCAL_STORAGE) {\n            const explain = document.getElementById('dg-local-explain');\n            const localStorageCheckBox = document.getElementById('dg-local-storage');\n            const saveLocally = document.getElementById('dg-save-locally');\n            saveLocally.style.display = 'block';\n            if (localStorage.getItem(getLocalStorageHash(gui, 'isLocal')) === 'true') {\n                localStorageCheckBox.setAttribute('checked', 'checked');\n            }\n            showHideExplain(gui, explain);\n            dom.bind(localStorageCheckBox, 'change', function () {\n                gui.useLocalStorage = !gui.useLocalStorage;\n                showHideExplain(gui, explain);\n            });\n        }\n        const newConstructorTextArea = document.getElementById('dg-new-constructor');\n        dom.bind(newConstructorTextArea, 'keydown', function (e) {\n            if (e.metaKey && (e.which === 67 || e.keyCode === 67)) {\n                SAVE_DIALOGUE.hide();\n            }\n        });\n        dom.bind(gears, 'click', function () {\n            newConstructorTextArea.innerHTML = JSON.stringify(gui.getSaveObject(), undefined, 2);\n            SAVE_DIALOGUE.show();\n            newConstructorTextArea.focus();\n            newConstructorTextArea.select();\n        });\n        dom.bind(button, 'click', function () {\n            gui.save();\n        });\n        dom.bind(button2, 'click', function () {\n            const presetName = prompt('Enter a new preset name.');\n            if (presetName) {\n                gui.saveAs(presetName);\n            }\n        });\n        dom.bind(button3, 'click', function () {\n            gui.revert();\n        });\n    }\n    function addResizeHandle(gui) {\n        let pmouseX;\n        gui.__resize_handle = document.createElement('div');\n        common.extend(gui.__resize_handle.style, {\n            width: '6px',\n            marginLeft: '-3px',\n            height: '200px',\n            cursor: 'ew-resize',\n            position: 'absolute'\n        });\n        function drag(e) {\n            e.preventDefault();\n            gui.width += pmouseX - e.clientX;\n            gui.onResize();\n            pmouseX = e.clientX;\n            return false;\n        }\n        function dragStop() {\n            dom.removeClass(gui.__closeButton, GUI.CLASS_DRAG);\n            dom.unbind(window, 'mousemove', drag);\n            dom.unbind(window, 'mouseup', dragStop);\n        }\n        function dragStart(e) {\n            e.preventDefault();\n            pmouseX = e.clientX;\n            dom.addClass(gui.__closeButton, GUI.CLASS_DRAG);\n            dom.bind(window, 'mousemove', drag);\n            dom.bind(window, 'mouseup', dragStop);\n            return false;\n        }\n        dom.bind(gui.__resize_handle, 'mousedown', dragStart);\n        dom.bind(gui.__closeButton, 'mousedown', dragStart);\n        gui.domElement.insertBefore(gui.__resize_handle, gui.domElement.firstElementChild);\n    }\n    function setWidth(gui, w) {\n        gui.domElement.style.width = w + 'px';\n        if (gui.__save_row && gui.autoPlace) {\n            gui.__save_row.style.width = w + 'px';\n        }\n        if (gui.__closeButton) {\n            gui.__closeButton.style.width = w + 'px';\n        }\n    }\n    function getCurrentPreset(gui, useInitialValues) {\n        const toReturn = {};\n        common.each(gui.__rememberedObjects, function (val, index) {\n            const savedValues = {};\n            const controllerMap = gui.__rememberedObjectIndecesToControllers[index];\n            common.each(controllerMap, function (controller, property) {\n                savedValues[property] = useInitialValues ? controller.initialValue : controller.getValue();\n            });\n            toReturn[index] = savedValues;\n        });\n        return toReturn;\n    }\n    function setPresetSelectIndex(gui) {\n        for (let index = 0; index < gui.__preset_select.length; index++) {\n            if (gui.__preset_select[index].value === gui.preset) {\n                gui.__preset_select.selectedIndex = index;\n            }\n        }\n    }\n    function updateDisplays(controllerArray) {\n        if (controllerArray.length !== 0) {\n            requestAnimationFrame.call(window, function () {\n                updateDisplays(controllerArray);\n            });\n        }\n        common.each(controllerArray, function (c) {\n            c.updateDisplay();\n        });\n    }\n    return GUI;\n});\ndefine('skylark-datgui/main',[\n    \"skylark-langx-ns\",\n    './color/Color',\n    './color/math',\n    './color/interpret',\n    './controllers/Controller',\n    './controllers/BooleanController',\n    './controllers/OptionController',\n    './controllers/StringController',\n    './controllers/NumberController',\n    './controllers/NumberControllerBox',\n    './controllers/NumberControllerSlider',\n    './controllers/FunctionController',\n    './controllers/ColorController',\n    './dom/dom',\n    './gui/GUI'\n], function (skylark,Color, math, interpret, Controller, BooleanController, OptionController, StringController, NumberController, NumberControllerBox, NumberControllerSlider, FunctionController, ColorController, domImport, GUIImport) {\n    'use strict';\n    const color = {\n        Color: Color,\n        math: math,\n        interpret: interpret\n    };\n    const controllers = {\n        Controller: Controller,\n        BooleanController: BooleanController,\n        OptionController: OptionController,\n        StringController: StringController,\n        NumberController: NumberController,\n        NumberControllerBox: NumberControllerBox,\n        NumberControllerSlider: NumberControllerSlider,\n        FunctionController: FunctionController,\n        ColorController: ColorController\n    };\n    const dom = { dom: domImport };\n    const gui = { GUI: GUIImport };\n    const GUI = GUIImport;\n    return skylark.attach(\"intg.datgui\",{\n        color,\n        controllers,\n        dom,\n        gui,\n        GUI\n    });\n});\ndefine('skylark-datgui', ['skylark-datgui/main'], function (main) { return main; });\n\n"]}