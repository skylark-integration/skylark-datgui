{"version":3,"sources":["skylark-datgui.js"],"names":["define","[object Object]","object","property","this","initialValue","domElement","document","createElement","__onChange","undefined","__onFinishChange","fnc","newValue","call","updateDisplay","getValue","types","arrays","objects","funcs","ARR_EACH","Array","prototype","forEach","ARR_SLICE","slice","Common","BREAK","extend","defaults","target","each","arguments","obj","keys","isObject","Object","key","isUndefined","bind","compose","toCall","args","i","length","apply","itr","scope","l","defer","debounce","func","threshold","callImmediately","timeout","callNow","clearTimeout","setTimeout","toArray","makeArray","isNull","isNaN","isArray","isPlainObject","isNumber","isString","isBoolean","isFunction","noder","styler","geom","eventer","common","EVENT_MAP_INV","HTMLEvents","MouseEvents","KeyboardEvents","v","k","e","dom","makeSelectable","selectable","makeFullscreen","fullCover","fakeEvent","elem","eventType","pars","aux","params","className","Error","evt","createEvent","clientX","x","clientY","y","initMouseEvent","bubbles","cancelable","window","clickCount","init","initKeyboardEvent","initKeyEvent","ctrlKey","altKey","shiftKey","metaKey","keyCode","charCode","initEvent","dispatchEvent","on","unbind","off","addClass","removeClass","hasClass","getWidth","width","getHeight","height","getOffset","pagePosition","isActive","Controller","super","_this","__prev","__checkbox","setAttribute","setValue","appendChild","toReturn","checked","opts","options","__select","map","element","value","opt","innerHTML","desiredValue","selectedIndex","onChange","__input","blur","numDecimals","_x","toString","indexOf","_params","__min","min","__max","max","__step","step","__impliedStep","Math","pow","floor","log","abs","LN10","__precision","_v","round","minValue","maxValue","stepValue","NumberController","__truncationSuspended","prevY","onFinish","onMouseDrag","diff","onMouseUp","attempted","parseFloat","decimals","tenTo","roundToDecimal","i1","i2","o1","o2","preventDefault","bgRect","__background","getBoundingClientRect","left","right","onTouchMove","touches","onTouchEnd","__foreground","activeElement","pct","style","text","__button","fire","css","load","url","indoc","doc","link","type","rel","href","getElementsByTagName","inject","cssContent","injected","head","OptionController","NumberControllerBox","NumberControllerSlider","StringController","FunctionController","BooleanController","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","backgroundElement","backgroundColor","top","display","zIndex","opacity","WebkitTransition","transition","position","body","hide","webkitTransform","layout","innerWidth","innerHeight","saveDialogueContents","ControllerFactory","ColorController","CenteredDiv","styleSheet","DEFAULT_DEFAULT_PRESET_NAME","SUPPORTS_LOCAL_STORAGE","localStorage","SAVE_DIALOGUE","autoPlaceContainer","autoPlaceVirgin","hideableGuis","GUI","__ul","__folders","__controllers","__rememberedObjects","__rememberedObjectIndecesToControllers","__listening","closeOnTop","autoPlace","DEFAULT_WIDTH","resizable","hideable","preset","parent","push","scrollable","saveToLocalStorage","titleRow","useLocalStorage","getItem","getLocalStorageHash","defineProperties","get","getRoot","set","gui","index","__preset_select","setPresetSelectIndex","revert","setWidth","name","closed","CLASS_CLOSED","onResize","__closeButton","TEXT_OPEN","TEXT_CLOSED","bool","setItem","CLASS_MAIN","savedGui","JSON","parse","CLASS_CLOSE_BUTTON","CLASS_CLOSE_TOP","insertBefore","childNodes","CLASS_CLOSE_BOTTOM","titleRowName","createTextNode","addRow","onClickTitle","CLASS_AUTO_PLACE_CONTAINER","CLASS_AUTO_PLACE","__resizeHandler","onResizeDebounced","pmouseX","drag","dragStop","CLASS_DRAG","dragStart","__resize_handle","marginLeft","cursor","firstElementChild","addResizeHandle","stringify","getSaveObject","saveToLocalStorageIfPossible","root","resetWidth","newDom","liBefore","li","removeListeners","markPresetModified","modified","recallSavedValue","controller","matchedIndex","controllerMap","remembered","presetMap","add","color","factoryArgs","concat","before","__li","container","CLASS_CONTROLLER_ROW","__gui","nextSibling","nextElementSibling","remove","listen","box","method","pc","pb","r","returned","oldName","wasListening","newController","stopPropagation","val","borderLeftColor","isModified","augmentController","location","addPresetOption","setSelected","showHideExplain","explain","w","__save_row","getCurrentPreset","useInitialValues","savedValues","toggleHide","CLASS_TOO_TALL","_keydownHandler","which","addColor","removeChild","splice","destroy","subfolder","removeFolder","addFolder","newGuiParams","folders","folder","parentElement","open","close","show","h","node","offsetHeight","remember","div","firstChild","gears","button","button2","button3","select","getElementById","localStorageCheckBox","saveLocally","newConstructorTextArea","focus","save","presetName","prompt","saveAs","addSaveMenu","updateDisplays","controllerArray","c","skylark","domImport","GUIImport","controllers","attach","main"],"mappings":"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","file":"../skylark-datgui.js","sourcesContent":["define('skylark-datgui/controllers/Controller',[],function () {\n    'use strict';\n    class Controller {\n        constructor(object, property) {\n            this.initialValue = object[property];\n            this.domElement = document.createElement('div');\n            this.object = object;\n            this.property = property;\n            this.__onChange = undefined;\n            this.__onFinishChange = undefined;\n        }\n        onChange(fnc) {\n            this.__onChange = fnc;\n            return this;\n        }\n        onFinishChange(fnc) {\n            this.__onFinishChange = fnc;\n            return this;\n        }\n        setValue(newValue) {\n            this.object[this.property] = newValue;\n            if (this.__onChange) {\n                this.__onChange.call(this, newValue);\n            }\n            this.updateDisplay();\n            return this;\n        }\n        getValue() {\n            return this.object[this.property];\n        }\n        updateDisplay() {\n            return this;\n        }\n        isModified() {\n            return this.initialValue !== this.getValue();\n        }\n    }\n    return Controller;\n});\ndefine('skylark-datgui/utils/common',[\n    \"skylark-langx-types\",\n    \"skylark-langx-arrays\",\n    \"skylark-langx-objects\",\n    \"skylark-langx-funcs\"\n],function (types,arrays,objects,funcs) {\n    'use strict';\n    const ARR_EACH = Array.prototype.forEach;\n    const ARR_SLICE = Array.prototype.slice;\n    const Common = {\n        BREAK: {},\n\n        extend: objects.extend,\n\n        defaults: function (target) {\n            this.each(ARR_SLICE.call(arguments, 1), function (obj) {\n                const keys = this.isObject(obj) ? Object.keys(obj) : [];\n                keys.forEach(function (key) {\n                    if (this.isUndefined(target[key])) {\n                        target[key] = obj[key];\n                    }\n                }.bind(this));\n            }, this);\n            return target;\n        },\n\n        compose: function () {\n            const toCall = ARR_SLICE.call(arguments);\n            return function () {\n                let args = ARR_SLICE.call(arguments);\n                for (let i = toCall.length - 1; i >= 0; i--) {\n                    args = [toCall[i].apply(this, args)];\n                }\n                return args[0];\n            };\n        },\n\n        each: function (obj, itr, scope) {\n            if (!obj) {\n                return;\n            }\n            if (ARR_EACH && obj.forEach && obj.forEach === ARR_EACH) {\n                obj.forEach(itr, scope);\n            } else if (obj.length === obj.length + 0) {\n                let key;\n                let l;\n                for (key = 0, l = obj.length; key < l; key++) {\n                    if (key in obj && itr.call(scope, obj[key], key) === this.BREAK) {\n                        return;\n                    }\n                }\n            } else {\n                for (const key in obj) {\n                    if (itr.call(scope, obj[key], key) === this.BREAK) {\n                        return;\n                    }\n                }\n            }\n        },\n\n        defer: funcs.defer,\n\n        debounce: function (func, threshold, callImmediately) {\n            let timeout;\n            return function () {\n                const obj = this;\n                const args = arguments;\n                function delayed() {\n                    timeout = null;\n                    if (!callImmediately)\n                        func.apply(obj, args);\n                }\n                const callNow = callImmediately || !timeout;\n                clearTimeout(timeout);\n                timeout = setTimeout(delayed, threshold);\n                if (callNow) {\n                    func.apply(obj, args);\n                }\n            };\n        },\n\n        toArray: arrays.toArray || arrays.makeArray,\n\n        isUndefined: types.isUndefined,\n        isNull: types.isNull,\n        isNaN: types.isNaN,\n        isArray: types.isArray,\n\n        isObject: types.isPlainObject,\n        isNumber: types.isNumber,\n        isString: types.isString,\n        isBoolean: types.isBoolean,\n        isFunction: types.isFunction\n    };\n\n    return Common;\n});\ndefine('skylark-datgui/dom/dom',[\n    \"skylark-domx-noder\",\n    \"skylark-domx-styler\",\n    \"skylark-domx-geom\",\n    \"skylark-domx-eventer\",\n    '../utils/common'\n], function (noder,styler,geom,eventer,common) {\n    'use strict';\n    const EVENT_MAP = {\n        HTMLEvents: ['change'],\n        MouseEvents: [\n            'click',\n            'mousemove',\n            'mousedown',\n            'mouseup',\n            'mouseover'\n        ],\n        KeyboardEvents: ['keydown']\n    };\n    const EVENT_MAP_INV = {};\n    common.each(EVENT_MAP, function (v, k) {\n        common.each(v, function (e) {\n            EVENT_MAP_INV[e] = k;\n        });\n    });\n    const CSS_VALUE_PIXELS = /(\\d+(\\.\\d+)?)px/;\n    function cssValueToPixels(val) {\n        if (val === '0' || common.isUndefined(val)) {\n            return 0;\n        }\n        const match = val.match(CSS_VALUE_PIXELS);\n        if (!common.isNull(match)) {\n            return parseFloat(match[1]);\n        }\n        return 0;\n    }\n    const dom = {\n        makeSelectable: noder.selectable,\n\n        makeFullscreen: geom.fullCover,\n\n        fakeEvent: function (elem, eventType, pars, aux) {\n            const params = pars || {};\n            const className = EVENT_MAP_INV[eventType];\n            if (!className) {\n                throw new Error('Event type ' + eventType + ' not supported.');\n            }\n            const evt = document.createEvent(className);\n            switch (className) {\n            case 'MouseEvents': {\n                    const clientX = params.x || params.clientX || 0;\n                    const clientY = params.y || params.clientY || 0;\n                    evt.initMouseEvent(eventType, params.bubbles || false, params.cancelable || true, window, params.clickCount || 1, 0, 0, clientX, clientY, false, false, false, false, 0, null);\n                    break;\n                }\n            case 'KeyboardEvents': {\n                    const init = evt.initKeyboardEvent || evt.initKeyEvent;\n                    common.defaults(params, {\n                        cancelable: true,\n                        ctrlKey: false,\n                        altKey: false,\n                        shiftKey: false,\n                        metaKey: false,\n                        keyCode: undefined,\n                        charCode: undefined\n                    });\n                    init(eventType, params.bubbles || false, params.cancelable, window, params.ctrlKey, params.altKey, params.shiftKey, params.metaKey, params.keyCode, params.charCode);\n                    break;\n                }\n            default: {\n                    evt.initEvent(eventType, params.bubbles || false, params.cancelable || true);\n                    break;\n                }\n            }\n            common.defaults(evt, aux);\n            elem.dispatchEvent(evt);\n        },\n\n        bind: eventer.on,\n        unbind: eventer.off,\n\n        addClass: styler.addClass,\n\n        removeClass: styler.removeClass,\n\n        hasClass: styler.hasClass,\n\n        getWidth: geom.width,\n\n        getHeight: geom.height,\n\n        getOffset: geom.pagePosition,\n\n        isActive: noder.isActive\n    };\n    return dom;\n});\ndefine('skylark-datgui/controllers/BooleanController',[\n    './Controller',\n    '../dom/dom'\n], function (Controller, dom) {\n    'use strict';\n    class BooleanController extends Controller {\n        constructor(object, property) {\n            super(object, property);\n            const _this = this;\n            this.__prev = this.getValue();\n            this.__checkbox = document.createElement('input');\n            this.__checkbox.setAttribute('type', 'checkbox');\n            function onChange() {\n                _this.setValue(!_this.__prev);\n            }\n            dom.bind(this.__checkbox, 'change', onChange, false);\n            this.domElement.appendChild(this.__checkbox);\n            this.updateDisplay();\n        }\n        setValue(v) {\n            const toReturn = super.setValue(v);\n            if (this.__onFinishChange) {\n                this.__onFinishChange.call(this, this.getValue());\n            }\n            this.__prev = this.getValue();\n            return toReturn;\n        }\n        updateDisplay() {\n            if (this.getValue() === true) {\n                this.__checkbox.setAttribute('checked', 'checked');\n                this.__checkbox.checked = true;\n                this.__prev = true;\n            } else {\n                this.__checkbox.checked = false;\n                this.__prev = false;\n            }\n            return super.updateDisplay();\n        }\n    }\n    return BooleanController;\n});\ndefine('skylark-datgui/controllers/OptionController',[\n    './Controller',\n    '../dom/dom',\n    '../utils/common'\n], function (Controller, dom, common) {\n    'use strict';\n    class OptionController extends Controller {\n        constructor(object, property, opts) {\n            super(object, property);\n            let options = opts;\n            const _this = this;\n            this.__select = document.createElement('select');\n            if (common.isArray(options)) {\n                const map = {};\n                common.each(options, function (element) {\n                    map[element] = element;\n                });\n                options = map;\n            }\n            common.each(options, function (value, key) {\n                const opt = document.createElement('option');\n                opt.innerHTML = key;\n                opt.setAttribute('value', value);\n                _this.__select.appendChild(opt);\n            });\n            this.updateDisplay();\n            dom.bind(this.__select, 'change', function () {\n                const desiredValue = this.options[this.selectedIndex].value;\n                _this.setValue(desiredValue);\n            });\n            this.domElement.appendChild(this.__select);\n        }\n        setValue(v) {\n            const toReturn = super.setValue(v);\n            if (this.__onFinishChange) {\n                this.__onFinishChange.call(this, this.getValue());\n            }\n            return toReturn;\n        }\n        updateDisplay() {\n            if (dom.isActive(this.__select))\n                return this;\n            this.__select.value = this.getValue();\n            return super.updateDisplay();\n        }\n    }\n    return OptionController;\n});\ndefine('skylark-datgui/controllers/StringController',[\n    './Controller',\n    '../dom/dom'\n], function (Controller, dom) {\n    'use strict';\n    class StringController extends Controller {\n        constructor(object, property) {\n            super(object, property);\n            const _this = this;\n            function onChange() {\n                _this.setValue(_this.__input.value);\n            }\n            function onBlur() {\n                if (_this.__onFinishChange) {\n                    _this.__onFinishChange.call(_this, _this.getValue());\n                }\n            }\n            this.__input = document.createElement('input');\n            this.__input.setAttribute('type', 'text');\n            dom.bind(this.__input, 'keyup', onChange);\n            dom.bind(this.__input, 'change', onChange);\n            dom.bind(this.__input, 'blur', onBlur);\n            dom.bind(this.__input, 'keydown', function (e) {\n                if (e.keyCode === 13) {\n                    this.blur();\n                }\n            });\n            this.updateDisplay();\n            this.domElement.appendChild(this.__input);\n        }\n        updateDisplay() {\n            if (!dom.isActive(this.__input)) {\n                this.__input.value = this.getValue();\n            }\n            return super.updateDisplay();\n        }\n    }\n    return StringController;\n});\ndefine('skylark-datgui/controllers/NumberController',[\n    './Controller',\n    '../utils/common'\n], function (Controller, common) {\n    'use strict';\n    function numDecimals(x) {\n        const _x = x.toString();\n        if (_x.indexOf('.') > -1) {\n            return _x.length - _x.indexOf('.') - 1;\n        }\n        return 0;\n    }\n    class NumberController extends Controller {\n        constructor(object, property, params) {\n            super(object, property);\n            const _params = params || {};\n            this.__min = _params.min;\n            this.__max = _params.max;\n            this.__step = _params.step;\n            if (common.isUndefined(this.__step)) {\n                if (this.initialValue === 0) {\n                    this.__impliedStep = 1;\n                } else {\n                    this.__impliedStep = Math.pow(10, Math.floor(Math.log(Math.abs(this.initialValue)) / Math.LN10)) / 10;\n                }\n            } else {\n                this.__impliedStep = this.__step;\n            }\n            this.__precision = numDecimals(this.__impliedStep);\n        }\n        setValue(v) {\n            let _v = v;\n            if (this.__min !== undefined && _v < this.__min) {\n                _v = this.__min;\n            } else if (this.__max !== undefined && _v > this.__max) {\n                _v = this.__max;\n            }\n            if (this.__step !== undefined && _v % this.__step !== 0) {\n                _v = Math.round(_v / this.__step) * this.__step;\n            }\n            return super.setValue(_v);\n        }\n        min(minValue) {\n            this.__min = minValue;\n            return this;\n        }\n        max(maxValue) {\n            this.__max = maxValue;\n            return this;\n        }\n        step(stepValue) {\n            this.__step = stepValue;\n            this.__impliedStep = stepValue;\n            this.__precision = numDecimals(stepValue);\n            return this;\n        }\n    }\n    return NumberController;\n});\ndefine('skylark-datgui/controllers/NumberControllerBox',[\n    './NumberController',\n    '../dom/dom',\n    '../utils/common'\n], function (NumberController, dom, common) {\n    'use strict';\n    function roundToDecimal(value, decimals) {\n        const tenTo = Math.pow(10, decimals);\n        return Math.round(value * tenTo) / tenTo;\n    }\n    class NumberControllerBox extends NumberController {\n        constructor(object, property, params) {\n            super(object, property, params);\n            this.__truncationSuspended = false;\n            const _this = this;\n            let prevY;\n            function onChange() {\n                const attempted = parseFloat(_this.__input.value);\n                if (!common.isNaN(attempted)) {\n                    _this.setValue(attempted);\n                }\n            }\n            function onFinish() {\n                if (_this.__onFinishChange) {\n                    _this.__onFinishChange.call(_this, _this.getValue());\n                }\n            }\n            function onBlur() {\n                onFinish();\n            }\n            function onMouseDrag(e) {\n                const diff = prevY - e.clientY;\n                _this.setValue(_this.getValue() + diff * _this.__impliedStep);\n                prevY = e.clientY;\n            }\n            function onMouseUp() {\n                dom.unbind(window, 'mousemove', onMouseDrag);\n                dom.unbind(window, 'mouseup', onMouseUp);\n                onFinish();\n            }\n            function onMouseDown(e) {\n                dom.bind(window, 'mousemove', onMouseDrag);\n                dom.bind(window, 'mouseup', onMouseUp);\n                prevY = e.clientY;\n            }\n            this.__input = document.createElement('input');\n            this.__input.setAttribute('type', 'text');\n            dom.bind(this.__input, 'change', onChange);\n            dom.bind(this.__input, 'blur', onBlur);\n            dom.bind(this.__input, 'mousedown', onMouseDown);\n            dom.bind(this.__input, 'keydown', function (e) {\n                if (e.keyCode === 13) {\n                    _this.__truncationSuspended = true;\n                    this.blur();\n                    _this.__truncationSuspended = false;\n                    onFinish();\n                }\n            });\n            this.updateDisplay();\n            this.domElement.appendChild(this.__input);\n        }\n        updateDisplay() {\n            this.__input.value = this.__truncationSuspended ? this.getValue() : roundToDecimal(this.getValue(), this.__precision);\n            return super.updateDisplay();\n        }\n    }\n    return NumberControllerBox;\n});\ndefine('skylark-datgui/controllers/NumberControllerSlider',[\n    './NumberController',\n    '../dom/dom'\n], function (NumberController, dom) {\n    'use strict';\n    function map(v, i1, i2, o1, o2) {\n        return o1 + (o2 - o1) * ((v - i1) / (i2 - i1));\n    }\n    class NumberControllerSlider extends NumberController {\n        constructor(object, property, min, max, step) {\n            super(object, property, {\n                min: min,\n                max: max,\n                step: step\n            });\n            const _this = this;\n            this.__background = document.createElement('div');\n            this.__foreground = document.createElement('div');\n            dom.bind(this.__background, 'mousedown', onMouseDown);\n            dom.bind(this.__background, 'touchstart', onTouchStart);\n            dom.addClass(this.__background, 'slider');\n            dom.addClass(this.__foreground, 'slider-fg');\n            function onMouseDown(e) {\n                document.activeElement.blur();\n                dom.bind(window, 'mousemove', onMouseDrag);\n                dom.bind(window, 'mouseup', onMouseUp);\n                onMouseDrag(e);\n            }\n            function onMouseDrag(e) {\n                e.preventDefault();\n                const bgRect = _this.__background.getBoundingClientRect();\n                _this.setValue(map(e.clientX, bgRect.left, bgRect.right, _this.__min, _this.__max));\n                return false;\n            }\n            function onMouseUp() {\n                dom.unbind(window, 'mousemove', onMouseDrag);\n                dom.unbind(window, 'mouseup', onMouseUp);\n                if (_this.__onFinishChange) {\n                    _this.__onFinishChange.call(_this, _this.getValue());\n                }\n            }\n            function onTouchStart(e) {\n                if (e.touches.length !== 1) {\n                    return;\n                }\n                dom.bind(window, 'touchmove', onTouchMove);\n                dom.bind(window, 'touchend', onTouchEnd);\n                onTouchMove(e);\n            }\n            function onTouchMove(e) {\n                const clientX = e.touches[0].clientX;\n                const bgRect = _this.__background.getBoundingClientRect();\n                _this.setValue(map(clientX, bgRect.left, bgRect.right, _this.__min, _this.__max));\n            }\n            function onTouchEnd() {\n                dom.unbind(window, 'touchmove', onTouchMove);\n                dom.unbind(window, 'touchend', onTouchEnd);\n                if (_this.__onFinishChange) {\n                    _this.__onFinishChange.call(_this, _this.getValue());\n                }\n            }\n            this.updateDisplay();\n            this.__background.appendChild(this.__foreground);\n            this.domElement.appendChild(this.__background);\n        }\n        updateDisplay() {\n            const pct = (this.getValue() - this.__min) / (this.__max - this.__min);\n            this.__foreground.style.width = pct * 100 + '%';\n            return super.updateDisplay();\n        }\n    }\n    return NumberControllerSlider;\n});\ndefine('skylark-datgui/controllers/FunctionController',[\n    './Controller',\n    '../dom/dom'\n], function (Controller, dom) {\n    'use strict';\n    class FunctionController extends Controller {\n        constructor(object, property, text) {\n            super(object, property);\n            const _this = this;\n            this.__button = document.createElement('div');\n            this.__button.innerHTML = text === undefined ? 'Fire' : text;\n            dom.bind(this.__button, 'click', function (e) {\n                e.preventDefault();\n                _this.fire();\n                return false;\n            });\n            dom.addClass(this.__button, 'button');\n            this.domElement.appendChild(this.__button);\n        }\n        fire() {\n            if (this.__onChange) {\n                this.__onChange.call(this);\n            }\n            this.getValue().call(this.object);\n            if (this.__onFinishChange) {\n                this.__onFinishChange.call(this, this.getValue());\n            }\n        }\n    }\n    return FunctionController;\n});\ndefine('skylark-datgui/controllers/ColorController',[\n    './Controller',\n    '../dom/dom'\n], function (Controller, dom) {\n    'use strict';\n    class ColorController extends Controller {\n        constructor(object, property) {\n            super(object, property);\n            const _this = this;\n            function onChange() {\n                _this.setValue(_this.__input.value);\n            }\n            function onBlur() {\n                if (_this.__onFinishChange) {\n                    _this.__onFinishChange.call(_this, _this.getValue());\n                }\n            }\n            this.__input = document.createElement('input');\n            this.__input.setAttribute('type', 'color');\n            dom.bind(this.__input, 'keyup', onChange);\n            dom.bind(this.__input, 'change', onChange);\n            dom.bind(this.__input, 'blur', onBlur);\n            dom.bind(this.__input, 'keydown', function (e) {\n                if (e.keyCode === 13) {\n                    this.blur();\n                }\n            });\n            this.updateDisplay();\n            this.domElement.appendChild(this.__input);\n        }\n        updateDisplay() {\n            if (!dom.isActive(this.__input)) {\n                this.__input.value = this.getValue();\n            }\n            return super.updateDisplay();\n        }\n    }\n    return ColorController;\n});\ndefine('skylark-datgui/utils/css',[],function () {\n    'use strict';\n    const css = {\n        load: function (url, indoc) {\n            const doc = indoc || document;\n            const link = doc.createElement('link');\n            link.type = 'text/css';\n            link.rel = 'stylesheet';\n            link.href = url;\n            doc.getElementsByTagName('head')[0].appendChild(link);\n        },\n        inject: function (cssContent, indoc) {\n            const doc = indoc || document;\n            const injected = document.createElement('style');\n            injected.type = 'text/css';\n            injected.innerHTML = cssContent;\n            const head = doc.getElementsByTagName('head')[0];\n            try {\n                head.appendChild(injected);\n            } catch (e) {\n            }\n        }\n    };\n    return css;\n});\ndefine('skylark-datgui/gui/saveDialogue.html',[],function () {\n    'use strict';\n    const saveDialogContents = `<div id=\"dg-save\" class=\"dg dialogue\">\n\n  Here's the new load parameter for your <code>GUI</code>'s constructor:\n\n  <textarea id=\"dg-new-constructor\"></textarea>\n\n  <div id=\"dg-save-locally\">\n\n    <input id=\"dg-local-storage\" type=\"checkbox\"/> Automatically save\n    values to <code>localStorage</code> on exit.\n\n    <div id=\"dg-local-explain\">The values saved to <code>localStorage</code> will\n      override those passed to <code>dat.GUI</code>'s constructor. This makes it\n      easier to work incrementally, but <code>localStorage</code> is fragile,\n      and your friends may not see the same values you do.\n\n    </div>\n\n  </div>\n\n</div>`;\n    return saveDialogContents;\n});\ndefine('skylark-datgui/controllers/ControllerFactory',[\n    './OptionController',\n    './NumberControllerBox',\n    './NumberControllerSlider',\n    './StringController',\n    './FunctionController',\n    './BooleanController',\n    '../utils/common'\n], function (OptionController, NumberControllerBox, NumberControllerSlider, StringController, FunctionController, BooleanController, common) {\n    'use strict';\n    const ControllerFactory = function (object, property) {\n        const initialValue = object[property];\n        if (common.isArray(arguments[2]) || common.isObject(arguments[2])) {\n            return new OptionController(object, property, arguments[2]);\n        }\n        if (common.isNumber(initialValue)) {\n            if (common.isNumber(arguments[2]) && common.isNumber(arguments[3])) {\n                if (common.isNumber(arguments[4])) {\n                    return new NumberControllerSlider(object, property, arguments[2], arguments[3], arguments[4]);\n                }\n                return new NumberControllerSlider(object, property, arguments[2], arguments[3]);\n            }\n            if (common.isNumber(arguments[4])) {\n                return new NumberControllerBox(object, property, {\n                    min: arguments[2],\n                    max: arguments[3],\n                    step: arguments[4]\n                });\n            }\n            return new NumberControllerBox(object, property, {\n                min: arguments[2],\n                max: arguments[3]\n            });\n        }\n        if (common.isString(initialValue)) {\n            return new StringController(object, property);\n        }\n        if (common.isFunction(initialValue)) {\n            return new FunctionController(object, property, '');\n        }\n        if (common.isBoolean(initialValue)) {\n            return new BooleanController(object, property);\n        }\n        return null;\n    };\n    return ControllerFactory;\n});\ndefine('skylark-datgui/utils/requestAnimationFrame',[],function () {\n    'use strict';\n    function requestAnimationFrame(callback) {\n        setTimeout(callback, 1000 / 60);\n    }\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || requestAnimationFrame;\n});\ndefine('skylark-datgui/dom/CenteredDiv',[\n    '../dom/dom',\n    '../utils/common'\n], function (dom, common) {\n    'use strict';\n    class CenteredDiv {\n        constructor() {\n            this.backgroundElement = document.createElement('div');\n            common.extend(this.backgroundElement.style, {\n                backgroundColor: 'rgba(0,0,0,0.8)',\n                top: 0,\n                left: 0,\n                display: 'none',\n                zIndex: '1000',\n                opacity: 0,\n                WebkitTransition: 'opacity 0.2s linear',\n                transition: 'opacity 0.2s linear'\n            });\n            dom.makeFullscreen(this.backgroundElement);\n            this.backgroundElement.style.position = 'fixed';\n            this.domElement = document.createElement('div');\n            common.extend(this.domElement.style, {\n                position: 'fixed',\n                display: 'none',\n                zIndex: '1001',\n                opacity: 0,\n                WebkitTransition: '-webkit-transform 0.2s ease-out, opacity 0.2s linear',\n                transition: 'transform 0.2s ease-out, opacity 0.2s linear'\n            });\n            document.body.appendChild(this.backgroundElement);\n            document.body.appendChild(this.domElement);\n            const _this = this;\n            dom.bind(this.backgroundElement, 'click', function () {\n                _this.hide();\n            });\n        }\n        show() {\n            const _this = this;\n            this.backgroundElement.style.display = 'block';\n            this.domElement.style.display = 'block';\n            this.domElement.style.opacity = 0;\n            this.domElement.style.webkitTransform = 'scale(1.1)';\n            this.layout();\n            common.defer(function () {\n                _this.backgroundElement.style.opacity = 1;\n                _this.domElement.style.opacity = 1;\n                _this.domElement.style.webkitTransform = 'scale(1)';\n            });\n        }\n        hide() {\n            const _this = this;\n            const hide = function () {\n                _this.domElement.style.display = 'none';\n                _this.backgroundElement.style.display = 'none';\n                dom.unbind(_this.domElement, 'webkitTransitionEnd', hide);\n                dom.unbind(_this.domElement, 'transitionend', hide);\n                dom.unbind(_this.domElement, 'oTransitionEnd', hide);\n            };\n            dom.bind(this.domElement, 'webkitTransitionEnd', hide);\n            dom.bind(this.domElement, 'transitionend', hide);\n            dom.bind(this.domElement, 'oTransitionEnd', hide);\n            this.backgroundElement.style.opacity = 0;\n            this.domElement.style.opacity = 0;\n            this.domElement.style.webkitTransform = 'scale(1.1)';\n        }\n        layout() {\n            this.domElement.style.left = window.innerWidth / 2 - dom.getWidth(this.domElement) / 2 + 'px';\n            this.domElement.style.top = window.innerHeight / 2 - dom.getHeight(this.domElement) / 2 + 'px';\n        }\n    }\n    return CenteredDiv;\n});\ndefine('skylark-datgui/gui/GUI',[\n    '../utils/css',\n    './saveDialogue.html',\n    '../controllers/ControllerFactory',\n    '../controllers/Controller',\n    '../controllers/BooleanController',\n    '../controllers/FunctionController',\n    '../controllers/NumberControllerBox',\n    '../controllers/NumberControllerSlider',\n    '../controllers/ColorController',\n    '../utils/requestAnimationFrame',\n    '../dom/CenteredDiv',\n    '../dom/dom',\n    '../utils/common'\n], function (css, saveDialogueContents, ControllerFactory, Controller, BooleanController, FunctionController, NumberControllerBox, NumberControllerSlider, ColorController, requestAnimationFrame, CenteredDiv, dom, common, styleSheet) {\n    'use strict';\n\n    //css.inject(styleSheet);\n\n    const CSS_NAMESPACE = 'dg';\n    const HIDE_KEY_CODE = 72;\n    const CLOSE_BUTTON_HEIGHT = 20;\n    const DEFAULT_DEFAULT_PRESET_NAME = 'Default';\n    const SUPPORTS_LOCAL_STORAGE = function () {\n        try {\n            return !!window.localStorage;\n        } catch (e) {\n            return false;\n        }\n    }();\n    let SAVE_DIALOGUE;\n    let autoPlaceVirgin = true;\n    let autoPlaceContainer;\n    let hide = false;\n    const hideableGuis = [];\n    const GUI = function (pars) {\n        const _this = this;\n        let params = pars || {};\n        this.domElement = document.createElement('div');\n        this.__ul = document.createElement('ul');\n        this.domElement.appendChild(this.__ul);\n        dom.addClass(this.domElement, CSS_NAMESPACE);\n        this.__folders = {};\n        this.__controllers = [];\n        this.__rememberedObjects = [];\n        this.__rememberedObjectIndecesToControllers = [];\n        this.__listening = [];\n        params = common.defaults(params, {\n            closeOnTop: false,\n            autoPlace: true,\n            width: GUI.DEFAULT_WIDTH\n        });\n        params = common.defaults(params, {\n            resizable: params.autoPlace,\n            hideable: params.autoPlace\n        });\n        if (!common.isUndefined(params.load)) {\n            if (params.preset) {\n                params.load.preset = params.preset;\n            }\n        } else {\n            params.load = { preset: DEFAULT_DEFAULT_PRESET_NAME };\n        }\n        if (common.isUndefined(params.parent) && params.hideable) {\n            hideableGuis.push(this);\n        }\n        params.resizable = common.isUndefined(params.parent) && params.resizable;\n        if (params.autoPlace && common.isUndefined(params.scrollable)) {\n            params.scrollable = true;\n        }\n        let useLocalStorage = SUPPORTS_LOCAL_STORAGE && localStorage.getItem(getLocalStorageHash(this, 'isLocal')) === 'true';\n        let saveToLocalStorage;\n        let titleRow;\n        Object.defineProperties(this, {\n            parent: {\n                get: function () {\n                    return params.parent;\n                }\n            },\n            scrollable: {\n                get: function () {\n                    return params.scrollable;\n                }\n            },\n            autoPlace: {\n                get: function () {\n                    return params.autoPlace;\n                }\n            },\n            closeOnTop: {\n                get: function () {\n                    return params.closeOnTop;\n                }\n            },\n            preset: {\n                get: function () {\n                    if (_this.parent) {\n                        return _this.getRoot().preset;\n                    }\n                    return params.load.preset;\n                },\n                set: function (v) {\n                    if (_this.parent) {\n                        _this.getRoot().preset = v;\n                    } else {\n                        params.load.preset = v;\n                    }\n                    setPresetSelectIndex(this);\n                    _this.revert();\n                }\n            },\n            width: {\n                get: function () {\n                    return params.width;\n                },\n                set: function (v) {\n                    params.width = v;\n                    setWidth(_this, v);\n                }\n            },\n            name: {\n                get: function () {\n                    return params.name;\n                },\n                set: function (v) {\n                    params.name = v;\n                    if (titleRow) {\n                        titleRow.innerHTML = params.name;\n                    }\n                }\n            },\n            closed: {\n                get: function () {\n                    return params.closed;\n                },\n                set: function (v) {\n                    params.closed = v;\n                    if (params.closed) {\n                        dom.addClass(_this.__ul, GUI.CLASS_CLOSED);\n                    } else {\n                        dom.removeClass(_this.__ul, GUI.CLASS_CLOSED);\n                    }\n                    this.onResize();\n                    if (_this.__closeButton) {\n                        _this.__closeButton.innerHTML = v ? GUI.TEXT_OPEN : GUI.TEXT_CLOSED;\n                    }\n                }\n            },\n            load: {\n                get: function () {\n                    return params.load;\n                }\n            },\n            useLocalStorage: {\n                get: function () {\n                    return useLocalStorage;\n                },\n                set: function (bool) {\n                    if (SUPPORTS_LOCAL_STORAGE) {\n                        useLocalStorage = bool;\n                        if (bool) {\n                            dom.bind(window, 'unload', saveToLocalStorage);\n                        } else {\n                            dom.unbind(window, 'unload', saveToLocalStorage);\n                        }\n                        localStorage.setItem(getLocalStorageHash(_this, 'isLocal'), bool);\n                    }\n                }\n            }\n        });\n        if (common.isUndefined(params.parent)) {\n            this.closed = params.closed || false;\n            dom.addClass(this.domElement, GUI.CLASS_MAIN);\n            dom.makeSelectable(this.domElement, false);\n            if (SUPPORTS_LOCAL_STORAGE) {\n                if (useLocalStorage) {\n                    _this.useLocalStorage = true;\n                    const savedGui = localStorage.getItem(getLocalStorageHash(this, 'gui'));\n                    if (savedGui) {\n                        params.load = JSON.parse(savedGui);\n                    }\n                }\n            }\n            this.__closeButton = document.createElement('div');\n            this.__closeButton.innerHTML = GUI.TEXT_CLOSED;\n            dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BUTTON);\n            if (params.closeOnTop) {\n                dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_TOP);\n                this.domElement.insertBefore(this.__closeButton, this.domElement.childNodes[0]);\n            } else {\n                dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BOTTOM);\n                this.domElement.appendChild(this.__closeButton);\n            }\n            dom.bind(this.__closeButton, 'click', function () {\n                _this.closed = !_this.closed;\n            });\n        } else {\n            if (params.closed === undefined) {\n                params.closed = true;\n            }\n            const titleRowName = document.createTextNode(params.name);\n            dom.addClass(titleRowName, 'controller-name');\n            titleRow = addRow(_this, titleRowName);\n            const onClickTitle = function (e) {\n                e.preventDefault();\n                _this.closed = !_this.closed;\n                return false;\n            };\n            dom.addClass(this.__ul, GUI.CLASS_CLOSED);\n            dom.addClass(titleRow, 'title');\n            dom.bind(titleRow, 'click', onClickTitle);\n            if (!params.closed) {\n                this.closed = false;\n            }\n        }\n        if (params.autoPlace) {\n            if (common.isUndefined(params.parent)) {\n                if (autoPlaceVirgin) {\n                    autoPlaceContainer = document.createElement('div');\n                    dom.addClass(autoPlaceContainer, CSS_NAMESPACE);\n                    dom.addClass(autoPlaceContainer, GUI.CLASS_AUTO_PLACE_CONTAINER);\n                    document.body.appendChild(autoPlaceContainer);\n                    autoPlaceVirgin = false;\n                }\n                autoPlaceContainer.appendChild(this.domElement);\n                dom.addClass(this.domElement, GUI.CLASS_AUTO_PLACE);\n            }\n            if (!this.parent) {\n                setWidth(_this, params.width);\n            }\n        }\n        this.__resizeHandler = function () {\n            _this.onResizeDebounced();\n        };\n        dom.bind(window, 'resize', this.__resizeHandler);\n        dom.bind(this.__ul, 'webkitTransitionEnd', this.__resizeHandler);\n        dom.bind(this.__ul, 'transitionend', this.__resizeHandler);\n        dom.bind(this.__ul, 'oTransitionEnd', this.__resizeHandler);\n        this.onResize();\n        if (params.resizable) {\n            addResizeHandle(this);\n        }\n        saveToLocalStorage = function () {\n            if (SUPPORTS_LOCAL_STORAGE && localStorage.getItem(getLocalStorageHash(_this, 'isLocal')) === 'true') {\n                localStorage.setItem(getLocalStorageHash(_this, 'gui'), JSON.stringify(_this.getSaveObject()));\n            }\n        };\n        this.saveToLocalStorageIfPossible = saveToLocalStorage;\n        function resetWidth() {\n            const root = _this.getRoot();\n            root.width += 1;\n            common.defer(function () {\n                root.width -= 1;\n            });\n        }\n        if (!params.parent) {\n            resetWidth();\n        }\n    };\n    GUI.toggleHide = function () {\n        hide = !hide;\n        common.each(hideableGuis, function (gui) {\n            gui.domElement.style.display = hide ? 'none' : '';\n        });\n    };\n    GUI.CLASS_AUTO_PLACE = 'a';\n    GUI.CLASS_AUTO_PLACE_CONTAINER = 'ac';\n    GUI.CLASS_MAIN = 'main';\n    GUI.CLASS_CONTROLLER_ROW = 'cr';\n    GUI.CLASS_TOO_TALL = 'taller-than-window';\n    GUI.CLASS_CLOSED = 'closed';\n    GUI.CLASS_CLOSE_BUTTON = 'close-button';\n    GUI.CLASS_CLOSE_TOP = 'close-top';\n    GUI.CLASS_CLOSE_BOTTOM = 'close-bottom';\n    GUI.CLASS_DRAG = 'drag';\n    GUI.DEFAULT_WIDTH = 245;\n    GUI.TEXT_CLOSED = 'Close Controls';\n    GUI.TEXT_OPEN = 'Open Controls';\n    GUI._keydownHandler = function (e) {\n        if (document.activeElement.type !== 'text' && (e.which === HIDE_KEY_CODE || e.keyCode === HIDE_KEY_CODE)) {\n            GUI.toggleHide();\n        }\n    };\n    dom.bind(window, 'keydown', GUI._keydownHandler, false);\n    common.extend(GUI.prototype, {\n        add: function (object, property) {\n            return add(this, object, property, { factoryArgs: Array.prototype.slice.call(arguments, 2) });\n        },\n        addColor: function (object, property) {\n            return add(this, object, property, { color: true });\n        },\n        remove: function (controller) {\n            this.__ul.removeChild(controller.__li);\n            this.__controllers.splice(this.__controllers.indexOf(controller), 1);\n            const _this = this;\n            common.defer(function () {\n                _this.onResize();\n            });\n        },\n        destroy: function () {\n            if (this.parent) {\n                throw new Error('Only the root GUI should be removed with .destroy(). ' + 'For subfolders, use gui.removeFolder(folder) instead.');\n            }\n            if (this.autoPlace) {\n                autoPlaceContainer.removeChild(this.domElement);\n            }\n            const _this = this;\n            common.each(this.__folders, function (subfolder) {\n                _this.removeFolder(subfolder);\n            });\n            dom.unbind(window, 'keydown', GUI._keydownHandler, false);\n            removeListeners(this);\n        },\n        addFolder: function (name) {\n            if (this.__folders[name] !== undefined) {\n                throw new Error('You already have a folder in this GUI by the' + ' name \"' + name + '\"');\n            }\n            const newGuiParams = {\n                name: name,\n                parent: this\n            };\n            newGuiParams.autoPlace = this.autoPlace;\n            if (this.load && this.load.folders && this.load.folders[name]) {\n                newGuiParams.closed = this.load.folders[name].closed;\n                newGuiParams.load = this.load.folders[name];\n            }\n            const gui = new GUI(newGuiParams);\n            this.__folders[name] = gui;\n            const li = addRow(this, gui.domElement);\n            dom.addClass(li, 'folder');\n            return gui;\n        },\n        removeFolder: function (folder) {\n            this.__ul.removeChild(folder.domElement.parentElement);\n            delete this.__folders[folder.name];\n            if (this.load && this.load.folders && this.load.folders[folder.name]) {\n                delete this.load.folders[folder.name];\n            }\n            removeListeners(folder);\n            const _this = this;\n            common.each(folder.__folders, function (subfolder) {\n                folder.removeFolder(subfolder);\n            });\n            common.defer(function () {\n                _this.onResize();\n            });\n        },\n        open: function () {\n            this.closed = false;\n        },\n        close: function () {\n            this.closed = true;\n        },\n        hide: function () {\n            this.domElement.style.display = 'none';\n        },\n        show: function () {\n            this.domElement.style.display = '';\n        },\n        onResize: function () {\n            const root = this.getRoot();\n            if (root.scrollable) {\n                const top = dom.getOffset(root.__ul).top;\n                let h = 0;\n                common.each(root.__ul.childNodes, function (node) {\n                    if (!(root.autoPlace && node === root.__save_row)) {\n                        h += dom.getHeight(node);\n                    }\n                });\n                if (window.innerHeight - top - CLOSE_BUTTON_HEIGHT < h) {\n                    dom.addClass(root.domElement, GUI.CLASS_TOO_TALL);\n                    root.__ul.style.height = window.innerHeight - top - CLOSE_BUTTON_HEIGHT + 'px';\n                } else {\n                    dom.removeClass(root.domElement, GUI.CLASS_TOO_TALL);\n                    root.__ul.style.height = 'auto';\n                }\n            }\n            if (root.__resize_handle) {\n                common.defer(function () {\n                    root.__resize_handle.style.height = root.__ul.offsetHeight + 'px';\n                });\n            }\n            if (root.__closeButton) {\n                root.__closeButton.style.width = root.width + 'px';\n            }\n        },\n        onResizeDebounced: common.debounce(function () {\n            this.onResize();\n        }, 50),\n        remember: function () {\n            if (common.isUndefined(SAVE_DIALOGUE)) {\n                SAVE_DIALOGUE = new CenteredDiv();\n                SAVE_DIALOGUE.domElement.innerHTML = saveDialogueContents;\n            }\n            if (this.parent) {\n                throw new Error('You can only call remember on a top level GUI.');\n            }\n            const _this = this;\n            common.each(Array.prototype.slice.call(arguments), function (object) {\n                if (_this.__rememberedObjects.length === 0) {\n                    addSaveMenu(_this);\n                }\n                if (_this.__rememberedObjects.indexOf(object) === -1) {\n                    _this.__rememberedObjects.push(object);\n                }\n            });\n            if (this.autoPlace) {\n                setWidth(this, this.width);\n            }\n        },\n        getRoot: function () {\n            let gui = this;\n            while (gui.parent) {\n                gui = gui.parent;\n            }\n            return gui;\n        },\n        getSaveObject: function () {\n            const toReturn = this.load;\n            toReturn.closed = this.closed;\n            if (this.__rememberedObjects.length > 0) {\n                toReturn.preset = this.preset;\n                if (!toReturn.remembered) {\n                    toReturn.remembered = {};\n                }\n                toReturn.remembered[this.preset] = getCurrentPreset(this);\n            }\n            toReturn.folders = {};\n            common.each(this.__folders, function (element, key) {\n                toReturn.folders[key] = element.getSaveObject();\n            });\n            return toReturn;\n        },\n        save: function () {\n            if (!this.load.remembered) {\n                this.load.remembered = {};\n            }\n            this.load.remembered[this.preset] = getCurrentPreset(this);\n            markPresetModified(this, false);\n            this.saveToLocalStorageIfPossible();\n        },\n        saveAs: function (presetName) {\n            if (!this.load.remembered) {\n                this.load.remembered = {};\n                this.load.remembered[DEFAULT_DEFAULT_PRESET_NAME] = getCurrentPreset(this, true);\n            }\n            this.load.remembered[presetName] = getCurrentPreset(this);\n            this.preset = presetName;\n            addPresetOption(this, presetName, true);\n            this.saveToLocalStorageIfPossible();\n        },\n        revert: function (gui) {\n            common.each(this.__controllers, function (controller) {\n                if (!this.getRoot().load.remembered) {\n                    controller.setValue(controller.initialValue);\n                } else {\n                    recallSavedValue(gui || this.getRoot(), controller);\n                }\n                if (controller.__onFinishChange) {\n                    controller.__onFinishChange.call(controller, controller.getValue());\n                }\n            }, this);\n            common.each(this.__folders, function (folder) {\n                folder.revert(folder);\n            });\n            if (!gui) {\n                markPresetModified(this.getRoot(), false);\n            }\n        },\n        listen: function (controller) {\n            const init = this.__listening.length === 0;\n            this.__listening.push(controller);\n            if (init) {\n                updateDisplays(this.__listening);\n            }\n        },\n        updateDisplay: function () {\n            common.each(this.__controllers, function (controller) {\n                controller.updateDisplay();\n            });\n            common.each(this.__folders, function (folder) {\n                folder.updateDisplay();\n            });\n        }\n    });\n    function addRow(gui, newDom, liBefore) {\n        const li = document.createElement('li');\n        if (newDom) {\n            li.appendChild(newDom);\n        }\n        if (liBefore) {\n            gui.__ul.insertBefore(li, liBefore);\n        } else {\n            gui.__ul.appendChild(li);\n        }\n        gui.onResize();\n        return li;\n    }\n    function removeListeners(gui) {\n        dom.unbind(window, 'resize', gui.__resizeHandler);\n        if (gui.saveToLocalStorageIfPossible) {\n            dom.unbind(window, 'unload', gui.saveToLocalStorageIfPossible);\n        }\n    }\n    function markPresetModified(gui, modified) {\n        const opt = gui.__preset_select[gui.__preset_select.selectedIndex];\n        if (modified) {\n            opt.innerHTML = opt.value + '*';\n        } else {\n            opt.innerHTML = opt.value;\n        }\n    }\n    function augmentController(gui, li, controller) {\n        controller.__li = li;\n        controller.__gui = gui;\n        common.extend(controller, {\n            options: function (options) {\n                if (arguments.length > 1) {\n                    const nextSibling = controller.__li.nextElementSibling;\n                    controller.remove();\n                    return add(gui, controller.object, controller.property, {\n                        before: nextSibling,\n                        factoryArgs: [common.toArray(arguments)]\n                    });\n                }\n                if (common.isArray(options) || common.isObject(options)) {\n                    const nextSibling = controller.__li.nextElementSibling;\n                    controller.remove();\n                    return add(gui, controller.object, controller.property, {\n                        before: nextSibling,\n                        factoryArgs: [options]\n                    });\n                }\n            },\n            name: function (name) {\n                controller.__li.firstElementChild.firstElementChild.innerHTML = name;\n                return controller;\n            },\n            listen: function () {\n                controller.__gui.listen(controller);\n                return controller;\n            },\n            remove: function () {\n                controller.__gui.remove(controller);\n                return controller;\n            }\n        });\n        if (controller instanceof NumberControllerSlider) {\n            const box = new NumberControllerBox(controller.object, controller.property, {\n                min: controller.__min,\n                max: controller.__max,\n                step: controller.__step\n            });\n            common.each([\n                'updateDisplay',\n                'onChange',\n                'onFinishChange',\n                'step',\n                'min',\n                'max'\n            ], function (method) {\n                const pc = controller[method];\n                const pb = box[method];\n                controller[method] = box[method] = function () {\n                    const args = Array.prototype.slice.call(arguments);\n                    pb.apply(box, args);\n                    return pc.apply(controller, args);\n                };\n            });\n            dom.addClass(li, 'has-slider');\n            controller.domElement.insertBefore(box.domElement, controller.domElement.firstElementChild);\n        } else if (controller instanceof NumberControllerBox) {\n            const r = function (returned) {\n                if (common.isNumber(controller.__min) && common.isNumber(controller.__max)) {\n                    const oldName = controller.__li.firstElementChild.firstElementChild.innerHTML;\n                    const wasListening = controller.__gui.__listening.indexOf(controller) > -1;\n                    controller.remove();\n                    const newController = add(gui, controller.object, controller.property, {\n                        before: controller.__li.nextElementSibling,\n                        factoryArgs: [\n                            controller.__min,\n                            controller.__max,\n                            controller.__step\n                        ]\n                    });\n                    newController.name(oldName);\n                    if (wasListening)\n                        newController.listen();\n                    return newController;\n                }\n                return returned;\n            };\n            controller.min = common.compose(r, controller.min);\n            controller.max = common.compose(r, controller.max);\n        } else if (controller instanceof BooleanController) {\n            dom.bind(li, 'click', function () {\n                dom.fakeEvent(controller.__checkbox, 'click');\n            });\n            dom.bind(controller.__checkbox, 'click', function (e) {\n                e.stopPropagation();\n            });\n        } else if (controller instanceof FunctionController) {\n            dom.bind(li, 'click', function () {\n                dom.fakeEvent(controller.__button, 'click');\n            });\n            dom.bind(li, 'mouseover', function () {\n                dom.addClass(controller.__button, 'hover');\n            });\n            dom.bind(li, 'mouseout', function () {\n                dom.removeClass(controller.__button, 'hover');\n            });\n        } else if (controller instanceof ColorController) {\n            dom.addClass(li, 'color');\n            controller.updateDisplay = common.compose(function (val) {\n                li.style.borderLeftColor = controller.getValue(); //controller.__color.toString();\n                return val;\n            }, controller.updateDisplay);\n            controller.updateDisplay();\n        }\n        controller.setValue = common.compose(function (val) {\n            if (gui.getRoot().__preset_select && controller.isModified()) {\n                markPresetModified(gui.getRoot(), true);\n            }\n            return val;\n        }, controller.setValue);\n    }\n    function recallSavedValue(gui, controller) {\n        const root = gui.getRoot();\n        const matchedIndex = root.__rememberedObjects.indexOf(controller.object);\n        if (matchedIndex !== -1) {\n            let controllerMap = root.__rememberedObjectIndecesToControllers[matchedIndex];\n            if (controllerMap === undefined) {\n                controllerMap = {};\n                root.__rememberedObjectIndecesToControllers[matchedIndex] = controllerMap;\n            }\n            controllerMap[controller.property] = controller;\n            if (root.load && root.load.remembered) {\n                const presetMap = root.load.remembered;\n                let preset;\n                if (presetMap[gui.preset]) {\n                    preset = presetMap[gui.preset];\n                } else if (presetMap[DEFAULT_DEFAULT_PRESET_NAME]) {\n                    preset = presetMap[DEFAULT_DEFAULT_PRESET_NAME];\n                } else {\n                    return;\n                }\n                if (preset[matchedIndex] && preset[matchedIndex][controller.property] !== undefined) {\n                    const value = preset[matchedIndex][controller.property];\n                    controller.initialValue = value;\n                    controller.setValue(value);\n                }\n            }\n        }\n    }\n    function add(gui, object, property, params) {\n        if (object[property] === undefined) {\n            throw new Error(`Object \"${ object }\" has no property \"${ property }\"`);\n        }\n        let controller;\n        if (params.color) {\n            controller = new ColorController(object, property);\n        } else {\n            const factoryArgs = [\n                object,\n                property\n            ].concat(params.factoryArgs);\n            controller = ControllerFactory.apply(gui, factoryArgs);\n        }\n        if (params.before instanceof Controller) {\n            params.before = params.before.__li;\n        }\n        recallSavedValue(gui, controller);\n        dom.addClass(controller.domElement, 'c');\n        const name = document.createElement('span');\n        dom.addClass(name, 'property-name');\n        name.innerHTML = controller.property;\n        const container = document.createElement('div');\n        container.appendChild(name);\n        container.appendChild(controller.domElement);\n        const li = addRow(gui, container, params.before);\n        dom.addClass(li, GUI.CLASS_CONTROLLER_ROW);\n        if (controller instanceof ColorController) {\n            dom.addClass(li, 'color');\n        } else {\n            dom.addClass(li, typeof controller.getValue());\n        }\n        augmentController(gui, li, controller);\n        gui.__controllers.push(controller);\n        return controller;\n    }\n    function getLocalStorageHash(gui, key) {\n        return document.location.href + '.' + key;\n    }\n    function addPresetOption(gui, name, setSelected) {\n        const opt = document.createElement('option');\n        opt.innerHTML = name;\n        opt.value = name;\n        gui.__preset_select.appendChild(opt);\n        if (setSelected) {\n            gui.__preset_select.selectedIndex = gui.__preset_select.length - 1;\n        }\n    }\n    function showHideExplain(gui, explain) {\n        explain.style.display = gui.useLocalStorage ? 'block' : 'none';\n    }\n    function addSaveMenu(gui) {\n        const div = gui.__save_row = document.createElement('li');\n        dom.addClass(gui.domElement, 'has-save');\n        gui.__ul.insertBefore(div, gui.__ul.firstChild);\n        dom.addClass(div, 'save-row');\n        const gears = document.createElement('span');\n        gears.innerHTML = '&nbsp;';\n        dom.addClass(gears, 'button gears');\n        const button = document.createElement('span');\n        button.innerHTML = 'Save';\n        dom.addClass(button, 'button');\n        dom.addClass(button, 'save');\n        const button2 = document.createElement('span');\n        button2.innerHTML = 'New';\n        dom.addClass(button2, 'button');\n        dom.addClass(button2, 'save-as');\n        const button3 = document.createElement('span');\n        button3.innerHTML = 'Revert';\n        dom.addClass(button3, 'button');\n        dom.addClass(button3, 'revert');\n        const select = gui.__preset_select = document.createElement('select');\n        if (gui.load && gui.load.remembered) {\n            common.each(gui.load.remembered, function (value, key) {\n                addPresetOption(gui, key, key === gui.preset);\n            });\n        } else {\n            addPresetOption(gui, DEFAULT_DEFAULT_PRESET_NAME, false);\n        }\n        dom.bind(select, 'change', function () {\n            for (let index = 0; index < gui.__preset_select.length; index++) {\n                gui.__preset_select[index].innerHTML = gui.__preset_select[index].value;\n            }\n            gui.preset = this.value;\n        });\n        div.appendChild(select);\n        div.appendChild(gears);\n        div.appendChild(button);\n        div.appendChild(button2);\n        div.appendChild(button3);\n        if (SUPPORTS_LOCAL_STORAGE) {\n            const explain = document.getElementById('dg-local-explain');\n            const localStorageCheckBox = document.getElementById('dg-local-storage');\n            const saveLocally = document.getElementById('dg-save-locally');\n            saveLocally.style.display = 'block';\n            if (localStorage.getItem(getLocalStorageHash(gui, 'isLocal')) === 'true') {\n                localStorageCheckBox.setAttribute('checked', 'checked');\n            }\n            showHideExplain(gui, explain);\n            dom.bind(localStorageCheckBox, 'change', function () {\n                gui.useLocalStorage = !gui.useLocalStorage;\n                showHideExplain(gui, explain);\n            });\n        }\n        const newConstructorTextArea = document.getElementById('dg-new-constructor');\n        dom.bind(newConstructorTextArea, 'keydown', function (e) {\n            if (e.metaKey && (e.which === 67 || e.keyCode === 67)) {\n                SAVE_DIALOGUE.hide();\n            }\n        });\n        dom.bind(gears, 'click', function () {\n            newConstructorTextArea.innerHTML = JSON.stringify(gui.getSaveObject(), undefined, 2);\n            SAVE_DIALOGUE.show();\n            newConstructorTextArea.focus();\n            newConstructorTextArea.select();\n        });\n        dom.bind(button, 'click', function () {\n            gui.save();\n        });\n        dom.bind(button2, 'click', function () {\n            const presetName = prompt('Enter a new preset name.');\n            if (presetName) {\n                gui.saveAs(presetName);\n            }\n        });\n        dom.bind(button3, 'click', function () {\n            gui.revert();\n        });\n    }\n    function addResizeHandle(gui) {\n        let pmouseX;\n        gui.__resize_handle = document.createElement('div');\n        common.extend(gui.__resize_handle.style, {\n            width: '6px',\n            marginLeft: '-3px',\n            height: '200px',\n            cursor: 'ew-resize',\n            position: 'absolute'\n        });\n        function drag(e) {\n            e.preventDefault();\n            gui.width += pmouseX - e.clientX;\n            gui.onResize();\n            pmouseX = e.clientX;\n            return false;\n        }\n        function dragStop() {\n            dom.removeClass(gui.__closeButton, GUI.CLASS_DRAG);\n            dom.unbind(window, 'mousemove', drag);\n            dom.unbind(window, 'mouseup', dragStop);\n        }\n        function dragStart(e) {\n            e.preventDefault();\n            pmouseX = e.clientX;\n            dom.addClass(gui.__closeButton, GUI.CLASS_DRAG);\n            dom.bind(window, 'mousemove', drag);\n            dom.bind(window, 'mouseup', dragStop);\n            return false;\n        }\n        dom.bind(gui.__resize_handle, 'mousedown', dragStart);\n        dom.bind(gui.__closeButton, 'mousedown', dragStart);\n        gui.domElement.insertBefore(gui.__resize_handle, gui.domElement.firstElementChild);\n    }\n    function setWidth(gui, w) {\n        gui.domElement.style.width = w + 'px';\n        if (gui.__save_row && gui.autoPlace) {\n            gui.__save_row.style.width = w + 'px';\n        }\n        if (gui.__closeButton) {\n            gui.__closeButton.style.width = w + 'px';\n        }\n    }\n    function getCurrentPreset(gui, useInitialValues) {\n        const toReturn = {};\n        common.each(gui.__rememberedObjects, function (val, index) {\n            const savedValues = {};\n            const controllerMap = gui.__rememberedObjectIndecesToControllers[index];\n            common.each(controllerMap, function (controller, property) {\n                savedValues[property] = useInitialValues ? controller.initialValue : controller.getValue();\n            });\n            toReturn[index] = savedValues;\n        });\n        return toReturn;\n    }\n    function setPresetSelectIndex(gui) {\n        for (let index = 0; index < gui.__preset_select.length; index++) {\n            if (gui.__preset_select[index].value === gui.preset) {\n                gui.__preset_select.selectedIndex = index;\n            }\n        }\n    }\n    function updateDisplays(controllerArray) {\n        if (controllerArray.length !== 0) {\n            requestAnimationFrame.call(window, function () {\n                updateDisplays(controllerArray);\n            });\n        }\n        common.each(controllerArray, function (c) {\n            c.updateDisplay();\n        });\n    }\n    return GUI;\n});\ndefine('skylark-datgui/main',[\n    \"skylark-langx-ns\",\n    './controllers/Controller',\n    './controllers/BooleanController',\n    './controllers/OptionController',\n    './controllers/StringController',\n    './controllers/NumberController',\n    './controllers/NumberControllerBox',\n    './controllers/NumberControllerSlider',\n    './controllers/FunctionController',\n    './controllers/ColorController',\n    './dom/dom',\n    './gui/GUI'\n], function (skylark,Controller, BooleanController, OptionController, StringController, NumberController, NumberControllerBox, NumberControllerSlider, FunctionController, ColorController, domImport, GUIImport) {\n    'use strict';\n\n    const controllers = {\n        Controller: Controller,\n        BooleanController: BooleanController,\n        OptionController: OptionController,\n        StringController: StringController,\n        NumberController: NumberController,\n        NumberControllerBox: NumberControllerBox,\n        NumberControllerSlider: NumberControllerSlider,\n        FunctionController: FunctionController,\n        ColorController: ColorController\n    };\n    const dom = { dom: domImport };\n    const gui = { GUI: GUIImport };\n    const GUI = GUIImport;\n    return skylark.attach(\"intg.datgui\",{\n        controllers,\n        dom,\n        gui,\n        GUI\n    });\n});\ndefine('skylark-datgui', ['skylark-datgui/main'], function (main) { return main; });\n\n"]}